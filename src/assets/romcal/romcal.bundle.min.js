!(function (e, a) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = a())
    : "function" == typeof define && define.amd
    ? define([], a)
    : "object" == typeof exports
    ? (exports.Romcal = a())
    : (e.Romcal = a());
})(window, function () {
  return (function (e) {
    var a = {};
    function t(n) {
      if (a[n]) return a[n].exports;
      var i = (a[n] = { i: n, l: !1, exports: {} });
      return e[n].call(i.exports, i, i.exports, t), (i.l = !0), i.exports;
    }
    return (
      (t.m = e),
      (t.c = a),
      (t.d = function (e, a, n) {
        t.o(e, a) || Object.defineProperty(e, a, { enumerable: !0, get: n });
      }),
      (t.r = function (e) {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      }),
      (t.t = function (e, a) {
        if ((1 & a && (e = t(e)), 8 & a)) return e;
        if (4 & a && "object" == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (
          (t.r(n),
          Object.defineProperty(n, "default", { enumerable: !0, value: e }),
          2 & a && "string" != typeof e)
        )
          for (var i in e)
            t.d(
              n,
              i,
              function (a) {
                return e[a];
              }.bind(null, i)
            );
        return n;
      }),
      (t.n = function (e) {
        var a =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return t.d(a, "a", a), a;
      }),
      (t.o = function (e, a) {
        return Object.prototype.hasOwnProperty.call(e, a);
      }),
      (t.p = ""),
      t((t.s = 134))
    );
  })([
    function (e, a, t) {
      (function (e) {
        e.exports = (function () {
          "use strict";
          var a, n;
          function i() {
            return a.apply(null, arguments);
          }
          function r(e) {
            return (
              e instanceof Array ||
              "[object Array]" === Object.prototype.toString.call(e)
            );
          }
          function o(e) {
            return (
              null != e &&
              "[object Object]" === Object.prototype.toString.call(e)
            );
          }
          function s(e) {
            return void 0 === e;
          }
          function d(e) {
            return (
              "number" == typeof e ||
              "[object Number]" === Object.prototype.toString.call(e)
            );
          }
          function u(e) {
            return (
              e instanceof Date ||
              "[object Date]" === Object.prototype.toString.call(e)
            );
          }
          function l(e, a) {
            var t,
              n = [];
            for (t = 0; t < e.length; ++t) n.push(a(e[t], t));
            return n;
          }
          function m(e, a) {
            return Object.prototype.hasOwnProperty.call(e, a);
          }
          function y(e, a) {
            for (var t in a) m(a, t) && (e[t] = a[t]);
            return (
              m(a, "toString") && (e.toString = a.toString),
              m(a, "valueOf") && (e.valueOf = a.valueOf),
              e
            );
          }
          function c(e, a, t, n) {
            return va(e, a, t, n, !0).utc();
          }
          function h(e) {
            return (
              null == e._pf &&
                (e._pf = {
                  empty: !1,
                  unusedTokens: [],
                  unusedInput: [],
                  overflow: -2,
                  charsLeftOver: 0,
                  nullInput: !1,
                  invalidMonth: null,
                  invalidFormat: !1,
                  userInvalidated: !1,
                  iso: !1,
                  parsedDateParts: [],
                  meridiem: null,
                  rfc2822: !1,
                  weekdayMismatch: !1,
                }),
              e._pf
            );
          }
          function _(e) {
            if (null == e._isValid) {
              var a = h(e),
                t = n.call(a.parsedDateParts, function (e) {
                  return null != e;
                }),
                i =
                  !isNaN(e._d.getTime()) &&
                  a.overflow < 0 &&
                  !a.empty &&
                  !a.invalidMonth &&
                  !a.invalidWeekday &&
                  !a.weekdayMismatch &&
                  !a.nullInput &&
                  !a.invalidFormat &&
                  !a.userInvalidated &&
                  (!a.meridiem || (a.meridiem && t));
              if (
                (e._strict &&
                  (i =
                    i &&
                    0 === a.charsLeftOver &&
                    0 === a.unusedTokens.length &&
                    void 0 === a.bigHour),
                null != Object.isFrozen && Object.isFrozen(e))
              )
                return i;
              e._isValid = i;
            }
            return e._isValid;
          }
          function M(e) {
            var a = c(NaN);
            return null != e ? y(h(a), e) : (h(a).userInvalidated = !0), a;
          }
          n = Array.prototype.some
            ? Array.prototype.some
            : function (e) {
                for (
                  var a = Object(this), t = a.length >>> 0, n = 0;
                  n < t;
                  n++
                )
                  if (n in a && e.call(this, a[n], n, a)) return !0;
                return !1;
              };
          var p = (i.momentProperties = []);
          function f(e, a) {
            var t, n, i;
            if (
              (s(a._isAMomentObject) ||
                (e._isAMomentObject = a._isAMomentObject),
              s(a._i) || (e._i = a._i),
              s(a._f) || (e._f = a._f),
              s(a._l) || (e._l = a._l),
              s(a._strict) || (e._strict = a._strict),
              s(a._tzm) || (e._tzm = a._tzm),
              s(a._isUTC) || (e._isUTC = a._isUTC),
              s(a._offset) || (e._offset = a._offset),
              s(a._pf) || (e._pf = h(a)),
              s(a._locale) || (e._locale = a._locale),
              p.length > 0)
            )
              for (t = 0; t < p.length; t++)
                s((i = a[(n = p[t])])) || (e[n] = i);
            return e;
          }
          var g = !1;
          function k(e) {
            f(this, e),
              (this._d = new Date(null != e._d ? e._d.getTime() : NaN)),
              this.isValid() || (this._d = new Date(NaN)),
              !1 === g && ((g = !0), i.updateOffset(this), (g = !1));
          }
          function L(e) {
            return e instanceof k || (null != e && null != e._isAMomentObject);
          }
          function O(e) {
            return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
          }
          function T(e) {
            var a = +e,
              t = 0;
            return 0 !== a && isFinite(a) && (t = O(a)), t;
          }
          function v(e, a, t) {
            var n,
              i = Math.min(e.length, a.length),
              r = Math.abs(e.length - a.length),
              o = 0;
            for (n = 0; n < i; n++)
              ((t && e[n] !== a[n]) || (!t && T(e[n]) !== T(a[n]))) && o++;
            return o + r;
          }
          function A(e) {
            !1 === i.suppressDeprecationWarnings &&
              "undefined" != typeof console &&
              console.warn &&
              console.warn("Deprecation warning: " + e);
          }
          function S(e, a) {
            var t = !0;
            return y(function () {
              if (
                (null != i.deprecationHandler && i.deprecationHandler(null, e),
                t)
              ) {
                for (var n, r = [], o = 0; o < arguments.length; o++) {
                  if (((n = ""), "object" == typeof arguments[o])) {
                    for (var s in ((n += "\n[" + o + "] "), arguments[0]))
                      n += s + ": " + arguments[0][s] + ", ";
                    n = n.slice(0, -2);
                  } else n = arguments[o];
                  r.push(n);
                }
                A(
                  e +
                    "\nArguments: " +
                    Array.prototype.slice.call(r).join("") +
                    "\n" +
                    new Error().stack
                ),
                  (t = !1);
              }
              return a.apply(this, arguments);
            }, a);
          }
          var P,
            b = {};
          function E(e, a) {
            null != i.deprecationHandler && i.deprecationHandler(e, a),
              b[e] || (A(a), (b[e] = !0));
          }
          function D(e) {
            return (
              e instanceof Function ||
              "[object Function]" === Object.prototype.toString.call(e)
            );
          }
          function Y(e, a) {
            var t,
              n = y({}, e);
            for (t in a)
              m(a, t) &&
                (o(e[t]) && o(a[t])
                  ? ((n[t] = {}), y(n[t], e[t]), y(n[t], a[t]))
                  : null != a[t]
                  ? (n[t] = a[t])
                  : delete n[t]);
            for (t in e) m(e, t) && !m(a, t) && o(e[t]) && (n[t] = y({}, n[t]));
            return n;
          }
          function w(e) {
            null != e && this.set(e);
          }
          (i.suppressDeprecationWarnings = !1),
            (i.deprecationHandler = null),
            (P = Object.keys
              ? Object.keys
              : function (e) {
                  var a,
                    t = [];
                  for (a in e) m(e, a) && t.push(a);
                  return t;
                });
          var C = {};
          function R(e, a) {
            var t = e.toLowerCase();
            C[t] = C[t + "s"] = C[a] = e;
          }
          function B(e) {
            return "string" == typeof e ? C[e] || C[e.toLowerCase()] : void 0;
          }
          function H(e) {
            var a,
              t,
              n = {};
            for (t in e) m(e, t) && (a = B(t)) && (n[a] = e[t]);
            return n;
          }
          var I = {};
          function z(e, a) {
            I[e] = a;
          }
          function j(e, a, t) {
            var n = "" + Math.abs(e),
              i = a - n.length;
            return (
              (e >= 0 ? (t ? "+" : "") : "-") +
              Math.pow(10, Math.max(0, i)).toString().substr(1) +
              n
            );
          }
          var F =
              /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
            W = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
            J = {},
            V = {};
          function x(e, a, t, n) {
            var i = n;
            "string" == typeof n &&
              (i = function () {
                return this[n]();
              }),
              e && (V[e] = i),
              a &&
                (V[a[0]] = function () {
                  return j(i.apply(this, arguments), a[1], a[2]);
                }),
              t &&
                (V[t] = function () {
                  return this.localeData().ordinal(i.apply(this, arguments), e);
                });
          }
          function N(e, a) {
            return e.isValid()
              ? ((a = G(a, e.localeData())),
                (J[a] =
                  J[a] ||
                  (function (e) {
                    var a,
                      t,
                      n,
                      i = e.match(F);
                    for (a = 0, t = i.length; a < t; a++)
                      V[i[a]]
                        ? (i[a] = V[i[a]])
                        : (i[a] = (n = i[a]).match(/\[[\s\S]/)
                            ? n.replace(/^\[|\]$/g, "")
                            : n.replace(/\\/g, ""));
                    return function (a) {
                      var n,
                        r = "";
                      for (n = 0; n < t; n++)
                        r += D(i[n]) ? i[n].call(a, e) : i[n];
                      return r;
                    };
                  })(a)),
                J[a](e))
              : e.localeData().invalidDate();
          }
          function G(e, a) {
            var t = 5;
            function n(e) {
              return a.longDateFormat(e) || e;
            }
            for (W.lastIndex = 0; t >= 0 && W.test(e); )
              (e = e.replace(W, n)), (W.lastIndex = 0), (t -= 1);
            return e;
          }
          var K = /\d/,
            U = /\d\d/,
            q = /\d{3}/,
            Z = /\d{4}/,
            X = /[+-]?\d{6}/,
            $ = /\d\d?/,
            Q = /\d\d\d\d?/,
            ee = /\d\d\d\d\d\d?/,
            ae = /\d{1,3}/,
            te = /\d{1,4}/,
            ne = /[+-]?\d{1,6}/,
            ie = /\d+/,
            re = /[+-]?\d+/,
            oe = /Z|[+-]\d\d:?\d\d/gi,
            se = /Z|[+-]\d\d(?::?\d\d)?/gi,
            de =
              /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
            ue = {};
          function le(e, a, t) {
            ue[e] = D(a)
              ? a
              : function (e, n) {
                  return e && t ? t : a;
                };
          }
          function me(e, a) {
            return m(ue, e)
              ? ue[e](a._strict, a._locale)
              : new RegExp(
                  ye(
                    e
                      .replace("\\", "")
                      .replace(
                        /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                        function (e, a, t, n, i) {
                          return a || t || n || i;
                        }
                      )
                  )
                );
          }
          function ye(e) {
            return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
          }
          var ce = {};
          function he(e, a) {
            var t,
              n = a;
            for (
              "string" == typeof e && (e = [e]),
                d(a) &&
                  (n = function (e, t) {
                    t[a] = T(e);
                  }),
                t = 0;
              t < e.length;
              t++
            )
              ce[e[t]] = n;
          }
          function _e(e, a) {
            he(e, function (e, t, n, i) {
              (n._w = n._w || {}), a(e, n._w, n, i);
            });
          }
          function Me(e, a, t) {
            null != a && m(ce, e) && ce[e](a, t._a, t, e);
          }
          function pe(e) {
            return fe(e) ? 366 : 365;
          }
          function fe(e) {
            return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0;
          }
          x("Y", 0, 0, function () {
            var e = this.year();
            return e <= 9999 ? "" + e : "+" + e;
          }),
            x(0, ["YY", 2], 0, function () {
              return this.year() % 100;
            }),
            x(0, ["YYYY", 4], 0, "year"),
            x(0, ["YYYYY", 5], 0, "year"),
            x(0, ["YYYYYY", 6, !0], 0, "year"),
            R("year", "y"),
            z("year", 1),
            le("Y", re),
            le("YY", $, U),
            le("YYYY", te, Z),
            le("YYYYY", ne, X),
            le("YYYYYY", ne, X),
            he(["YYYYY", "YYYYYY"], 0),
            he("YYYY", function (e, a) {
              a[0] = 2 === e.length ? i.parseTwoDigitYear(e) : T(e);
            }),
            he("YY", function (e, a) {
              a[0] = i.parseTwoDigitYear(e);
            }),
            he("Y", function (e, a) {
              a[0] = parseInt(e, 10);
            }),
            (i.parseTwoDigitYear = function (e) {
              return T(e) + (T(e) > 68 ? 1900 : 2e3);
            });
          var ge,
            ke = Le("FullYear", !0);
          function Le(e, a) {
            return function (t) {
              return null != t
                ? (Te(this, e, t), i.updateOffset(this, a), this)
                : Oe(this, e);
            };
          }
          function Oe(e, a) {
            return e.isValid()
              ? e._d["get" + (e._isUTC ? "UTC" : "") + a]()
              : NaN;
          }
          function Te(e, a, t) {
            e.isValid() &&
              !isNaN(t) &&
              ("FullYear" === a &&
              fe(e.year()) &&
              1 === e.month() &&
              29 === e.date()
                ? e._d["set" + (e._isUTC ? "UTC" : "") + a](
                    t,
                    e.month(),
                    ve(t, e.month())
                  )
                : e._d["set" + (e._isUTC ? "UTC" : "") + a](t));
          }
          function ve(e, a) {
            if (isNaN(e) || isNaN(a)) return NaN;
            var t,
              n = ((a % (t = 12)) + t) % t;
            return (
              (e += (a - n) / 12),
              1 === n ? (fe(e) ? 29 : 28) : 31 - ((n % 7) % 2)
            );
          }
          (ge = Array.prototype.indexOf
            ? Array.prototype.indexOf
            : function (e) {
                var a;
                for (a = 0; a < this.length; ++a) if (this[a] === e) return a;
                return -1;
              }),
            x("M", ["MM", 2], "Mo", function () {
              return this.month() + 1;
            }),
            x("MMM", 0, 0, function (e) {
              return this.localeData().monthsShort(this, e);
            }),
            x("MMMM", 0, 0, function (e) {
              return this.localeData().months(this, e);
            }),
            R("month", "M"),
            z("month", 8),
            le("M", $),
            le("MM", $, U),
            le("MMM", function (e, a) {
              return a.monthsShortRegex(e);
            }),
            le("MMMM", function (e, a) {
              return a.monthsRegex(e);
            }),
            he(["M", "MM"], function (e, a) {
              a[1] = T(e) - 1;
            }),
            he(["MMM", "MMMM"], function (e, a, t, n) {
              var i = t._locale.monthsParse(e, n, t._strict);
              null != i ? (a[1] = i) : (h(t).invalidMonth = e);
            });
          var Ae = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
            Se =
              "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
            Pe = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
          function be(e, a, t) {
            var n,
              i,
              r,
              o = e.toLocaleLowerCase();
            if (!this._monthsParse)
              for (
                this._monthsParse = [],
                  this._longMonthsParse = [],
                  this._shortMonthsParse = [],
                  n = 0;
                n < 12;
                ++n
              )
                (r = c([2e3, n])),
                  (this._shortMonthsParse[n] = this.monthsShort(
                    r,
                    ""
                  ).toLocaleLowerCase()),
                  (this._longMonthsParse[n] = this.months(
                    r,
                    ""
                  ).toLocaleLowerCase());
            return t
              ? "MMM" === a
                ? -1 !== (i = ge.call(this._shortMonthsParse, o))
                  ? i
                  : null
                : -1 !== (i = ge.call(this._longMonthsParse, o))
                ? i
                : null
              : "MMM" === a
              ? -1 !== (i = ge.call(this._shortMonthsParse, o))
                ? i
                : -1 !== (i = ge.call(this._longMonthsParse, o))
                ? i
                : null
              : -1 !== (i = ge.call(this._longMonthsParse, o))
              ? i
              : -1 !== (i = ge.call(this._shortMonthsParse, o))
              ? i
              : null;
          }
          function Ee(e, a) {
            var t;
            if (!e.isValid()) return e;
            if ("string" == typeof a)
              if (/^\d+$/.test(a)) a = T(a);
              else if (!d((a = e.localeData().monthsParse(a)))) return e;
            return (
              (t = Math.min(e.date(), ve(e.year(), a))),
              e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](a, t),
              e
            );
          }
          function De(e) {
            return null != e
              ? (Ee(this, e), i.updateOffset(this, !0), this)
              : Oe(this, "Month");
          }
          var Ye = de,
            we = de;
          function Ce() {
            function e(e, a) {
              return a.length - e.length;
            }
            var a,
              t,
              n = [],
              i = [],
              r = [];
            for (a = 0; a < 12; a++)
              (t = c([2e3, a])),
                n.push(this.monthsShort(t, "")),
                i.push(this.months(t, "")),
                r.push(this.months(t, "")),
                r.push(this.monthsShort(t, ""));
            for (n.sort(e), i.sort(e), r.sort(e), a = 0; a < 12; a++)
              (n[a] = ye(n[a])), (i[a] = ye(i[a]));
            for (a = 0; a < 24; a++) r[a] = ye(r[a]);
            (this._monthsRegex = new RegExp("^(" + r.join("|") + ")", "i")),
              (this._monthsShortRegex = this._monthsRegex),
              (this._monthsStrictRegex = new RegExp(
                "^(" + i.join("|") + ")",
                "i"
              )),
              (this._monthsShortStrictRegex = new RegExp(
                "^(" + n.join("|") + ")",
                "i"
              ));
          }
          function Re(e, a, t, n, i, r, o) {
            var s;
            return (
              e < 100 && e >= 0
                ? ((s = new Date(e + 400, a, t, n, i, r, o)),
                  isFinite(s.getFullYear()) && s.setFullYear(e))
                : (s = new Date(e, a, t, n, i, r, o)),
              s
            );
          }
          function Be(e) {
            var a;
            if (e < 100 && e >= 0) {
              var t = Array.prototype.slice.call(arguments);
              (t[0] = e + 400),
                (a = new Date(Date.UTC.apply(null, t))),
                isFinite(a.getUTCFullYear()) && a.setUTCFullYear(e);
            } else a = new Date(Date.UTC.apply(null, arguments));
            return a;
          }
          function He(e, a, t) {
            var n = 7 + a - t;
            return (-(7 + Be(e, 0, n).getUTCDay() - a) % 7) + n - 1;
          }
          function Ie(e, a, t, n, i) {
            var r,
              o,
              s = 1 + 7 * (a - 1) + ((7 + t - n) % 7) + He(e, n, i);
            return (
              s <= 0
                ? (o = pe((r = e - 1)) + s)
                : s > pe(e)
                ? ((r = e + 1), (o = s - pe(e)))
                : ((r = e), (o = s)),
              { year: r, dayOfYear: o }
            );
          }
          function ze(e, a, t) {
            var n,
              i,
              r = He(e.year(), a, t),
              o = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
            return (
              o < 1
                ? (n = o + je((i = e.year() - 1), a, t))
                : o > je(e.year(), a, t)
                ? ((n = o - je(e.year(), a, t)), (i = e.year() + 1))
                : ((i = e.year()), (n = o)),
              { week: n, year: i }
            );
          }
          function je(e, a, t) {
            var n = He(e, a, t),
              i = He(e + 1, a, t);
            return (pe(e) - n + i) / 7;
          }
          function Fe(e, a) {
            return e.slice(a, 7).concat(e.slice(0, a));
          }
          x("w", ["ww", 2], "wo", "week"),
            x("W", ["WW", 2], "Wo", "isoWeek"),
            R("week", "w"),
            R("isoWeek", "W"),
            z("week", 5),
            z("isoWeek", 5),
            le("w", $),
            le("ww", $, U),
            le("W", $),
            le("WW", $, U),
            _e(["w", "ww", "W", "WW"], function (e, a, t, n) {
              a[n.substr(0, 1)] = T(e);
            }),
            x("d", 0, "do", "day"),
            x("dd", 0, 0, function (e) {
              return this.localeData().weekdaysMin(this, e);
            }),
            x("ddd", 0, 0, function (e) {
              return this.localeData().weekdaysShort(this, e);
            }),
            x("dddd", 0, 0, function (e) {
              return this.localeData().weekdays(this, e);
            }),
            x("e", 0, 0, "weekday"),
            x("E", 0, 0, "isoWeekday"),
            R("day", "d"),
            R("weekday", "e"),
            R("isoWeekday", "E"),
            z("day", 11),
            z("weekday", 11),
            z("isoWeekday", 11),
            le("d", $),
            le("e", $),
            le("E", $),
            le("dd", function (e, a) {
              return a.weekdaysMinRegex(e);
            }),
            le("ddd", function (e, a) {
              return a.weekdaysShortRegex(e);
            }),
            le("dddd", function (e, a) {
              return a.weekdaysRegex(e);
            }),
            _e(["dd", "ddd", "dddd"], function (e, a, t, n) {
              var i = t._locale.weekdaysParse(e, n, t._strict);
              null != i ? (a.d = i) : (h(t).invalidWeekday = e);
            }),
            _e(["d", "e", "E"], function (e, a, t, n) {
              a[n] = T(e);
            });
          var We =
              "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
            Je = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            Ve = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
          function xe(e, a, t) {
            var n,
              i,
              r,
              o = e.toLocaleLowerCase();
            if (!this._weekdaysParse)
              for (
                this._weekdaysParse = [],
                  this._shortWeekdaysParse = [],
                  this._minWeekdaysParse = [],
                  n = 0;
                n < 7;
                ++n
              )
                (r = c([2e3, 1]).day(n)),
                  (this._minWeekdaysParse[n] = this.weekdaysMin(
                    r,
                    ""
                  ).toLocaleLowerCase()),
                  (this._shortWeekdaysParse[n] = this.weekdaysShort(
                    r,
                    ""
                  ).toLocaleLowerCase()),
                  (this._weekdaysParse[n] = this.weekdays(
                    r,
                    ""
                  ).toLocaleLowerCase());
            return t
              ? "dddd" === a
                ? -1 !== (i = ge.call(this._weekdaysParse, o))
                  ? i
                  : null
                : "ddd" === a
                ? -1 !== (i = ge.call(this._shortWeekdaysParse, o))
                  ? i
                  : null
                : -1 !== (i = ge.call(this._minWeekdaysParse, o))
                ? i
                : null
              : "dddd" === a
              ? -1 !== (i = ge.call(this._weekdaysParse, o))
                ? i
                : -1 !== (i = ge.call(this._shortWeekdaysParse, o))
                ? i
                : -1 !== (i = ge.call(this._minWeekdaysParse, o))
                ? i
                : null
              : "ddd" === a
              ? -1 !== (i = ge.call(this._shortWeekdaysParse, o))
                ? i
                : -1 !== (i = ge.call(this._weekdaysParse, o))
                ? i
                : -1 !== (i = ge.call(this._minWeekdaysParse, o))
                ? i
                : null
              : -1 !== (i = ge.call(this._minWeekdaysParse, o))
              ? i
              : -1 !== (i = ge.call(this._weekdaysParse, o))
              ? i
              : -1 !== (i = ge.call(this._shortWeekdaysParse, o))
              ? i
              : null;
          }
          var Ne = de,
            Ge = de,
            Ke = de;
          function Ue() {
            function e(e, a) {
              return a.length - e.length;
            }
            var a,
              t,
              n,
              i,
              r,
              o = [],
              s = [],
              d = [],
              u = [];
            for (a = 0; a < 7; a++)
              (t = c([2e3, 1]).day(a)),
                (n = this.weekdaysMin(t, "")),
                (i = this.weekdaysShort(t, "")),
                (r = this.weekdays(t, "")),
                o.push(n),
                s.push(i),
                d.push(r),
                u.push(n),
                u.push(i),
                u.push(r);
            for (o.sort(e), s.sort(e), d.sort(e), u.sort(e), a = 0; a < 7; a++)
              (s[a] = ye(s[a])), (d[a] = ye(d[a])), (u[a] = ye(u[a]));
            (this._weekdaysRegex = new RegExp("^(" + u.join("|") + ")", "i")),
              (this._weekdaysShortRegex = this._weekdaysRegex),
              (this._weekdaysMinRegex = this._weekdaysRegex),
              (this._weekdaysStrictRegex = new RegExp(
                "^(" + d.join("|") + ")",
                "i"
              )),
              (this._weekdaysShortStrictRegex = new RegExp(
                "^(" + s.join("|") + ")",
                "i"
              )),
              (this._weekdaysMinStrictRegex = new RegExp(
                "^(" + o.join("|") + ")",
                "i"
              ));
          }
          function qe() {
            return this.hours() % 12 || 12;
          }
          function Ze(e, a) {
            x(e, 0, 0, function () {
              return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                a
              );
            });
          }
          function Xe(e, a) {
            return a._meridiemParse;
          }
          x("H", ["HH", 2], 0, "hour"),
            x("h", ["hh", 2], 0, qe),
            x("k", ["kk", 2], 0, function () {
              return this.hours() || 24;
            }),
            x("hmm", 0, 0, function () {
              return "" + qe.apply(this) + j(this.minutes(), 2);
            }),
            x("hmmss", 0, 0, function () {
              return (
                "" +
                qe.apply(this) +
                j(this.minutes(), 2) +
                j(this.seconds(), 2)
              );
            }),
            x("Hmm", 0, 0, function () {
              return "" + this.hours() + j(this.minutes(), 2);
            }),
            x("Hmmss", 0, 0, function () {
              return (
                "" + this.hours() + j(this.minutes(), 2) + j(this.seconds(), 2)
              );
            }),
            Ze("a", !0),
            Ze("A", !1),
            R("hour", "h"),
            z("hour", 13),
            le("a", Xe),
            le("A", Xe),
            le("H", $),
            le("h", $),
            le("k", $),
            le("HH", $, U),
            le("hh", $, U),
            le("kk", $, U),
            le("hmm", Q),
            le("hmmss", ee),
            le("Hmm", Q),
            le("Hmmss", ee),
            he(["H", "HH"], 3),
            he(["k", "kk"], function (e, a, t) {
              var n = T(e);
              a[3] = 24 === n ? 0 : n;
            }),
            he(["a", "A"], function (e, a, t) {
              (t._isPm = t._locale.isPM(e)), (t._meridiem = e);
            }),
            he(["h", "hh"], function (e, a, t) {
              (a[3] = T(e)), (h(t).bigHour = !0);
            }),
            he("hmm", function (e, a, t) {
              var n = e.length - 2;
              (a[3] = T(e.substr(0, n))),
                (a[4] = T(e.substr(n))),
                (h(t).bigHour = !0);
            }),
            he("hmmss", function (e, a, t) {
              var n = e.length - 4,
                i = e.length - 2;
              (a[3] = T(e.substr(0, n))),
                (a[4] = T(e.substr(n, 2))),
                (a[5] = T(e.substr(i))),
                (h(t).bigHour = !0);
            }),
            he("Hmm", function (e, a, t) {
              var n = e.length - 2;
              (a[3] = T(e.substr(0, n))), (a[4] = T(e.substr(n)));
            }),
            he("Hmmss", function (e, a, t) {
              var n = e.length - 4,
                i = e.length - 2;
              (a[3] = T(e.substr(0, n))),
                (a[4] = T(e.substr(n, 2))),
                (a[5] = T(e.substr(i)));
            });
          var $e,
            Qe = Le("Hours", !0),
            ea = {
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L",
              },
              longDateFormat: {
                LTS: "h:mm:ss A",
                LT: "h:mm A",
                L: "MM/DD/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY h:mm A",
                LLLL: "dddd, MMMM D, YYYY h:mm A",
              },
              invalidDate: "Invalid date",
              ordinal: "%d",
              dayOfMonthOrdinalParse: /\d{1,2}/,
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years",
              },
              months: Se,
              monthsShort: Pe,
              week: { dow: 0, doy: 6 },
              weekdays: We,
              weekdaysMin: Ve,
              weekdaysShort: Je,
              meridiemParse: /[ap]\.?m?\.?/i,
            },
            aa = {},
            ta = {};
          function na(e) {
            return e ? e.toLowerCase().replace("_", "-") : e;
          }
          function ia(a) {
            var n = null;
            if (!aa[a] && void 0 !== e && e && e.exports)
              try {
                (n = $e._abbr), t(132)("./" + a), ra(n);
              } catch (e) {}
            return aa[a];
          }
          function ra(e, a) {
            var t;
            return (
              e &&
                ((t = s(a) ? sa(e) : oa(e, a))
                  ? ($e = t)
                  : "undefined" != typeof console &&
                    console.warn &&
                    console.warn(
                      "Locale " + e + " not found. Did you forget to load it?"
                    )),
              $e._abbr
            );
          }
          function oa(e, a) {
            if (null !== a) {
              var t,
                n = ea;
              if (((a.abbr = e), null != aa[e]))
                E(
                  "defineLocaleOverride",
                  "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
                ),
                  (n = aa[e]._config);
              else if (null != a.parentLocale)
                if (null != aa[a.parentLocale]) n = aa[a.parentLocale]._config;
                else {
                  if (null == (t = ia(a.parentLocale)))
                    return (
                      ta[a.parentLocale] || (ta[a.parentLocale] = []),
                      ta[a.parentLocale].push({ name: e, config: a }),
                      null
                    );
                  n = t._config;
                }
              return (
                (aa[e] = new w(Y(n, a))),
                ta[e] &&
                  ta[e].forEach(function (e) {
                    oa(e.name, e.config);
                  }),
                ra(e),
                aa[e]
              );
            }
            return delete aa[e], null;
          }
          function sa(e) {
            var a;
            if (
              (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)
            )
              return $e;
            if (!r(e)) {
              if ((a = ia(e))) return a;
              e = [e];
            }
            return (function (e) {
              for (var a, t, n, i, r = 0; r < e.length; ) {
                for (
                  a = (i = na(e[r]).split("-")).length,
                    t = (t = na(e[r + 1])) ? t.split("-") : null;
                  a > 0;

                ) {
                  if ((n = ia(i.slice(0, a).join("-")))) return n;
                  if (t && t.length >= a && v(i, t, !0) >= a - 1) break;
                  a--;
                }
                r++;
              }
              return $e;
            })(e);
          }
          function da(e) {
            var a,
              t = e._a;
            return (
              t &&
                -2 === h(e).overflow &&
                ((a =
                  t[1] < 0 || t[1] > 11
                    ? 1
                    : t[2] < 1 || t[2] > ve(t[0], t[1])
                    ? 2
                    : t[3] < 0 ||
                      t[3] > 24 ||
                      (24 === t[3] && (0 !== t[4] || 0 !== t[5] || 0 !== t[6]))
                    ? 3
                    : t[4] < 0 || t[4] > 59
                    ? 4
                    : t[5] < 0 || t[5] > 59
                    ? 5
                    : t[6] < 0 || t[6] > 999
                    ? 6
                    : -1),
                h(e)._overflowDayOfYear && (a < 0 || a > 2) && (a = 2),
                h(e)._overflowWeeks && -1 === a && (a = 7),
                h(e)._overflowWeekday && -1 === a && (a = 8),
                (h(e).overflow = a)),
              e
            );
          }
          function ua(e, a, t) {
            return null != e ? e : null != a ? a : t;
          }
          function la(e) {
            var a,
              t,
              n,
              r,
              o,
              s = [];
            if (!e._d) {
              for (
                n = (function (e) {
                  var a = new Date(i.now());
                  return e._useUTC
                    ? [a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate()]
                    : [a.getFullYear(), a.getMonth(), a.getDate()];
                })(e),
                  e._w &&
                    null == e._a[2] &&
                    null == e._a[1] &&
                    (function (e) {
                      var a, t, n, i, r, o, s, d;
                      if (null != (a = e._w).GG || null != a.W || null != a.E)
                        (r = 1),
                          (o = 4),
                          (t = ua(a.GG, e._a[0], ze(Aa(), 1, 4).year)),
                          (n = ua(a.W, 1)),
                          ((i = ua(a.E, 1)) < 1 || i > 7) && (d = !0);
                      else {
                        (r = e._locale._week.dow), (o = e._locale._week.doy);
                        var u = ze(Aa(), r, o);
                        (t = ua(a.gg, e._a[0], u.year)),
                          (n = ua(a.w, u.week)),
                          null != a.d
                            ? ((i = a.d) < 0 || i > 6) && (d = !0)
                            : null != a.e
                            ? ((i = a.e + r), (a.e < 0 || a.e > 6) && (d = !0))
                            : (i = r);
                      }
                      n < 1 || n > je(t, r, o)
                        ? (h(e)._overflowWeeks = !0)
                        : null != d
                        ? (h(e)._overflowWeekday = !0)
                        : ((s = Ie(t, n, i, r, o)),
                          (e._a[0] = s.year),
                          (e._dayOfYear = s.dayOfYear));
                    })(e),
                  null != e._dayOfYear &&
                    ((o = ua(e._a[0], n[0])),
                    (e._dayOfYear > pe(o) || 0 === e._dayOfYear) &&
                      (h(e)._overflowDayOfYear = !0),
                    (t = Be(o, 0, e._dayOfYear)),
                    (e._a[1] = t.getUTCMonth()),
                    (e._a[2] = t.getUTCDate())),
                  a = 0;
                a < 3 && null == e._a[a];
                ++a
              )
                e._a[a] = s[a] = n[a];
              for (; a < 7; a++)
                e._a[a] = s[a] = null == e._a[a] ? (2 === a ? 1 : 0) : e._a[a];
              24 === e._a[3] &&
                0 === e._a[4] &&
                0 === e._a[5] &&
                0 === e._a[6] &&
                ((e._nextDay = !0), (e._a[3] = 0)),
                (e._d = (e._useUTC ? Be : Re).apply(null, s)),
                (r = e._useUTC ? e._d.getUTCDay() : e._d.getDay()),
                null != e._tzm &&
                  e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                e._nextDay && (e._a[3] = 24),
                e._w &&
                  void 0 !== e._w.d &&
                  e._w.d !== r &&
                  (h(e).weekdayMismatch = !0);
            }
          }
          var ma =
              /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            ya =
              /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            ca = /Z|[+-]\d\d(?::?\d\d)?/,
            ha = [
              ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
              ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
              ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
              ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
              ["YYYY-DDD", /\d{4}-\d{3}/],
              ["YYYY-MM", /\d{4}-\d\d/, !1],
              ["YYYYYYMMDD", /[+-]\d{10}/],
              ["YYYYMMDD", /\d{8}/],
              ["GGGG[W]WWE", /\d{4}W\d{3}/],
              ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
              ["YYYYDDD", /\d{7}/],
            ],
            _a = [
              ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
              ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
              ["HH:mm:ss", /\d\d:\d\d:\d\d/],
              ["HH:mm", /\d\d:\d\d/],
              ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
              ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
              ["HHmmss", /\d\d\d\d\d\d/],
              ["HHmm", /\d\d\d\d/],
              ["HH", /\d\d/],
            ],
            Ma = /^\/?Date\((\-?\d+)/i;
          function pa(e) {
            var a,
              t,
              n,
              i,
              r,
              o,
              s = e._i,
              d = ma.exec(s) || ya.exec(s);
            if (d) {
              for (h(e).iso = !0, a = 0, t = ha.length; a < t; a++)
                if (ha[a][1].exec(d[1])) {
                  (i = ha[a][0]), (n = !1 !== ha[a][2]);
                  break;
                }
              if (null == i) return void (e._isValid = !1);
              if (d[3]) {
                for (a = 0, t = _a.length; a < t; a++)
                  if (_a[a][1].exec(d[3])) {
                    r = (d[2] || " ") + _a[a][0];
                    break;
                  }
                if (null == r) return void (e._isValid = !1);
              }
              if (!n && null != r) return void (e._isValid = !1);
              if (d[4]) {
                if (!ca.exec(d[4])) return void (e._isValid = !1);
                o = "Z";
              }
              (e._f = i + (r || "") + (o || "")), Oa(e);
            } else e._isValid = !1;
          }
          var fa =
            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
          function ga(e) {
            var a = parseInt(e, 10);
            return a <= 49 ? 2e3 + a : a <= 999 ? 1900 + a : a;
          }
          var ka = {
            UT: 0,
            GMT: 0,
            EDT: -240,
            EST: -300,
            CDT: -300,
            CST: -360,
            MDT: -360,
            MST: -420,
            PDT: -420,
            PST: -480,
          };
          function La(e) {
            var a,
              t,
              n,
              i,
              r,
              o,
              s,
              d = fa.exec(
                e._i
                  .replace(/\([^)]*\)|[\n\t]/g, " ")
                  .replace(/(\s\s+)/g, " ")
                  .replace(/^\s\s*/, "")
                  .replace(/\s\s*$/, "")
              );
            if (d) {
              var u =
                ((a = d[4]),
                (t = d[3]),
                (n = d[2]),
                (i = d[5]),
                (r = d[6]),
                (o = d[7]),
                (s = [
                  ga(a),
                  Pe.indexOf(t),
                  parseInt(n, 10),
                  parseInt(i, 10),
                  parseInt(r, 10),
                ]),
                o && s.push(parseInt(o, 10)),
                s);
              if (
                !(function (e, a, t) {
                  return (
                    !e ||
                    Je.indexOf(e) === new Date(a[0], a[1], a[2]).getDay() ||
                    ((h(t).weekdayMismatch = !0), (t._isValid = !1), !1)
                  );
                })(d[1], u, e)
              )
                return;
              (e._a = u),
                (e._tzm = (function (e, a, t) {
                  if (e) return ka[e];
                  if (a) return 0;
                  var n = parseInt(t, 10),
                    i = n % 100;
                  return ((n - i) / 100) * 60 + i;
                })(d[8], d[9], d[10])),
                (e._d = Be.apply(null, e._a)),
                e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                (h(e).rfc2822 = !0);
            } else e._isValid = !1;
          }
          function Oa(e) {
            if (e._f !== i.ISO_8601)
              if (e._f !== i.RFC_2822) {
                (e._a = []), (h(e).empty = !0);
                var a,
                  t,
                  n,
                  r,
                  o,
                  s = "" + e._i,
                  d = s.length,
                  u = 0;
                for (
                  n = G(e._f, e._locale).match(F) || [], a = 0;
                  a < n.length;
                  a++
                )
                  (r = n[a]),
                    (t = (s.match(me(r, e)) || [])[0]) &&
                      ((o = s.substr(0, s.indexOf(t))).length > 0 &&
                        h(e).unusedInput.push(o),
                      (s = s.slice(s.indexOf(t) + t.length)),
                      (u += t.length)),
                    V[r]
                      ? (t ? (h(e).empty = !1) : h(e).unusedTokens.push(r),
                        Me(r, t, e))
                      : e._strict && !t && h(e).unusedTokens.push(r);
                (h(e).charsLeftOver = d - u),
                  s.length > 0 && h(e).unusedInput.push(s),
                  e._a[3] <= 12 &&
                    !0 === h(e).bigHour &&
                    e._a[3] > 0 &&
                    (h(e).bigHour = void 0),
                  (h(e).parsedDateParts = e._a.slice(0)),
                  (h(e).meridiem = e._meridiem),
                  (e._a[3] = (function (e, a, t) {
                    var n;
                    return null == t
                      ? a
                      : null != e.meridiemHour
                      ? e.meridiemHour(a, t)
                      : null != e.isPM
                      ? ((n = e.isPM(t)) && a < 12 && (a += 12),
                        n || 12 !== a || (a = 0),
                        a)
                      : a;
                  })(e._locale, e._a[3], e._meridiem)),
                  la(e),
                  da(e);
              } else La(e);
            else pa(e);
          }
          function Ta(e) {
            var a = e._i,
              t = e._f;
            return (
              (e._locale = e._locale || sa(e._l)),
              null === a || (void 0 === t && "" === a)
                ? M({ nullInput: !0 })
                : ("string" == typeof a && (e._i = a = e._locale.preparse(a)),
                  L(a)
                    ? new k(da(a))
                    : (u(a)
                        ? (e._d = a)
                        : r(t)
                        ? (function (e) {
                            var a, t, n, i, r;
                            if (0 === e._f.length)
                              return (
                                (h(e).invalidFormat = !0),
                                void (e._d = new Date(NaN))
                              );
                            for (i = 0; i < e._f.length; i++)
                              (r = 0),
                                (a = f({}, e)),
                                null != e._useUTC && (a._useUTC = e._useUTC),
                                (a._f = e._f[i]),
                                Oa(a),
                                _(a) &&
                                  ((r += h(a).charsLeftOver),
                                  (r += 10 * h(a).unusedTokens.length),
                                  (h(a).score = r),
                                  (null == n || r < n) && ((n = r), (t = a)));
                            y(e, t || a);
                          })(e)
                        : t
                        ? Oa(e)
                        : (function (e) {
                            var a = e._i;
                            s(a)
                              ? (e._d = new Date(i.now()))
                              : u(a)
                              ? (e._d = new Date(a.valueOf()))
                              : "string" == typeof a
                              ? (function (e) {
                                  var a = Ma.exec(e._i);
                                  null === a
                                    ? (pa(e),
                                      !1 === e._isValid &&
                                        (delete e._isValid,
                                        La(e),
                                        !1 === e._isValid &&
                                          (delete e._isValid,
                                          i.createFromInputFallback(e))))
                                    : (e._d = new Date(+a[1]));
                                })(e)
                              : r(a)
                              ? ((e._a = l(a.slice(0), function (e) {
                                  return parseInt(e, 10);
                                })),
                                la(e))
                              : o(a)
                              ? (function (e) {
                                  if (!e._d) {
                                    var a = H(e._i);
                                    (e._a = l(
                                      [
                                        a.year,
                                        a.month,
                                        a.day || a.date,
                                        a.hour,
                                        a.minute,
                                        a.second,
                                        a.millisecond,
                                      ],
                                      function (e) {
                                        return e && parseInt(e, 10);
                                      }
                                    )),
                                      la(e);
                                  }
                                })(e)
                              : d(a)
                              ? (e._d = new Date(a))
                              : i.createFromInputFallback(e);
                          })(e),
                      _(e) || (e._d = null),
                      e))
            );
          }
          function va(e, a, t, n, i) {
            var s,
              d = {};
            return (
              (!0 !== t && !1 !== t) || ((n = t), (t = void 0)),
              ((o(e) &&
                (function (e) {
                  if (Object.getOwnPropertyNames)
                    return 0 === Object.getOwnPropertyNames(e).length;
                  var a;
                  for (a in e) if (e.hasOwnProperty(a)) return !1;
                  return !0;
                })(e)) ||
                (r(e) && 0 === e.length)) &&
                (e = void 0),
              (d._isAMomentObject = !0),
              (d._useUTC = d._isUTC = i),
              (d._l = t),
              (d._i = e),
              (d._f = a),
              (d._strict = n),
              (s = new k(da(Ta(d))))._nextDay &&
                (s.add(1, "d"), (s._nextDay = void 0)),
              s
            );
          }
          function Aa(e, a, t, n) {
            return va(e, a, t, n, !1);
          }
          (i.createFromInputFallback = S(
            "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
            function (e) {
              e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
            }
          )),
            (i.ISO_8601 = function () {}),
            (i.RFC_2822 = function () {});
          var Sa = S(
              "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
              function () {
                var e = Aa.apply(null, arguments);
                return this.isValid() && e.isValid()
                  ? e < this
                    ? this
                    : e
                  : M();
              }
            ),
            Pa = S(
              "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
              function () {
                var e = Aa.apply(null, arguments);
                return this.isValid() && e.isValid()
                  ? e > this
                    ? this
                    : e
                  : M();
              }
            );
          function ba(e, a) {
            var t, n;
            if ((1 === a.length && r(a[0]) && (a = a[0]), !a.length))
              return Aa();
            for (t = a[0], n = 1; n < a.length; ++n)
              (a[n].isValid() && !a[n][e](t)) || (t = a[n]);
            return t;
          }
          var Ea = [
            "year",
            "quarter",
            "month",
            "week",
            "day",
            "hour",
            "minute",
            "second",
            "millisecond",
          ];
          function Da(e) {
            var a = H(e),
              t = a.year || 0,
              n = a.quarter || 0,
              i = a.month || 0,
              r = a.week || a.isoWeek || 0,
              o = a.day || 0,
              s = a.hour || 0,
              d = a.minute || 0,
              u = a.second || 0,
              l = a.millisecond || 0;
            (this._isValid = (function (e) {
              for (var a in e)
                if (-1 === ge.call(Ea, a) || (null != e[a] && isNaN(e[a])))
                  return !1;
              for (var t = !1, n = 0; n < Ea.length; ++n)
                if (e[Ea[n]]) {
                  if (t) return !1;
                  parseFloat(e[Ea[n]]) !== T(e[Ea[n]]) && (t = !0);
                }
              return !0;
            })(a)),
              (this._milliseconds = +l + 1e3 * u + 6e4 * d + 1e3 * s * 60 * 60),
              (this._days = +o + 7 * r),
              (this._months = +i + 3 * n + 12 * t),
              (this._data = {}),
              (this._locale = sa()),
              this._bubble();
          }
          function Ya(e) {
            return e instanceof Da;
          }
          function wa(e) {
            return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e);
          }
          function Ca(e, a) {
            x(e, 0, 0, function () {
              var e = this.utcOffset(),
                t = "+";
              return (
                e < 0 && ((e = -e), (t = "-")),
                t + j(~~(e / 60), 2) + a + j(~~e % 60, 2)
              );
            });
          }
          Ca("Z", ":"),
            Ca("ZZ", ""),
            le("Z", se),
            le("ZZ", se),
            he(["Z", "ZZ"], function (e, a, t) {
              (t._useUTC = !0), (t._tzm = Ba(se, e));
            });
          var Ra = /([\+\-]|\d\d)/gi;
          function Ba(e, a) {
            var t = (a || "").match(e);
            if (null === t) return null;
            var n = ((t[t.length - 1] || []) + "").match(Ra) || ["-", 0, 0],
              i = 60 * n[1] + T(n[2]);
            return 0 === i ? 0 : "+" === n[0] ? i : -i;
          }
          function Ha(e, a) {
            var t, n;
            return a._isUTC
              ? ((t = a.clone()),
                (n =
                  (L(e) || u(e) ? e.valueOf() : Aa(e).valueOf()) - t.valueOf()),
                t._d.setTime(t._d.valueOf() + n),
                i.updateOffset(t, !1),
                t)
              : Aa(e).local();
          }
          function Ia(e) {
            return 15 * -Math.round(e._d.getTimezoneOffset() / 15);
          }
          function za() {
            return !!this.isValid() && this._isUTC && 0 === this._offset;
          }
          i.updateOffset = function () {};
          var ja = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
            Fa =
              /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
          function Wa(e, a) {
            var t,
              n,
              i,
              r,
              o,
              s,
              u = e,
              l = null;
            return (
              Ya(e)
                ? (u = { ms: e._milliseconds, d: e._days, M: e._months })
                : d(e)
                ? ((u = {}), a ? (u[a] = e) : (u.milliseconds = e))
                : (l = ja.exec(e))
                ? ((t = "-" === l[1] ? -1 : 1),
                  (u = {
                    y: 0,
                    d: T(l[2]) * t,
                    h: T(l[3]) * t,
                    m: T(l[4]) * t,
                    s: T(l[5]) * t,
                    ms: T(wa(1e3 * l[6])) * t,
                  }))
                : (l = Fa.exec(e))
                ? ((t = "-" === l[1] ? -1 : 1),
                  (u = {
                    y: Ja(l[2], t),
                    M: Ja(l[3], t),
                    w: Ja(l[4], t),
                    d: Ja(l[5], t),
                    h: Ja(l[6], t),
                    m: Ja(l[7], t),
                    s: Ja(l[8], t),
                  }))
                : null == u
                ? (u = {})
                : "object" == typeof u &&
                  ("from" in u || "to" in u) &&
                  ((r = Aa(u.from)),
                  (o = Aa(u.to)),
                  (i =
                    r.isValid() && o.isValid()
                      ? ((o = Ha(o, r)),
                        r.isBefore(o)
                          ? (s = Va(r, o))
                          : (((s = Va(o, r)).milliseconds = -s.milliseconds),
                            (s.months = -s.months)),
                        s)
                      : { milliseconds: 0, months: 0 }),
                  ((u = {}).ms = i.milliseconds),
                  (u.M = i.months)),
              (n = new Da(u)),
              Ya(e) && m(e, "_locale") && (n._locale = e._locale),
              n
            );
          }
          function Ja(e, a) {
            var t = e && parseFloat(e.replace(",", "."));
            return (isNaN(t) ? 0 : t) * a;
          }
          function Va(e, a) {
            var t = {};
            return (
              (t.months = a.month() - e.month() + 12 * (a.year() - e.year())),
              e.clone().add(t.months, "M").isAfter(a) && --t.months,
              (t.milliseconds = +a - +e.clone().add(t.months, "M")),
              t
            );
          }
          function xa(e, a) {
            return function (t, n) {
              var i;
              return (
                null === n ||
                  isNaN(+n) ||
                  (E(
                    a,
                    "moment()." +
                      a +
                      "(period, number) is deprecated. Please use moment()." +
                      a +
                      "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
                  ),
                  (i = t),
                  (t = n),
                  (n = i)),
                Na(this, Wa((t = "string" == typeof t ? +t : t), n), e),
                this
              );
            };
          }
          function Na(e, a, t, n) {
            var r = a._milliseconds,
              o = wa(a._days),
              s = wa(a._months);
            e.isValid() &&
              ((n = null == n || n),
              s && Ee(e, Oe(e, "Month") + s * t),
              o && Te(e, "Date", Oe(e, "Date") + o * t),
              r && e._d.setTime(e._d.valueOf() + r * t),
              n && i.updateOffset(e, o || s));
          }
          (Wa.fn = Da.prototype),
            (Wa.invalid = function () {
              return Wa(NaN);
            });
          var Ga = xa(1, "add"),
            Ka = xa(-1, "subtract");
          function Ua(e, a) {
            var t = 12 * (a.year() - e.year()) + (a.month() - e.month()),
              n = e.clone().add(t, "months");
            return (
              -(
                t +
                (a - n < 0
                  ? (a - n) / (n - e.clone().add(t - 1, "months"))
                  : (a - n) / (e.clone().add(t + 1, "months") - n))
              ) || 0
            );
          }
          function qa(e) {
            var a;
            return void 0 === e
              ? this._locale._abbr
              : (null != (a = sa(e)) && (this._locale = a), this);
          }
          (i.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"),
            (i.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]");
          var Za = S(
            "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
            function (e) {
              return void 0 === e ? this.localeData() : this.locale(e);
            }
          );
          function Xa() {
            return this._locale;
          }
          function $a(e, a) {
            return ((e % a) + a) % a;
          }
          function Qa(e, a, t) {
            return e < 100 && e >= 0
              ? new Date(e + 400, a, t) - 126227808e5
              : new Date(e, a, t).valueOf();
          }
          function et(e, a, t) {
            return e < 100 && e >= 0
              ? Date.UTC(e + 400, a, t) - 126227808e5
              : Date.UTC(e, a, t);
          }
          function at(e, a) {
            x(0, [e, e.length], 0, a);
          }
          function tt(e, a, t, n, i) {
            var r;
            return null == e
              ? ze(this, n, i).year
              : (a > (r = je(e, n, i)) && (a = r),
                nt.call(this, e, a, t, n, i));
          }
          function nt(e, a, t, n, i) {
            var r = Ie(e, a, t, n, i),
              o = Be(r.year, 0, r.dayOfYear);
            return (
              this.year(o.getUTCFullYear()),
              this.month(o.getUTCMonth()),
              this.date(o.getUTCDate()),
              this
            );
          }
          x(0, ["gg", 2], 0, function () {
            return this.weekYear() % 100;
          }),
            x(0, ["GG", 2], 0, function () {
              return this.isoWeekYear() % 100;
            }),
            at("gggg", "weekYear"),
            at("ggggg", "weekYear"),
            at("GGGG", "isoWeekYear"),
            at("GGGGG", "isoWeekYear"),
            R("weekYear", "gg"),
            R("isoWeekYear", "GG"),
            z("weekYear", 1),
            z("isoWeekYear", 1),
            le("G", re),
            le("g", re),
            le("GG", $, U),
            le("gg", $, U),
            le("GGGG", te, Z),
            le("gggg", te, Z),
            le("GGGGG", ne, X),
            le("ggggg", ne, X),
            _e(["gggg", "ggggg", "GGGG", "GGGGG"], function (e, a, t, n) {
              a[n.substr(0, 2)] = T(e);
            }),
            _e(["gg", "GG"], function (e, a, t, n) {
              a[n] = i.parseTwoDigitYear(e);
            }),
            x("Q", 0, "Qo", "quarter"),
            R("quarter", "Q"),
            z("quarter", 7),
            le("Q", K),
            he("Q", function (e, a) {
              a[1] = 3 * (T(e) - 1);
            }),
            x("D", ["DD", 2], "Do", "date"),
            R("date", "D"),
            z("date", 9),
            le("D", $),
            le("DD", $, U),
            le("Do", function (e, a) {
              return e
                ? a._dayOfMonthOrdinalParse || a._ordinalParse
                : a._dayOfMonthOrdinalParseLenient;
            }),
            he(["D", "DD"], 2),
            he("Do", function (e, a) {
              a[2] = T(e.match($)[0]);
            });
          var it = Le("Date", !0);
          x("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
            R("dayOfYear", "DDD"),
            z("dayOfYear", 4),
            le("DDD", ae),
            le("DDDD", q),
            he(["DDD", "DDDD"], function (e, a, t) {
              t._dayOfYear = T(e);
            }),
            x("m", ["mm", 2], 0, "minute"),
            R("minute", "m"),
            z("minute", 14),
            le("m", $),
            le("mm", $, U),
            he(["m", "mm"], 4);
          var rt = Le("Minutes", !1);
          x("s", ["ss", 2], 0, "second"),
            R("second", "s"),
            z("second", 15),
            le("s", $),
            le("ss", $, U),
            he(["s", "ss"], 5);
          var ot,
            st = Le("Seconds", !1);
          for (
            x("S", 0, 0, function () {
              return ~~(this.millisecond() / 100);
            }),
              x(0, ["SS", 2], 0, function () {
                return ~~(this.millisecond() / 10);
              }),
              x(0, ["SSS", 3], 0, "millisecond"),
              x(0, ["SSSS", 4], 0, function () {
                return 10 * this.millisecond();
              }),
              x(0, ["SSSSS", 5], 0, function () {
                return 100 * this.millisecond();
              }),
              x(0, ["SSSSSS", 6], 0, function () {
                return 1e3 * this.millisecond();
              }),
              x(0, ["SSSSSSS", 7], 0, function () {
                return 1e4 * this.millisecond();
              }),
              x(0, ["SSSSSSSS", 8], 0, function () {
                return 1e5 * this.millisecond();
              }),
              x(0, ["SSSSSSSSS", 9], 0, function () {
                return 1e6 * this.millisecond();
              }),
              R("millisecond", "ms"),
              z("millisecond", 16),
              le("S", ae, K),
              le("SS", ae, U),
              le("SSS", ae, q),
              ot = "SSSS";
            ot.length <= 9;
            ot += "S"
          )
            le(ot, ie);
          function dt(e, a) {
            a[6] = T(1e3 * ("0." + e));
          }
          for (ot = "S"; ot.length <= 9; ot += "S") he(ot, dt);
          var ut = Le("Milliseconds", !1);
          x("z", 0, 0, "zoneAbbr"), x("zz", 0, 0, "zoneName");
          var lt = k.prototype;
          function mt(e) {
            return e;
          }
          (lt.add = Ga),
            (lt.calendar = function (e, a) {
              var t = e || Aa(),
                n = Ha(t, this).startOf("day"),
                r = i.calendarFormat(this, n) || "sameElse",
                o = a && (D(a[r]) ? a[r].call(this, t) : a[r]);
              return this.format(
                o || this.localeData().calendar(r, this, Aa(t))
              );
            }),
            (lt.clone = function () {
              return new k(this);
            }),
            (lt.diff = function (e, a, t) {
              var n, i, r;
              if (!this.isValid()) return NaN;
              if (!(n = Ha(e, this)).isValid()) return NaN;
              switch (
                ((i = 6e4 * (n.utcOffset() - this.utcOffset())), (a = B(a)))
              ) {
                case "year":
                  r = Ua(this, n) / 12;
                  break;
                case "month":
                  r = Ua(this, n);
                  break;
                case "quarter":
                  r = Ua(this, n) / 3;
                  break;
                case "second":
                  r = (this - n) / 1e3;
                  break;
                case "minute":
                  r = (this - n) / 6e4;
                  break;
                case "hour":
                  r = (this - n) / 36e5;
                  break;
                case "day":
                  r = (this - n - i) / 864e5;
                  break;
                case "week":
                  r = (this - n - i) / 6048e5;
                  break;
                default:
                  r = this - n;
              }
              return t ? r : O(r);
            }),
            (lt.endOf = function (e) {
              var a;
              if (
                void 0 === (e = B(e)) ||
                "millisecond" === e ||
                !this.isValid()
              )
                return this;
              var t = this._isUTC ? et : Qa;
              switch (e) {
                case "year":
                  a = t(this.year() + 1, 0, 1) - 1;
                  break;
                case "quarter":
                  a =
                    t(this.year(), this.month() - (this.month() % 3) + 3, 1) -
                    1;
                  break;
                case "month":
                  a = t(this.year(), this.month() + 1, 1) - 1;
                  break;
                case "week":
                  a =
                    t(
                      this.year(),
                      this.month(),
                      this.date() - this.weekday() + 7
                    ) - 1;
                  break;
                case "isoWeek":
                  a =
                    t(
                      this.year(),
                      this.month(),
                      this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                  break;
                case "day":
                case "date":
                  a = t(this.year(), this.month(), this.date() + 1) - 1;
                  break;
                case "hour":
                  (a = this._d.valueOf()),
                    (a +=
                      36e5 -
                      $a(a + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) -
                      1);
                  break;
                case "minute":
                  (a = this._d.valueOf()), (a += 6e4 - $a(a, 6e4) - 1);
                  break;
                case "second":
                  (a = this._d.valueOf()), (a += 1e3 - $a(a, 1e3) - 1);
              }
              return this._d.setTime(a), i.updateOffset(this, !0), this;
            }),
            (lt.format = function (e) {
              e || (e = this.isUtc() ? i.defaultFormatUtc : i.defaultFormat);
              var a = N(this, e);
              return this.localeData().postformat(a);
            }),
            (lt.from = function (e, a) {
              return this.isValid() &&
                ((L(e) && e.isValid()) || Aa(e).isValid())
                ? Wa({ to: this, from: e }).locale(this.locale()).humanize(!a)
                : this.localeData().invalidDate();
            }),
            (lt.fromNow = function (e) {
              return this.from(Aa(), e);
            }),
            (lt.to = function (e, a) {
              return this.isValid() &&
                ((L(e) && e.isValid()) || Aa(e).isValid())
                ? Wa({ from: this, to: e }).locale(this.locale()).humanize(!a)
                : this.localeData().invalidDate();
            }),
            (lt.toNow = function (e) {
              return this.to(Aa(), e);
            }),
            (lt.get = function (e) {
              return D(this[(e = B(e))]) ? this[e]() : this;
            }),
            (lt.invalidAt = function () {
              return h(this).overflow;
            }),
            (lt.isAfter = function (e, a) {
              var t = L(e) ? e : Aa(e);
              return (
                !(!this.isValid() || !t.isValid()) &&
                ("millisecond" === (a = B(a) || "millisecond")
                  ? this.valueOf() > t.valueOf()
                  : t.valueOf() < this.clone().startOf(a).valueOf())
              );
            }),
            (lt.isBefore = function (e, a) {
              var t = L(e) ? e : Aa(e);
              return (
                !(!this.isValid() || !t.isValid()) &&
                ("millisecond" === (a = B(a) || "millisecond")
                  ? this.valueOf() < t.valueOf()
                  : this.clone().endOf(a).valueOf() < t.valueOf())
              );
            }),
            (lt.isBetween = function (e, a, t, n) {
              var i = L(e) ? e : Aa(e),
                r = L(a) ? a : Aa(a);
              return (
                !!(this.isValid() && i.isValid() && r.isValid()) &&
                ("(" === (n = n || "()")[0]
                  ? this.isAfter(i, t)
                  : !this.isBefore(i, t)) &&
                (")" === n[1] ? this.isBefore(r, t) : !this.isAfter(r, t))
              );
            }),
            (lt.isSame = function (e, a) {
              var t,
                n = L(e) ? e : Aa(e);
              return (
                !(!this.isValid() || !n.isValid()) &&
                ("millisecond" === (a = B(a) || "millisecond")
                  ? this.valueOf() === n.valueOf()
                  : ((t = n.valueOf()),
                    this.clone().startOf(a).valueOf() <= t &&
                      t <= this.clone().endOf(a).valueOf()))
              );
            }),
            (lt.isSameOrAfter = function (e, a) {
              return this.isSame(e, a) || this.isAfter(e, a);
            }),
            (lt.isSameOrBefore = function (e, a) {
              return this.isSame(e, a) || this.isBefore(e, a);
            }),
            (lt.isValid = function () {
              return _(this);
            }),
            (lt.lang = Za),
            (lt.locale = qa),
            (lt.localeData = Xa),
            (lt.max = Pa),
            (lt.min = Sa),
            (lt.parsingFlags = function () {
              return y({}, h(this));
            }),
            (lt.set = function (e, a) {
              if ("object" == typeof e)
                for (
                  var t = (function (e) {
                      var a = [];
                      for (var t in e) a.push({ unit: t, priority: I[t] });
                      return (
                        a.sort(function (e, a) {
                          return e.priority - a.priority;
                        }),
                        a
                      );
                    })((e = H(e))),
                    n = 0;
                  n < t.length;
                  n++
                )
                  this[t[n].unit](e[t[n].unit]);
              else if (D(this[(e = B(e))])) return this[e](a);
              return this;
            }),
            (lt.startOf = function (e) {
              var a;
              if (
                void 0 === (e = B(e)) ||
                "millisecond" === e ||
                !this.isValid()
              )
                return this;
              var t = this._isUTC ? et : Qa;
              switch (e) {
                case "year":
                  a = t(this.year(), 0, 1);
                  break;
                case "quarter":
                  a = t(this.year(), this.month() - (this.month() % 3), 1);
                  break;
                case "month":
                  a = t(this.year(), this.month(), 1);
                  break;
                case "week":
                  a = t(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                  );
                  break;
                case "isoWeek":
                  a = t(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                  );
                  break;
                case "day":
                case "date":
                  a = t(this.year(), this.month(), this.date());
                  break;
                case "hour":
                  (a = this._d.valueOf()),
                    (a -= $a(
                      a + (this._isUTC ? 0 : 6e4 * this.utcOffset()),
                      36e5
                    ));
                  break;
                case "minute":
                  (a = this._d.valueOf()), (a -= $a(a, 6e4));
                  break;
                case "second":
                  (a = this._d.valueOf()), (a -= $a(a, 1e3));
              }
              return this._d.setTime(a), i.updateOffset(this, !0), this;
            }),
            (lt.subtract = Ka),
            (lt.toArray = function () {
              var e = this;
              return [
                e.year(),
                e.month(),
                e.date(),
                e.hour(),
                e.minute(),
                e.second(),
                e.millisecond(),
              ];
            }),
            (lt.toObject = function () {
              var e = this;
              return {
                years: e.year(),
                months: e.month(),
                date: e.date(),
                hours: e.hours(),
                minutes: e.minutes(),
                seconds: e.seconds(),
                milliseconds: e.milliseconds(),
              };
            }),
            (lt.toDate = function () {
              return new Date(this.valueOf());
            }),
            (lt.toISOString = function (e) {
              if (!this.isValid()) return null;
              var a = !0 !== e,
                t = a ? this.clone().utc() : this;
              return t.year() < 0 || t.year() > 9999
                ? N(
                    t,
                    a
                      ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                      : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
                  )
                : D(Date.prototype.toISOString)
                ? a
                  ? this.toDate().toISOString()
                  : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                      .toISOString()
                      .replace("Z", N(t, "Z"))
                : N(
                    t,
                    a
                      ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                      : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
                  );
            }),
            (lt.inspect = function () {
              if (!this.isValid())
                return "moment.invalid(/* " + this._i + " */)";
              var e = "moment",
                a = "";
              this.isLocal() ||
                ((e =
                  0 === this.utcOffset() ? "moment.utc" : "moment.parseZone"),
                (a = "Z"));
              var t = "[" + e + '("]',
                n = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY",
                i = a + '[")]';
              return this.format(t + n + "-MM-DD[T]HH:mm:ss.SSS" + i);
            }),
            (lt.toJSON = function () {
              return this.isValid() ? this.toISOString() : null;
            }),
            (lt.toString = function () {
              return this.clone()
                .locale("en")
                .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            }),
            (lt.unix = function () {
              return Math.floor(this.valueOf() / 1e3);
            }),
            (lt.valueOf = function () {
              return this._d.valueOf() - 6e4 * (this._offset || 0);
            }),
            (lt.creationData = function () {
              return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict,
              };
            }),
            (lt.year = ke),
            (lt.isLeapYear = function () {
              return fe(this.year());
            }),
            (lt.weekYear = function (e) {
              return tt.call(
                this,
                e,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy
              );
            }),
            (lt.isoWeekYear = function (e) {
              return tt.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4);
            }),
            (lt.quarter = lt.quarters =
              function (e) {
                return null == e
                  ? Math.ceil((this.month() + 1) / 3)
                  : this.month(3 * (e - 1) + (this.month() % 3));
              }),
            (lt.month = De),
            (lt.daysInMonth = function () {
              return ve(this.year(), this.month());
            }),
            (lt.week = lt.weeks =
              function (e) {
                var a = this.localeData().week(this);
                return null == e ? a : this.add(7 * (e - a), "d");
              }),
            (lt.isoWeek = lt.isoWeeks =
              function (e) {
                var a = ze(this, 1, 4).week;
                return null == e ? a : this.add(7 * (e - a), "d");
              }),
            (lt.weeksInYear = function () {
              var e = this.localeData()._week;
              return je(this.year(), e.dow, e.doy);
            }),
            (lt.isoWeeksInYear = function () {
              return je(this.year(), 1, 4);
            }),
            (lt.date = it),
            (lt.day = lt.days =
              function (e) {
                if (!this.isValid()) return null != e ? this : NaN;
                var a = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                return null != e
                  ? ((e = (function (e, a) {
                      return "string" != typeof e
                        ? e
                        : isNaN(e)
                        ? "number" == typeof (e = a.weekdaysParse(e))
                          ? e
                          : null
                        : parseInt(e, 10);
                    })(e, this.localeData())),
                    this.add(e - a, "d"))
                  : a;
              }),
            (lt.weekday = function (e) {
              if (!this.isValid()) return null != e ? this : NaN;
              var a = (this.day() + 7 - this.localeData()._week.dow) % 7;
              return null == e ? a : this.add(e - a, "d");
            }),
            (lt.isoWeekday = function (e) {
              if (!this.isValid()) return null != e ? this : NaN;
              if (null != e) {
                var a = (function (e, a) {
                  return "string" == typeof e
                    ? a.weekdaysParse(e) % 7 || 7
                    : isNaN(e)
                    ? null
                    : e;
                })(e, this.localeData());
                return this.day(this.day() % 7 ? a : a - 7);
              }
              return this.day() || 7;
            }),
            (lt.dayOfYear = function (e) {
              var a =
                Math.round(
                  (this.clone().startOf("day") - this.clone().startOf("year")) /
                    864e5
                ) + 1;
              return null == e ? a : this.add(e - a, "d");
            }),
            (lt.hour = lt.hours = Qe),
            (lt.minute = lt.minutes = rt),
            (lt.second = lt.seconds = st),
            (lt.millisecond = lt.milliseconds = ut),
            (lt.utcOffset = function (e, a, t) {
              var n,
                r = this._offset || 0;
              if (!this.isValid()) return null != e ? this : NaN;
              if (null != e) {
                if ("string" == typeof e) {
                  if (null === (e = Ba(se, e))) return this;
                } else Math.abs(e) < 16 && !t && (e *= 60);
                return (
                  !this._isUTC && a && (n = Ia(this)),
                  (this._offset = e),
                  (this._isUTC = !0),
                  null != n && this.add(n, "m"),
                  r !== e &&
                    (!a || this._changeInProgress
                      ? Na(this, Wa(e - r, "m"), 1, !1)
                      : this._changeInProgress ||
                        ((this._changeInProgress = !0),
                        i.updateOffset(this, !0),
                        (this._changeInProgress = null))),
                  this
                );
              }
              return this._isUTC ? r : Ia(this);
            }),
            (lt.utc = function (e) {
              return this.utcOffset(0, e);
            }),
            (lt.local = function (e) {
              return (
                this._isUTC &&
                  (this.utcOffset(0, e),
                  (this._isUTC = !1),
                  e && this.subtract(Ia(this), "m")),
                this
              );
            }),
            (lt.parseZone = function () {
              if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
              else if ("string" == typeof this._i) {
                var e = Ba(oe, this._i);
                null != e ? this.utcOffset(e) : this.utcOffset(0, !0);
              }
              return this;
            }),
            (lt.hasAlignedHourOffset = function (e) {
              return (
                !!this.isValid() &&
                ((e = e ? Aa(e).utcOffset() : 0),
                (this.utcOffset() - e) % 60 == 0)
              );
            }),
            (lt.isDST = function () {
              return (
                this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset()
              );
            }),
            (lt.isLocal = function () {
              return !!this.isValid() && !this._isUTC;
            }),
            (lt.isUtcOffset = function () {
              return !!this.isValid() && this._isUTC;
            }),
            (lt.isUtc = za),
            (lt.isUTC = za),
            (lt.zoneAbbr = function () {
              return this._isUTC ? "UTC" : "";
            }),
            (lt.zoneName = function () {
              return this._isUTC ? "Coordinated Universal Time" : "";
            }),
            (lt.dates = S(
              "dates accessor is deprecated. Use date instead.",
              it
            )),
            (lt.months = S(
              "months accessor is deprecated. Use month instead",
              De
            )),
            (lt.years = S(
              "years accessor is deprecated. Use year instead",
              ke
            )),
            (lt.zone = S(
              "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
              function (e, a) {
                return null != e
                  ? ("string" != typeof e && (e = -e),
                    this.utcOffset(e, a),
                    this)
                  : -this.utcOffset();
              }
            )),
            (lt.isDSTShifted = S(
              "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
              function () {
                if (!s(this._isDSTShifted)) return this._isDSTShifted;
                var e = {};
                if ((f(e, this), (e = Ta(e))._a)) {
                  var a = e._isUTC ? c(e._a) : Aa(e._a);
                  this._isDSTShifted =
                    this.isValid() && v(e._a, a.toArray()) > 0;
                } else this._isDSTShifted = !1;
                return this._isDSTShifted;
              }
            ));
          var yt = w.prototype;
          function ct(e, a, t, n) {
            var i = sa(),
              r = c().set(n, a);
            return i[t](r, e);
          }
          function ht(e, a, t) {
            if ((d(e) && ((a = e), (e = void 0)), (e = e || ""), null != a))
              return ct(e, a, t, "month");
            var n,
              i = [];
            for (n = 0; n < 12; n++) i[n] = ct(e, n, t, "month");
            return i;
          }
          function _t(e, a, t, n) {
            "boolean" == typeof e
              ? (d(a) && ((t = a), (a = void 0)), (a = a || ""))
              : ((t = a = e),
                (e = !1),
                d(a) && ((t = a), (a = void 0)),
                (a = a || ""));
            var i,
              r = sa(),
              o = e ? r._week.dow : 0;
            if (null != t) return ct(a, (t + o) % 7, n, "day");
            var s = [];
            for (i = 0; i < 7; i++) s[i] = ct(a, (i + o) % 7, n, "day");
            return s;
          }
          (yt.calendar = function (e, a, t) {
            var n = this._calendar[e] || this._calendar.sameElse;
            return D(n) ? n.call(a, t) : n;
          }),
            (yt.longDateFormat = function (e) {
              var a = this._longDateFormat[e],
                t = this._longDateFormat[e.toUpperCase()];
              return a || !t
                ? a
                : ((this._longDateFormat[e] = t.replace(
                    /MMMM|MM|DD|dddd/g,
                    function (e) {
                      return e.slice(1);
                    }
                  )),
                  this._longDateFormat[e]);
            }),
            (yt.invalidDate = function () {
              return this._invalidDate;
            }),
            (yt.ordinal = function (e) {
              return this._ordinal.replace("%d", e);
            }),
            (yt.preparse = mt),
            (yt.postformat = mt),
            (yt.relativeTime = function (e, a, t, n) {
              var i = this._relativeTime[t];
              return D(i) ? i(e, a, t, n) : i.replace(/%d/i, e);
            }),
            (yt.pastFuture = function (e, a) {
              var t = this._relativeTime[e > 0 ? "future" : "past"];
              return D(t) ? t(a) : t.replace(/%s/i, a);
            }),
            (yt.set = function (e) {
              var a, t;
              for (t in e) D((a = e[t])) ? (this[t] = a) : (this["_" + t] = a);
              (this._config = e),
                (this._dayOfMonthOrdinalParseLenient = new RegExp(
                  (this._dayOfMonthOrdinalParse.source ||
                    this._ordinalParse.source) +
                    "|" +
                    /\d{1,2}/.source
                ));
            }),
            (yt.months = function (e, a) {
              return e
                ? r(this._months)
                  ? this._months[e.month()]
                  : this._months[
                      (this._months.isFormat || Ae).test(a)
                        ? "format"
                        : "standalone"
                    ][e.month()]
                : r(this._months)
                ? this._months
                : this._months.standalone;
            }),
            (yt.monthsShort = function (e, a) {
              return e
                ? r(this._monthsShort)
                  ? this._monthsShort[e.month()]
                  : this._monthsShort[Ae.test(a) ? "format" : "standalone"][
                      e.month()
                    ]
                : r(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort.standalone;
            }),
            (yt.monthsParse = function (e, a, t) {
              var n, i, r;
              if (this._monthsParseExact) return be.call(this, e, a, t);
              for (
                this._monthsParse ||
                  ((this._monthsParse = []),
                  (this._longMonthsParse = []),
                  (this._shortMonthsParse = [])),
                  n = 0;
                n < 12;
                n++
              ) {
                if (
                  ((i = c([2e3, n])),
                  t &&
                    !this._longMonthsParse[n] &&
                    ((this._longMonthsParse[n] = new RegExp(
                      "^" + this.months(i, "").replace(".", "") + "$",
                      "i"
                    )),
                    (this._shortMonthsParse[n] = new RegExp(
                      "^" + this.monthsShort(i, "").replace(".", "") + "$",
                      "i"
                    ))),
                  t ||
                    this._monthsParse[n] ||
                    ((r =
                      "^" +
                      this.months(i, "") +
                      "|^" +
                      this.monthsShort(i, "")),
                    (this._monthsParse[n] = new RegExp(
                      r.replace(".", ""),
                      "i"
                    ))),
                  t && "MMMM" === a && this._longMonthsParse[n].test(e))
                )
                  return n;
                if (t && "MMM" === a && this._shortMonthsParse[n].test(e))
                  return n;
                if (!t && this._monthsParse[n].test(e)) return n;
              }
            }),
            (yt.monthsRegex = function (e) {
              return this._monthsParseExact
                ? (m(this, "_monthsRegex") || Ce.call(this),
                  e ? this._monthsStrictRegex : this._monthsRegex)
                : (m(this, "_monthsRegex") || (this._monthsRegex = we),
                  this._monthsStrictRegex && e
                    ? this._monthsStrictRegex
                    : this._monthsRegex);
            }),
            (yt.monthsShortRegex = function (e) {
              return this._monthsParseExact
                ? (m(this, "_monthsRegex") || Ce.call(this),
                  e ? this._monthsShortStrictRegex : this._monthsShortRegex)
                : (m(this, "_monthsShortRegex") ||
                    (this._monthsShortRegex = Ye),
                  this._monthsShortStrictRegex && e
                    ? this._monthsShortStrictRegex
                    : this._monthsShortRegex);
            }),
            (yt.week = function (e) {
              return ze(e, this._week.dow, this._week.doy).week;
            }),
            (yt.firstDayOfYear = function () {
              return this._week.doy;
            }),
            (yt.firstDayOfWeek = function () {
              return this._week.dow;
            }),
            (yt.weekdays = function (e, a) {
              var t = r(this._weekdays)
                ? this._weekdays
                : this._weekdays[
                    e && !0 !== e && this._weekdays.isFormat.test(a)
                      ? "format"
                      : "standalone"
                  ];
              return !0 === e ? Fe(t, this._week.dow) : e ? t[e.day()] : t;
            }),
            (yt.weekdaysMin = function (e) {
              return !0 === e
                ? Fe(this._weekdaysMin, this._week.dow)
                : e
                ? this._weekdaysMin[e.day()]
                : this._weekdaysMin;
            }),
            (yt.weekdaysShort = function (e) {
              return !0 === e
                ? Fe(this._weekdaysShort, this._week.dow)
                : e
                ? this._weekdaysShort[e.day()]
                : this._weekdaysShort;
            }),
            (yt.weekdaysParse = function (e, a, t) {
              var n, i, r;
              if (this._weekdaysParseExact) return xe.call(this, e, a, t);
              for (
                this._weekdaysParse ||
                  ((this._weekdaysParse = []),
                  (this._minWeekdaysParse = []),
                  (this._shortWeekdaysParse = []),
                  (this._fullWeekdaysParse = [])),
                  n = 0;
                n < 7;
                n++
              ) {
                if (
                  ((i = c([2e3, 1]).day(n)),
                  t &&
                    !this._fullWeekdaysParse[n] &&
                    ((this._fullWeekdaysParse[n] = new RegExp(
                      "^" + this.weekdays(i, "").replace(".", "\\.?") + "$",
                      "i"
                    )),
                    (this._shortWeekdaysParse[n] = new RegExp(
                      "^" +
                        this.weekdaysShort(i, "").replace(".", "\\.?") +
                        "$",
                      "i"
                    )),
                    (this._minWeekdaysParse[n] = new RegExp(
                      "^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$",
                      "i"
                    ))),
                  this._weekdaysParse[n] ||
                    ((r =
                      "^" +
                      this.weekdays(i, "") +
                      "|^" +
                      this.weekdaysShort(i, "") +
                      "|^" +
                      this.weekdaysMin(i, "")),
                    (this._weekdaysParse[n] = new RegExp(
                      r.replace(".", ""),
                      "i"
                    ))),
                  t && "dddd" === a && this._fullWeekdaysParse[n].test(e))
                )
                  return n;
                if (t && "ddd" === a && this._shortWeekdaysParse[n].test(e))
                  return n;
                if (t && "dd" === a && this._minWeekdaysParse[n].test(e))
                  return n;
                if (!t && this._weekdaysParse[n].test(e)) return n;
              }
            }),
            (yt.weekdaysRegex = function (e) {
              return this._weekdaysParseExact
                ? (m(this, "_weekdaysRegex") || Ue.call(this),
                  e ? this._weekdaysStrictRegex : this._weekdaysRegex)
                : (m(this, "_weekdaysRegex") || (this._weekdaysRegex = Ne),
                  this._weekdaysStrictRegex && e
                    ? this._weekdaysStrictRegex
                    : this._weekdaysRegex);
            }),
            (yt.weekdaysShortRegex = function (e) {
              return this._weekdaysParseExact
                ? (m(this, "_weekdaysRegex") || Ue.call(this),
                  e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
                : (m(this, "_weekdaysShortRegex") ||
                    (this._weekdaysShortRegex = Ge),
                  this._weekdaysShortStrictRegex && e
                    ? this._weekdaysShortStrictRegex
                    : this._weekdaysShortRegex);
            }),
            (yt.weekdaysMinRegex = function (e) {
              return this._weekdaysParseExact
                ? (m(this, "_weekdaysRegex") || Ue.call(this),
                  e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
                : (m(this, "_weekdaysMinRegex") ||
                    (this._weekdaysMinRegex = Ke),
                  this._weekdaysMinStrictRegex && e
                    ? this._weekdaysMinStrictRegex
                    : this._weekdaysMinRegex);
            }),
            (yt.isPM = function (e) {
              return "p" === (e + "").toLowerCase().charAt(0);
            }),
            (yt.meridiem = function (e, a, t) {
              return e > 11 ? (t ? "pm" : "PM") : t ? "am" : "AM";
            }),
            ra("en", {
              dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
              ordinal: function (e) {
                var a = e % 10;
                return (
                  e +
                  (1 === T((e % 100) / 10)
                    ? "th"
                    : 1 === a
                    ? "st"
                    : 2 === a
                    ? "nd"
                    : 3 === a
                    ? "rd"
                    : "th")
                );
              },
            }),
            (i.lang = S(
              "moment.lang is deprecated. Use moment.locale instead.",
              ra
            )),
            (i.langData = S(
              "moment.langData is deprecated. Use moment.localeData instead.",
              sa
            ));
          var Mt = Math.abs;
          function pt(e, a, t, n) {
            var i = Wa(a, t);
            return (
              (e._milliseconds += n * i._milliseconds),
              (e._days += n * i._days),
              (e._months += n * i._months),
              e._bubble()
            );
          }
          function ft(e) {
            return e < 0 ? Math.floor(e) : Math.ceil(e);
          }
          function gt(e) {
            return (4800 * e) / 146097;
          }
          function kt(e) {
            return (146097 * e) / 4800;
          }
          function Lt(e) {
            return function () {
              return this.as(e);
            };
          }
          var Ot = Lt("ms"),
            Tt = Lt("s"),
            vt = Lt("m"),
            At = Lt("h"),
            St = Lt("d"),
            Pt = Lt("w"),
            bt = Lt("M"),
            Et = Lt("Q"),
            Dt = Lt("y");
          function Yt(e) {
            return function () {
              return this.isValid() ? this._data[e] : NaN;
            };
          }
          var wt = Yt("milliseconds"),
            Ct = Yt("seconds"),
            Rt = Yt("minutes"),
            Bt = Yt("hours"),
            Ht = Yt("days"),
            It = Yt("months"),
            zt = Yt("years"),
            jt = Math.round,
            Ft = { ss: 44, s: 45, m: 45, h: 22, d: 26, M: 11 };
          function Wt(e, a, t, n, i) {
            return i.relativeTime(a || 1, !!t, e, n);
          }
          var Jt = Math.abs;
          function Vt(e) {
            return (e > 0) - (e < 0) || +e;
          }
          function xt() {
            if (!this.isValid()) return this.localeData().invalidDate();
            var e,
              a,
              t = Jt(this._milliseconds) / 1e3,
              n = Jt(this._days),
              i = Jt(this._months);
            (e = O(t / 60)), (a = O(e / 60)), (t %= 60), (e %= 60);
            var r = O(i / 12),
              o = (i %= 12),
              s = n,
              d = a,
              u = e,
              l = t ? t.toFixed(3).replace(/\.?0+$/, "") : "",
              m = this.asSeconds();
            if (!m) return "P0D";
            var y = m < 0 ? "-" : "",
              c = Vt(this._months) !== Vt(m) ? "-" : "",
              h = Vt(this._days) !== Vt(m) ? "-" : "",
              _ = Vt(this._milliseconds) !== Vt(m) ? "-" : "";
            return (
              y +
              "P" +
              (r ? c + r + "Y" : "") +
              (o ? c + o + "M" : "") +
              (s ? h + s + "D" : "") +
              (d || u || l ? "T" : "") +
              (d ? _ + d + "H" : "") +
              (u ? _ + u + "M" : "") +
              (l ? _ + l + "S" : "")
            );
          }
          var Nt = Da.prototype;
          return (
            (Nt.isValid = function () {
              return this._isValid;
            }),
            (Nt.abs = function () {
              var e = this._data;
              return (
                (this._milliseconds = Mt(this._milliseconds)),
                (this._days = Mt(this._days)),
                (this._months = Mt(this._months)),
                (e.milliseconds = Mt(e.milliseconds)),
                (e.seconds = Mt(e.seconds)),
                (e.minutes = Mt(e.minutes)),
                (e.hours = Mt(e.hours)),
                (e.months = Mt(e.months)),
                (e.years = Mt(e.years)),
                this
              );
            }),
            (Nt.add = function (e, a) {
              return pt(this, e, a, 1);
            }),
            (Nt.subtract = function (e, a) {
              return pt(this, e, a, -1);
            }),
            (Nt.as = function (e) {
              if (!this.isValid()) return NaN;
              var a,
                t,
                n = this._milliseconds;
              if ("month" === (e = B(e)) || "quarter" === e || "year" === e)
                switch (
                  ((a = this._days + n / 864e5), (t = this._months + gt(a)), e)
                ) {
                  case "month":
                    return t;
                  case "quarter":
                    return t / 3;
                  case "year":
                    return t / 12;
                }
              else
                switch (((a = this._days + Math.round(kt(this._months))), e)) {
                  case "week":
                    return a / 7 + n / 6048e5;
                  case "day":
                    return a + n / 864e5;
                  case "hour":
                    return 24 * a + n / 36e5;
                  case "minute":
                    return 1440 * a + n / 6e4;
                  case "second":
                    return 86400 * a + n / 1e3;
                  case "millisecond":
                    return Math.floor(864e5 * a) + n;
                  default:
                    throw new Error("Unknown unit " + e);
                }
            }),
            (Nt.asMilliseconds = Ot),
            (Nt.asSeconds = Tt),
            (Nt.asMinutes = vt),
            (Nt.asHours = At),
            (Nt.asDays = St),
            (Nt.asWeeks = Pt),
            (Nt.asMonths = bt),
            (Nt.asQuarters = Et),
            (Nt.asYears = Dt),
            (Nt.valueOf = function () {
              return this.isValid()
                ? this._milliseconds +
                    864e5 * this._days +
                    (this._months % 12) * 2592e6 +
                    31536e6 * T(this._months / 12)
                : NaN;
            }),
            (Nt._bubble = function () {
              var e,
                a,
                t,
                n,
                i,
                r = this._milliseconds,
                o = this._days,
                s = this._months,
                d = this._data;
              return (
                (r >= 0 && o >= 0 && s >= 0) ||
                  (r <= 0 && o <= 0 && s <= 0) ||
                  ((r += 864e5 * ft(kt(s) + o)), (o = 0), (s = 0)),
                (d.milliseconds = r % 1e3),
                (e = O(r / 1e3)),
                (d.seconds = e % 60),
                (a = O(e / 60)),
                (d.minutes = a % 60),
                (t = O(a / 60)),
                (d.hours = t % 24),
                (o += O(t / 24)),
                (i = O(gt(o))),
                (s += i),
                (o -= ft(kt(i))),
                (n = O(s / 12)),
                (s %= 12),
                (d.days = o),
                (d.months = s),
                (d.years = n),
                this
              );
            }),
            (Nt.clone = function () {
              return Wa(this);
            }),
            (Nt.get = function (e) {
              return (e = B(e)), this.isValid() ? this[e + "s"]() : NaN;
            }),
            (Nt.milliseconds = wt),
            (Nt.seconds = Ct),
            (Nt.minutes = Rt),
            (Nt.hours = Bt),
            (Nt.days = Ht),
            (Nt.weeks = function () {
              return O(this.days() / 7);
            }),
            (Nt.months = It),
            (Nt.years = zt),
            (Nt.humanize = function (e) {
              if (!this.isValid()) return this.localeData().invalidDate();
              var a = this.localeData(),
                t = (function (e, a, t) {
                  var n = Wa(e).abs(),
                    i = jt(n.as("s")),
                    r = jt(n.as("m")),
                    o = jt(n.as("h")),
                    s = jt(n.as("d")),
                    d = jt(n.as("M")),
                    u = jt(n.as("y")),
                    l = (i <= Ft.ss && ["s", i]) ||
                      (i < Ft.s && ["ss", i]) ||
                      (r <= 1 && ["m"]) ||
                      (r < Ft.m && ["mm", r]) ||
                      (o <= 1 && ["h"]) ||
                      (o < Ft.h && ["hh", o]) ||
                      (s <= 1 && ["d"]) ||
                      (s < Ft.d && ["dd", s]) ||
                      (d <= 1 && ["M"]) ||
                      (d < Ft.M && ["MM", d]) ||
                      (u <= 1 && ["y"]) || ["yy", u];
                  return (
                    (l[2] = a), (l[3] = +e > 0), (l[4] = t), Wt.apply(null, l)
                  );
                })(this, !e, a);
              return e && (t = a.pastFuture(+this, t)), a.postformat(t);
            }),
            (Nt.toISOString = xt),
            (Nt.toString = xt),
            (Nt.toJSON = xt),
            (Nt.locale = qa),
            (Nt.localeData = Xa),
            (Nt.toIsoString = S(
              "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
              xt
            )),
            (Nt.lang = Za),
            x("X", 0, 0, "unix"),
            x("x", 0, 0, "valueOf"),
            le("x", re),
            le("X", /[+-]?\d+(\.\d{1,3})?/),
            he("X", function (e, a, t) {
              t._d = new Date(1e3 * parseFloat(e, 10));
            }),
            he("x", function (e, a, t) {
              t._d = new Date(T(e));
            }),
            (i.version = "2.24.0"),
            (a = Aa),
            (i.fn = lt),
            (i.min = function () {
              var e = [].slice.call(arguments, 0);
              return ba("isBefore", e);
            }),
            (i.max = function () {
              var e = [].slice.call(arguments, 0);
              return ba("isAfter", e);
            }),
            (i.now = function () {
              return Date.now ? Date.now() : +new Date();
            }),
            (i.utc = c),
            (i.unix = function (e) {
              return Aa(1e3 * e);
            }),
            (i.months = function (e, a) {
              return ht(e, a, "months");
            }),
            (i.isDate = u),
            (i.locale = ra),
            (i.invalid = M),
            (i.duration = Wa),
            (i.isMoment = L),
            (i.weekdays = function (e, a, t) {
              return _t(e, a, t, "weekdays");
            }),
            (i.parseZone = function () {
              return Aa.apply(null, arguments).parseZone();
            }),
            (i.localeData = sa),
            (i.isDuration = Ya),
            (i.monthsShort = function (e, a) {
              return ht(e, a, "monthsShort");
            }),
            (i.weekdaysMin = function (e, a, t) {
              return _t(e, a, t, "weekdaysMin");
            }),
            (i.defineLocale = oa),
            (i.updateLocale = function (e, a) {
              if (null != a) {
                var t,
                  n,
                  i = ea;
                null != (n = ia(e)) && (i = n._config),
                  (a = Y(i, a)),
                  ((t = new w(a)).parentLocale = aa[e]),
                  (aa[e] = t),
                  ra(e);
              } else
                null != aa[e] &&
                  (null != aa[e].parentLocale
                    ? (aa[e] = aa[e].parentLocale)
                    : null != aa[e] && delete aa[e]);
              return aa[e];
            }),
            (i.locales = function () {
              return P(aa);
            }),
            (i.weekdaysShort = function (e, a, t) {
              return _t(e, a, t, "weekdaysShort");
            }),
            (i.normalizeUnits = B),
            (i.relativeTimeRounding = function (e) {
              return void 0 === e
                ? jt
                : "function" == typeof e && ((jt = e), !0);
            }),
            (i.relativeTimeThreshold = function (e, a) {
              return (
                void 0 !== Ft[e] &&
                (void 0 === a
                  ? Ft[e]
                  : ((Ft[e] = a), "s" === e && (Ft.ss = a - 1), !0))
              );
            }),
            (i.calendarFormat = function (e, a) {
              var t = e.diff(a, "days", !0);
              return t < -6
                ? "sameElse"
                : t < -1
                ? "lastWeek"
                : t < 0
                ? "lastDay"
                : t < 1
                ? "sameDay"
                : t < 2
                ? "nextDay"
                : t < 7
                ? "nextWeek"
                : "sameElse";
            }),
            (i.prototype = lt),
            (i.HTML5_FMT = {
              DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
              DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
              DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
              DATE: "YYYY-MM-DD",
              TIME: "HH:mm",
              TIME_SECONDS: "HH:mm:ss",
              TIME_MS: "HH:mm:ss.SSS",
              WEEK: "GGGG-[W]WW",
              MONTH: "YYYY-MM",
            }),
            i
          );
        })();
      }).call(this, t(2)(e));
    },
    function (e, a, t) {
      (function (e, n) {
        var i;
        /**
         * @license
         * Lodash <https://lodash.com/>
         * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */ (function () {
          var r = "Expected a function",
            o = "__lodash_placeholder__",
            s = [
              ["ary", 128],
              ["bind", 1],
              ["bindKey", 2],
              ["curry", 8],
              ["curryRight", 16],
              ["flip", 512],
              ["partial", 32],
              ["partialRight", 64],
              ["rearg", 256],
            ],
            d = "[object Arguments]",
            u = "[object Array]",
            l = "[object Boolean]",
            m = "[object Date]",
            y = "[object Error]",
            c = "[object Function]",
            h = "[object GeneratorFunction]",
            _ = "[object Map]",
            M = "[object Number]",
            p = "[object Object]",
            f = "[object RegExp]",
            g = "[object Set]",
            k = "[object String]",
            L = "[object Symbol]",
            O = "[object WeakMap]",
            T = "[object ArrayBuffer]",
            v = "[object DataView]",
            A = "[object Float32Array]",
            S = "[object Float64Array]",
            P = "[object Int8Array]",
            b = "[object Int16Array]",
            E = "[object Int32Array]",
            D = "[object Uint8Array]",
            Y = "[object Uint16Array]",
            w = "[object Uint32Array]",
            C = /\b__p \+= '';/g,
            R = /\b(__p \+=) '' \+/g,
            B = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
            H = /&(?:amp|lt|gt|quot|#39);/g,
            I = /[&<>"']/g,
            z = RegExp(H.source),
            j = RegExp(I.source),
            F = /<%-([\s\S]+?)%>/g,
            W = /<%([\s\S]+?)%>/g,
            J = /<%=([\s\S]+?)%>/g,
            V = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            x = /^\w*$/,
            N =
              /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            G = /[\\^$.*+?()[\]{}|]/g,
            K = RegExp(G.source),
            U = /^\s+|\s+$/g,
            q = /^\s+/,
            Z = /\s+$/,
            X = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            $ = /\{\n\/\* \[wrapped with (.+)\] \*/,
            Q = /,? & /,
            ee = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
            ae = /\\(\\)?/g,
            te = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            ne = /\w*$/,
            ie = /^[-+]0x[0-9a-f]+$/i,
            re = /^0b[01]+$/i,
            oe = /^\[object .+?Constructor\]$/,
            se = /^0o[0-7]+$/i,
            de = /^(?:0|[1-9]\d*)$/,
            ue = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
            le = /($^)/,
            me = /['\n\r\u2028\u2029\\]/g,
            ye = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
            ce =
              "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
            he = "[\\ud800-\\udfff]",
            _e = "[" + ce + "]",
            Me = "[" + ye + "]",
            pe = "\\d+",
            fe = "[\\u2700-\\u27bf]",
            ge = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
            ke =
              "[^\\ud800-\\udfff" +
              ce +
              pe +
              "\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
            Le = "\\ud83c[\\udffb-\\udfff]",
            Oe = "[^\\ud800-\\udfff]",
            Te = "(?:\\ud83c[\\udde6-\\uddff]){2}",
            ve = "[\\ud800-\\udbff][\\udc00-\\udfff]",
            Ae = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
            Se = "(?:" + ge + "|" + ke + ")",
            Pe = "(?:" + Ae + "|" + ke + ")",
            be = "(?:" + Me + "|" + Le + ")" + "?",
            Ee =
              "[\\ufe0e\\ufe0f]?" +
              be +
              ("(?:\\u200d(?:" +
                [Oe, Te, ve].join("|") +
                ")[\\ufe0e\\ufe0f]?" +
                be +
                ")*"),
            De = "(?:" + [fe, Te, ve].join("|") + ")" + Ee,
            Ye = "(?:" + [Oe + Me + "?", Me, Te, ve, he].join("|") + ")",
            we = RegExp("['’]", "g"),
            Ce = RegExp(Me, "g"),
            Re = RegExp(Le + "(?=" + Le + ")|" + Ye + Ee, "g"),
            Be = RegExp(
              [
                Ae +
                  "?" +
                  ge +
                  "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" +
                  [_e, Ae, "$"].join("|") +
                  ")",
                Pe +
                  "+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" +
                  [_e, Ae + Se, "$"].join("|") +
                  ")",
                Ae + "?" + Se + "+(?:['’](?:d|ll|m|re|s|t|ve))?",
                Ae + "+(?:['’](?:D|LL|M|RE|S|T|VE))?",
                "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
                "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
                pe,
                De,
              ].join("|"),
              "g"
            ),
            He = RegExp("[\\u200d\\ud800-\\udfff" + ye + "\\ufe0e\\ufe0f]"),
            Ie =
              /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
            ze = [
              "Array",
              "Buffer",
              "DataView",
              "Date",
              "Error",
              "Float32Array",
              "Float64Array",
              "Function",
              "Int8Array",
              "Int16Array",
              "Int32Array",
              "Map",
              "Math",
              "Object",
              "Promise",
              "RegExp",
              "Set",
              "String",
              "Symbol",
              "TypeError",
              "Uint8Array",
              "Uint8ClampedArray",
              "Uint16Array",
              "Uint32Array",
              "WeakMap",
              "_",
              "clearTimeout",
              "isFinite",
              "parseInt",
              "setTimeout",
            ],
            je = -1,
            Fe = {};
          (Fe[A] =
            Fe[S] =
            Fe[P] =
            Fe[b] =
            Fe[E] =
            Fe[D] =
            Fe["[object Uint8ClampedArray]"] =
            Fe[Y] =
            Fe[w] =
              !0),
            (Fe[d] =
              Fe[u] =
              Fe[T] =
              Fe[l] =
              Fe[v] =
              Fe[m] =
              Fe[y] =
              Fe[c] =
              Fe[_] =
              Fe[M] =
              Fe[p] =
              Fe[f] =
              Fe[g] =
              Fe[k] =
              Fe[O] =
                !1);
          var We = {};
          (We[d] =
            We[u] =
            We[T] =
            We[v] =
            We[l] =
            We[m] =
            We[A] =
            We[S] =
            We[P] =
            We[b] =
            We[E] =
            We[_] =
            We[M] =
            We[p] =
            We[f] =
            We[g] =
            We[k] =
            We[L] =
            We[D] =
            We["[object Uint8ClampedArray]"] =
            We[Y] =
            We[w] =
              !0),
            (We[y] = We[c] = We[O] = !1);
          var Je = {
              "\\": "\\",
              "'": "'",
              "\n": "n",
              "\r": "r",
              "\u2028": "u2028",
              "\u2029": "u2029",
            },
            Ve = parseFloat,
            xe = parseInt,
            Ne = "object" == typeof e && e && e.Object === Object && e,
            Ge =
              "object" == typeof self && self && self.Object === Object && self,
            Ke = Ne || Ge || Function("return this")(),
            Ue = a && !a.nodeType && a,
            qe = Ue && "object" == typeof n && n && !n.nodeType && n,
            Ze = qe && qe.exports === Ue,
            Xe = Ze && Ne.process,
            $e = (function () {
              try {
                var e = qe && qe.require && qe.require("util").types;
                return e || (Xe && Xe.binding && Xe.binding("util"));
              } catch (e) {}
            })(),
            Qe = $e && $e.isArrayBuffer,
            ea = $e && $e.isDate,
            aa = $e && $e.isMap,
            ta = $e && $e.isRegExp,
            na = $e && $e.isSet,
            ia = $e && $e.isTypedArray;
          function ra(e, a, t) {
            switch (t.length) {
              case 0:
                return e.call(a);
              case 1:
                return e.call(a, t[0]);
              case 2:
                return e.call(a, t[0], t[1]);
              case 3:
                return e.call(a, t[0], t[1], t[2]);
            }
            return e.apply(a, t);
          }
          function oa(e, a, t, n) {
            for (var i = -1, r = null == e ? 0 : e.length; ++i < r; ) {
              var o = e[i];
              a(n, o, t(o), e);
            }
            return n;
          }
          function sa(e, a) {
            for (
              var t = -1, n = null == e ? 0 : e.length;
              ++t < n && !1 !== a(e[t], t, e);

            );
            return e;
          }
          function da(e, a) {
            for (
              var t = null == e ? 0 : e.length;
              t-- && !1 !== a(e[t], t, e);

            );
            return e;
          }
          function ua(e, a) {
            for (var t = -1, n = null == e ? 0 : e.length; ++t < n; )
              if (!a(e[t], t, e)) return !1;
            return !0;
          }
          function la(e, a) {
            for (
              var t = -1, n = null == e ? 0 : e.length, i = 0, r = [];
              ++t < n;

            ) {
              var o = e[t];
              a(o, t, e) && (r[i++] = o);
            }
            return r;
          }
          function ma(e, a) {
            return !!(null == e ? 0 : e.length) && La(e, a, 0) > -1;
          }
          function ya(e, a, t) {
            for (var n = -1, i = null == e ? 0 : e.length; ++n < i; )
              if (t(a, e[n])) return !0;
            return !1;
          }
          function ca(e, a) {
            for (
              var t = -1, n = null == e ? 0 : e.length, i = Array(n);
              ++t < n;

            )
              i[t] = a(e[t], t, e);
            return i;
          }
          function ha(e, a) {
            for (var t = -1, n = a.length, i = e.length; ++t < n; )
              e[i + t] = a[t];
            return e;
          }
          function _a(e, a, t, n) {
            var i = -1,
              r = null == e ? 0 : e.length;
            for (n && r && (t = e[++i]); ++i < r; ) t = a(t, e[i], i, e);
            return t;
          }
          function Ma(e, a, t, n) {
            var i = null == e ? 0 : e.length;
            for (n && i && (t = e[--i]); i--; ) t = a(t, e[i], i, e);
            return t;
          }
          function pa(e, a) {
            for (var t = -1, n = null == e ? 0 : e.length; ++t < n; )
              if (a(e[t], t, e)) return !0;
            return !1;
          }
          var fa = Aa("length");
          function ga(e, a, t) {
            var n;
            return (
              t(e, function (e, t, i) {
                if (a(e, t, i)) return (n = t), !1;
              }),
              n
            );
          }
          function ka(e, a, t, n) {
            for (var i = e.length, r = t + (n ? 1 : -1); n ? r-- : ++r < i; )
              if (a(e[r], r, e)) return r;
            return -1;
          }
          function La(e, a, t) {
            return a == a
              ? (function (e, a, t) {
                  var n = t - 1,
                    i = e.length;
                  for (; ++n < i; ) if (e[n] === a) return n;
                  return -1;
                })(e, a, t)
              : ka(e, Ta, t);
          }
          function Oa(e, a, t, n) {
            for (var i = t - 1, r = e.length; ++i < r; )
              if (n(e[i], a)) return i;
            return -1;
          }
          function Ta(e) {
            return e != e;
          }
          function va(e, a) {
            var t = null == e ? 0 : e.length;
            return t ? ba(e, a) / t : NaN;
          }
          function Aa(e) {
            return function (a) {
              return null == a ? void 0 : a[e];
            };
          }
          function Sa(e) {
            return function (a) {
              return null == e ? void 0 : e[a];
            };
          }
          function Pa(e, a, t, n, i) {
            return (
              i(e, function (e, i, r) {
                t = n ? ((n = !1), e) : a(t, e, i, r);
              }),
              t
            );
          }
          function ba(e, a) {
            for (var t, n = -1, i = e.length; ++n < i; ) {
              var r = a(e[n]);
              void 0 !== r && (t = void 0 === t ? r : t + r);
            }
            return t;
          }
          function Ea(e, a) {
            for (var t = -1, n = Array(e); ++t < e; ) n[t] = a(t);
            return n;
          }
          function Da(e) {
            return function (a) {
              return e(a);
            };
          }
          function Ya(e, a) {
            return ca(a, function (a) {
              return e[a];
            });
          }
          function wa(e, a) {
            return e.has(a);
          }
          function Ca(e, a) {
            for (var t = -1, n = e.length; ++t < n && La(a, e[t], 0) > -1; );
            return t;
          }
          function Ra(e, a) {
            for (var t = e.length; t-- && La(a, e[t], 0) > -1; );
            return t;
          }
          function Ba(e, a) {
            for (var t = e.length, n = 0; t--; ) e[t] === a && ++n;
            return n;
          }
          var Ha = Sa({
              À: "A",
              Á: "A",
              Â: "A",
              Ã: "A",
              Ä: "A",
              Å: "A",
              à: "a",
              á: "a",
              â: "a",
              ã: "a",
              ä: "a",
              å: "a",
              Ç: "C",
              ç: "c",
              Ð: "D",
              ð: "d",
              È: "E",
              É: "E",
              Ê: "E",
              Ë: "E",
              è: "e",
              é: "e",
              ê: "e",
              ë: "e",
              Ì: "I",
              Í: "I",
              Î: "I",
              Ï: "I",
              ì: "i",
              í: "i",
              î: "i",
              ï: "i",
              Ñ: "N",
              ñ: "n",
              Ò: "O",
              Ó: "O",
              Ô: "O",
              Õ: "O",
              Ö: "O",
              Ø: "O",
              ò: "o",
              ó: "o",
              ô: "o",
              õ: "o",
              ö: "o",
              ø: "o",
              Ù: "U",
              Ú: "U",
              Û: "U",
              Ü: "U",
              ù: "u",
              ú: "u",
              û: "u",
              ü: "u",
              Ý: "Y",
              ý: "y",
              ÿ: "y",
              Æ: "Ae",
              æ: "ae",
              Þ: "Th",
              þ: "th",
              ß: "ss",
              Ā: "A",
              Ă: "A",
              Ą: "A",
              ā: "a",
              ă: "a",
              ą: "a",
              Ć: "C",
              Ĉ: "C",
              Ċ: "C",
              Č: "C",
              ć: "c",
              ĉ: "c",
              ċ: "c",
              č: "c",
              Ď: "D",
              Đ: "D",
              ď: "d",
              đ: "d",
              Ē: "E",
              Ĕ: "E",
              Ė: "E",
              Ę: "E",
              Ě: "E",
              ē: "e",
              ĕ: "e",
              ė: "e",
              ę: "e",
              ě: "e",
              Ĝ: "G",
              Ğ: "G",
              Ġ: "G",
              Ģ: "G",
              ĝ: "g",
              ğ: "g",
              ġ: "g",
              ģ: "g",
              Ĥ: "H",
              Ħ: "H",
              ĥ: "h",
              ħ: "h",
              Ĩ: "I",
              Ī: "I",
              Ĭ: "I",
              Į: "I",
              İ: "I",
              ĩ: "i",
              ī: "i",
              ĭ: "i",
              į: "i",
              ı: "i",
              Ĵ: "J",
              ĵ: "j",
              Ķ: "K",
              ķ: "k",
              ĸ: "k",
              Ĺ: "L",
              Ļ: "L",
              Ľ: "L",
              Ŀ: "L",
              Ł: "L",
              ĺ: "l",
              ļ: "l",
              ľ: "l",
              ŀ: "l",
              ł: "l",
              Ń: "N",
              Ņ: "N",
              Ň: "N",
              Ŋ: "N",
              ń: "n",
              ņ: "n",
              ň: "n",
              ŋ: "n",
              Ō: "O",
              Ŏ: "O",
              Ő: "O",
              ō: "o",
              ŏ: "o",
              ő: "o",
              Ŕ: "R",
              Ŗ: "R",
              Ř: "R",
              ŕ: "r",
              ŗ: "r",
              ř: "r",
              Ś: "S",
              Ŝ: "S",
              Ş: "S",
              Š: "S",
              ś: "s",
              ŝ: "s",
              ş: "s",
              š: "s",
              Ţ: "T",
              Ť: "T",
              Ŧ: "T",
              ţ: "t",
              ť: "t",
              ŧ: "t",
              Ũ: "U",
              Ū: "U",
              Ŭ: "U",
              Ů: "U",
              Ű: "U",
              Ų: "U",
              ũ: "u",
              ū: "u",
              ŭ: "u",
              ů: "u",
              ű: "u",
              ų: "u",
              Ŵ: "W",
              ŵ: "w",
              Ŷ: "Y",
              ŷ: "y",
              Ÿ: "Y",
              Ź: "Z",
              Ż: "Z",
              Ž: "Z",
              ź: "z",
              ż: "z",
              ž: "z",
              Ĳ: "IJ",
              ĳ: "ij",
              Œ: "Oe",
              œ: "oe",
              ŉ: "'n",
              ſ: "s",
            }),
            Ia = Sa({
              "&": "&amp;",
              "<": "&lt;",
              ">": "&gt;",
              '"': "&quot;",
              "'": "&#39;",
            });
          function za(e) {
            return "\\" + Je[e];
          }
          function ja(e) {
            return He.test(e);
          }
          function Fa(e) {
            var a = -1,
              t = Array(e.size);
            return (
              e.forEach(function (e, n) {
                t[++a] = [n, e];
              }),
              t
            );
          }
          function Wa(e, a) {
            return function (t) {
              return e(a(t));
            };
          }
          function Ja(e, a) {
            for (var t = -1, n = e.length, i = 0, r = []; ++t < n; ) {
              var s = e[t];
              (s !== a && s !== o) || ((e[t] = o), (r[i++] = t));
            }
            return r;
          }
          function Va(e) {
            var a = -1,
              t = Array(e.size);
            return (
              e.forEach(function (e) {
                t[++a] = e;
              }),
              t
            );
          }
          function xa(e) {
            var a = -1,
              t = Array(e.size);
            return (
              e.forEach(function (e) {
                t[++a] = [e, e];
              }),
              t
            );
          }
          function Na(e) {
            return ja(e)
              ? (function (e) {
                  var a = (Re.lastIndex = 0);
                  for (; Re.test(e); ) ++a;
                  return a;
                })(e)
              : fa(e);
          }
          function Ga(e) {
            return ja(e)
              ? (function (e) {
                  return e.match(Re) || [];
                })(e)
              : (function (e) {
                  return e.split("");
                })(e);
          }
          var Ka = Sa({
            "&amp;": "&",
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&#39;": "'",
          });
          var Ua = (function e(a) {
            var t,
              n = (a =
                null == a ? Ke : Ua.defaults(Ke.Object(), a, Ua.pick(Ke, ze)))
                .Array,
              i = a.Date,
              ye = a.Error,
              ce = a.Function,
              he = a.Math,
              _e = a.Object,
              Me = a.RegExp,
              pe = a.String,
              fe = a.TypeError,
              ge = n.prototype,
              ke = ce.prototype,
              Le = _e.prototype,
              Oe = a["__core-js_shared__"],
              Te = ke.toString,
              ve = Le.hasOwnProperty,
              Ae = 0,
              Se = (t = /[^.]+$/.exec(
                (Oe && Oe.keys && Oe.keys.IE_PROTO) || ""
              ))
                ? "Symbol(src)_1." + t
                : "",
              Pe = Le.toString,
              be = Te.call(_e),
              Ee = Ke._,
              De = Me(
                "^" +
                  Te.call(ve)
                    .replace(G, "\\$&")
                    .replace(
                      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                      "$1.*?"
                    ) +
                  "$"
              ),
              Ye = Ze ? a.Buffer : void 0,
              Re = a.Symbol,
              He = a.Uint8Array,
              Je = Ye ? Ye.allocUnsafe : void 0,
              Ne = Wa(_e.getPrototypeOf, _e),
              Ge = _e.create,
              Ue = Le.propertyIsEnumerable,
              qe = ge.splice,
              Xe = Re ? Re.isConcatSpreadable : void 0,
              $e = Re ? Re.iterator : void 0,
              fa = Re ? Re.toStringTag : void 0,
              Sa = (function () {
                try {
                  var e = Qi(_e, "defineProperty");
                  return e({}, "", {}), e;
                } catch (e) {}
              })(),
              qa = a.clearTimeout !== Ke.clearTimeout && a.clearTimeout,
              Za = i && i.now !== Ke.Date.now && i.now,
              Xa = a.setTimeout !== Ke.setTimeout && a.setTimeout,
              $a = he.ceil,
              Qa = he.floor,
              et = _e.getOwnPropertySymbols,
              at = Ye ? Ye.isBuffer : void 0,
              tt = a.isFinite,
              nt = ge.join,
              it = Wa(_e.keys, _e),
              rt = he.max,
              ot = he.min,
              st = i.now,
              dt = a.parseInt,
              ut = he.random,
              lt = ge.reverse,
              mt = Qi(a, "DataView"),
              yt = Qi(a, "Map"),
              ct = Qi(a, "Promise"),
              ht = Qi(a, "Set"),
              _t = Qi(a, "WeakMap"),
              Mt = Qi(_e, "create"),
              pt = _t && new _t(),
              ft = {},
              gt = Sr(mt),
              kt = Sr(yt),
              Lt = Sr(ct),
              Ot = Sr(ht),
              Tt = Sr(_t),
              vt = Re ? Re.prototype : void 0,
              At = vt ? vt.valueOf : void 0,
              St = vt ? vt.toString : void 0;
            function Pt(e) {
              if (xo(e) && !Co(e) && !(e instanceof Yt)) {
                if (e instanceof Dt) return e;
                if (ve.call(e, "__wrapped__")) return Pr(e);
              }
              return new Dt(e);
            }
            var bt = (function () {
              function e() {}
              return function (a) {
                if (!Vo(a)) return {};
                if (Ge) return Ge(a);
                e.prototype = a;
                var t = new e();
                return (e.prototype = void 0), t;
              };
            })();
            function Et() {}
            function Dt(e, a) {
              (this.__wrapped__ = e),
                (this.__actions__ = []),
                (this.__chain__ = !!a),
                (this.__index__ = 0),
                (this.__values__ = void 0);
            }
            function Yt(e) {
              (this.__wrapped__ = e),
                (this.__actions__ = []),
                (this.__dir__ = 1),
                (this.__filtered__ = !1),
                (this.__iteratees__ = []),
                (this.__takeCount__ = 4294967295),
                (this.__views__ = []);
            }
            function wt(e) {
              var a = -1,
                t = null == e ? 0 : e.length;
              for (this.clear(); ++a < t; ) {
                var n = e[a];
                this.set(n[0], n[1]);
              }
            }
            function Ct(e) {
              var a = -1,
                t = null == e ? 0 : e.length;
              for (this.clear(); ++a < t; ) {
                var n = e[a];
                this.set(n[0], n[1]);
              }
            }
            function Rt(e) {
              var a = -1,
                t = null == e ? 0 : e.length;
              for (this.clear(); ++a < t; ) {
                var n = e[a];
                this.set(n[0], n[1]);
              }
            }
            function Bt(e) {
              var a = -1,
                t = null == e ? 0 : e.length;
              for (this.__data__ = new Rt(); ++a < t; ) this.add(e[a]);
            }
            function Ht(e) {
              var a = (this.__data__ = new Ct(e));
              this.size = a.size;
            }
            function It(e, a) {
              var t = Co(e),
                n = !t && wo(e),
                i = !t && !n && Io(e),
                r = !t && !n && !i && $o(e),
                o = t || n || i || r,
                s = o ? Ea(e.length, pe) : [],
                d = s.length;
              for (var u in e)
                (!a && !ve.call(e, u)) ||
                  (o &&
                    ("length" == u ||
                      (i && ("offset" == u || "parent" == u)) ||
                      (r &&
                        ("buffer" == u ||
                          "byteLength" == u ||
                          "byteOffset" == u)) ||
                      or(u, d))) ||
                  s.push(u);
              return s;
            }
            function zt(e) {
              var a = e.length;
              return a ? e[Hn(0, a - 1)] : void 0;
            }
            function jt(e, a) {
              return Tr(pi(e), Ut(a, 0, e.length));
            }
            function Ft(e) {
              return Tr(pi(e));
            }
            function Wt(e, a, t) {
              ((void 0 === t || Eo(e[a], t)) && (void 0 !== t || a in e)) ||
                Gt(e, a, t);
            }
            function Jt(e, a, t) {
              var n = e[a];
              (ve.call(e, a) && Eo(n, t) && (void 0 !== t || a in e)) ||
                Gt(e, a, t);
            }
            function Vt(e, a) {
              for (var t = e.length; t--; ) if (Eo(e[t][0], a)) return t;
              return -1;
            }
            function xt(e, a, t, n) {
              return (
                Qt(e, function (e, i, r) {
                  a(n, e, t(e), r);
                }),
                n
              );
            }
            function Nt(e, a) {
              return e && fi(a, ks(a), e);
            }
            function Gt(e, a, t) {
              "__proto__" == a && Sa
                ? Sa(e, a, {
                    configurable: !0,
                    enumerable: !0,
                    value: t,
                    writable: !0,
                  })
                : (e[a] = t);
            }
            function Kt(e, a) {
              for (var t = -1, i = a.length, r = n(i), o = null == e; ++t < i; )
                r[t] = o ? void 0 : _s(e, a[t]);
              return r;
            }
            function Ut(e, a, t) {
              return (
                e == e &&
                  (void 0 !== t && (e = e <= t ? e : t),
                  void 0 !== a && (e = e >= a ? e : a)),
                e
              );
            }
            function qt(e, a, t, n, i, r) {
              var o,
                s = 1 & a,
                u = 2 & a,
                y = 4 & a;
              if ((t && (o = i ? t(e, n, i, r) : t(e)), void 0 !== o)) return o;
              if (!Vo(e)) return e;
              var O = Co(e);
              if (O) {
                if (
                  ((o = (function (e) {
                    var a = e.length,
                      t = new e.constructor(a);
                    a &&
                      "string" == typeof e[0] &&
                      ve.call(e, "index") &&
                      ((t.index = e.index), (t.input = e.input));
                    return t;
                  })(e)),
                  !s)
                )
                  return pi(e, o);
              } else {
                var C = tr(e),
                  R = C == c || C == h;
                if (Io(e)) return mi(e, s);
                if (C == p || C == d || (R && !i)) {
                  if (((o = u || R ? {} : ir(e)), !s))
                    return u
                      ? (function (e, a) {
                          return fi(e, ar(e), a);
                        })(
                          e,
                          (function (e, a) {
                            return e && fi(a, Ls(a), e);
                          })(o, e)
                        )
                      : (function (e, a) {
                          return fi(e, er(e), a);
                        })(e, Nt(o, e));
                } else {
                  if (!We[C]) return i ? e : {};
                  o = (function (e, a, t) {
                    var n = e.constructor;
                    switch (a) {
                      case T:
                        return yi(e);
                      case l:
                      case m:
                        return new n(+e);
                      case v:
                        return (function (e, a) {
                          var t = a ? yi(e.buffer) : e.buffer;
                          return new e.constructor(
                            t,
                            e.byteOffset,
                            e.byteLength
                          );
                        })(e, t);
                      case A:
                      case S:
                      case P:
                      case b:
                      case E:
                      case D:
                      case "[object Uint8ClampedArray]":
                      case Y:
                      case w:
                        return ci(e, t);
                      case _:
                        return new n();
                      case M:
                      case k:
                        return new n(e);
                      case f:
                        return (function (e) {
                          var a = new e.constructor(e.source, ne.exec(e));
                          return (a.lastIndex = e.lastIndex), a;
                        })(e);
                      case g:
                        return new n();
                      case L:
                        return (i = e), At ? _e(At.call(i)) : {};
                    }
                    var i;
                  })(e, C, s);
                }
              }
              r || (r = new Ht());
              var B = r.get(e);
              if (B) return B;
              r.set(e, o),
                qo(e)
                  ? e.forEach(function (n) {
                      o.add(qt(n, a, t, n, e, r));
                    })
                  : No(e) &&
                    e.forEach(function (n, i) {
                      o.set(i, qt(n, a, t, i, e, r));
                    });
              var H = O ? void 0 : (y ? (u ? Gi : Ni) : u ? Ls : ks)(e);
              return (
                sa(H || e, function (n, i) {
                  H && (n = e[(i = n)]), Jt(o, i, qt(n, a, t, i, e, r));
                }),
                o
              );
            }
            function Zt(e, a, t) {
              var n = t.length;
              if (null == e) return !n;
              for (e = _e(e); n--; ) {
                var i = t[n],
                  r = a[i],
                  o = e[i];
                if ((void 0 === o && !(i in e)) || !r(o)) return !1;
              }
              return !0;
            }
            function Xt(e, a, t) {
              if ("function" != typeof e) throw new fe(r);
              return gr(function () {
                e.apply(void 0, t);
              }, a);
            }
            function $t(e, a, t, n) {
              var i = -1,
                r = ma,
                o = !0,
                s = e.length,
                d = [],
                u = a.length;
              if (!s) return d;
              t && (a = ca(a, Da(t))),
                n
                  ? ((r = ya), (o = !1))
                  : a.length >= 200 && ((r = wa), (o = !1), (a = new Bt(a)));
              e: for (; ++i < s; ) {
                var l = e[i],
                  m = null == t ? l : t(l);
                if (((l = n || 0 !== l ? l : 0), o && m == m)) {
                  for (var y = u; y--; ) if (a[y] === m) continue e;
                  d.push(l);
                } else r(a, m, n) || d.push(l);
              }
              return d;
            }
            (Pt.templateSettings = {
              escape: F,
              evaluate: W,
              interpolate: J,
              variable: "",
              imports: { _: Pt },
            }),
              (Pt.prototype = Et.prototype),
              (Pt.prototype.constructor = Pt),
              (Dt.prototype = bt(Et.prototype)),
              (Dt.prototype.constructor = Dt),
              (Yt.prototype = bt(Et.prototype)),
              (Yt.prototype.constructor = Yt),
              (wt.prototype.clear = function () {
                (this.__data__ = Mt ? Mt(null) : {}), (this.size = 0);
              }),
              (wt.prototype.delete = function (e) {
                var a = this.has(e) && delete this.__data__[e];
                return (this.size -= a ? 1 : 0), a;
              }),
              (wt.prototype.get = function (e) {
                var a = this.__data__;
                if (Mt) {
                  var t = a[e];
                  return "__lodash_hash_undefined__" === t ? void 0 : t;
                }
                return ve.call(a, e) ? a[e] : void 0;
              }),
              (wt.prototype.has = function (e) {
                var a = this.__data__;
                return Mt ? void 0 !== a[e] : ve.call(a, e);
              }),
              (wt.prototype.set = function (e, a) {
                var t = this.__data__;
                return (
                  (this.size += this.has(e) ? 0 : 1),
                  (t[e] = Mt && void 0 === a ? "__lodash_hash_undefined__" : a),
                  this
                );
              }),
              (Ct.prototype.clear = function () {
                (this.__data__ = []), (this.size = 0);
              }),
              (Ct.prototype.delete = function (e) {
                var a = this.__data__,
                  t = Vt(a, e);
                return (
                  !(t < 0) &&
                  (t == a.length - 1 ? a.pop() : qe.call(a, t, 1),
                  --this.size,
                  !0)
                );
              }),
              (Ct.prototype.get = function (e) {
                var a = this.__data__,
                  t = Vt(a, e);
                return t < 0 ? void 0 : a[t][1];
              }),
              (Ct.prototype.has = function (e) {
                return Vt(this.__data__, e) > -1;
              }),
              (Ct.prototype.set = function (e, a) {
                var t = this.__data__,
                  n = Vt(t, e);
                return (
                  n < 0 ? (++this.size, t.push([e, a])) : (t[n][1] = a), this
                );
              }),
              (Rt.prototype.clear = function () {
                (this.size = 0),
                  (this.__data__ = {
                    hash: new wt(),
                    map: new (yt || Ct)(),
                    string: new wt(),
                  });
              }),
              (Rt.prototype.delete = function (e) {
                var a = Xi(this, e).delete(e);
                return (this.size -= a ? 1 : 0), a;
              }),
              (Rt.prototype.get = function (e) {
                return Xi(this, e).get(e);
              }),
              (Rt.prototype.has = function (e) {
                return Xi(this, e).has(e);
              }),
              (Rt.prototype.set = function (e, a) {
                var t = Xi(this, e),
                  n = t.size;
                return t.set(e, a), (this.size += t.size == n ? 0 : 1), this;
              }),
              (Bt.prototype.add = Bt.prototype.push =
                function (e) {
                  return (
                    this.__data__.set(e, "__lodash_hash_undefined__"), this
                  );
                }),
              (Bt.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Ht.prototype.clear = function () {
                (this.__data__ = new Ct()), (this.size = 0);
              }),
              (Ht.prototype.delete = function (e) {
                var a = this.__data__,
                  t = a.delete(e);
                return (this.size = a.size), t;
              }),
              (Ht.prototype.get = function (e) {
                return this.__data__.get(e);
              }),
              (Ht.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Ht.prototype.set = function (e, a) {
                var t = this.__data__;
                if (t instanceof Ct) {
                  var n = t.__data__;
                  if (!yt || n.length < 199)
                    return n.push([e, a]), (this.size = ++t.size), this;
                  t = this.__data__ = new Rt(n);
                }
                return t.set(e, a), (this.size = t.size), this;
              });
            var Qt = Li(dn),
              en = Li(un, !0);
            function an(e, a) {
              var t = !0;
              return (
                Qt(e, function (e, n, i) {
                  return (t = !!a(e, n, i));
                }),
                t
              );
            }
            function tn(e, a, t) {
              for (var n = -1, i = e.length; ++n < i; ) {
                var r = e[n],
                  o = a(r);
                if (null != o && (void 0 === s ? o == o && !Xo(o) : t(o, s)))
                  var s = o,
                    d = r;
              }
              return d;
            }
            function nn(e, a) {
              var t = [];
              return (
                Qt(e, function (e, n, i) {
                  a(e, n, i) && t.push(e);
                }),
                t
              );
            }
            function rn(e, a, t, n, i) {
              var r = -1,
                o = e.length;
              for (t || (t = rr), i || (i = []); ++r < o; ) {
                var s = e[r];
                a > 0 && t(s)
                  ? a > 1
                    ? rn(s, a - 1, t, n, i)
                    : ha(i, s)
                  : n || (i[i.length] = s);
              }
              return i;
            }
            var on = Oi(),
              sn = Oi(!0);
            function dn(e, a) {
              return e && on(e, a, ks);
            }
            function un(e, a) {
              return e && sn(e, a, ks);
            }
            function ln(e, a) {
              return la(a, function (a) {
                return Fo(e[a]);
              });
            }
            function mn(e, a) {
              for (var t = 0, n = (a = si(a, e)).length; null != e && t < n; )
                e = e[Ar(a[t++])];
              return t && t == n ? e : void 0;
            }
            function yn(e, a, t) {
              var n = a(e);
              return Co(e) ? n : ha(n, t(e));
            }
            function cn(e) {
              return null == e
                ? void 0 === e
                  ? "[object Undefined]"
                  : "[object Null]"
                : fa && fa in _e(e)
                ? (function (e) {
                    var a = ve.call(e, fa),
                      t = e[fa];
                    try {
                      e[fa] = void 0;
                      var n = !0;
                    } catch (e) {}
                    var i = Pe.call(e);
                    n && (a ? (e[fa] = t) : delete e[fa]);
                    return i;
                  })(e)
                : (function (e) {
                    return Pe.call(e);
                  })(e);
            }
            function hn(e, a) {
              return e > a;
            }
            function _n(e, a) {
              return null != e && ve.call(e, a);
            }
            function Mn(e, a) {
              return null != e && a in _e(e);
            }
            function pn(e, a, t) {
              for (
                var i = t ? ya : ma,
                  r = e[0].length,
                  o = e.length,
                  s = o,
                  d = n(o),
                  u = 1 / 0,
                  l = [];
                s--;

              ) {
                var m = e[s];
                s && a && (m = ca(m, Da(a))),
                  (u = ot(m.length, u)),
                  (d[s] =
                    !t && (a || (r >= 120 && m.length >= 120))
                      ? new Bt(s && m)
                      : void 0);
              }
              m = e[0];
              var y = -1,
                c = d[0];
              e: for (; ++y < r && l.length < u; ) {
                var h = m[y],
                  _ = a ? a(h) : h;
                if (
                  ((h = t || 0 !== h ? h : 0), !(c ? wa(c, _) : i(l, _, t)))
                ) {
                  for (s = o; --s; ) {
                    var M = d[s];
                    if (!(M ? wa(M, _) : i(e[s], _, t))) continue e;
                  }
                  c && c.push(_), l.push(h);
                }
              }
              return l;
            }
            function fn(e, a, t) {
              var n = null == (e = _r(e, (a = si(a, e)))) ? e : e[Ar(zr(a))];
              return null == n ? void 0 : ra(n, e, t);
            }
            function gn(e) {
              return xo(e) && cn(e) == d;
            }
            function kn(e, a, t, n, i) {
              return (
                e === a ||
                (null == e || null == a || (!xo(e) && !xo(a))
                  ? e != e && a != a
                  : (function (e, a, t, n, i, r) {
                      var o = Co(e),
                        s = Co(a),
                        c = o ? u : tr(e),
                        h = s ? u : tr(a),
                        O = (c = c == d ? p : c) == p,
                        A = (h = h == d ? p : h) == p,
                        S = c == h;
                      if (S && Io(e)) {
                        if (!Io(a)) return !1;
                        (o = !0), (O = !1);
                      }
                      if (S && !O)
                        return (
                          r || (r = new Ht()),
                          o || $o(e)
                            ? Vi(e, a, t, n, i, r)
                            : (function (e, a, t, n, i, r, o) {
                                switch (t) {
                                  case v:
                                    if (
                                      e.byteLength != a.byteLength ||
                                      e.byteOffset != a.byteOffset
                                    )
                                      return !1;
                                    (e = e.buffer), (a = a.buffer);
                                  case T:
                                    return !(
                                      e.byteLength != a.byteLength ||
                                      !r(new He(e), new He(a))
                                    );
                                  case l:
                                  case m:
                                  case M:
                                    return Eo(+e, +a);
                                  case y:
                                    return (
                                      e.name == a.name && e.message == a.message
                                    );
                                  case f:
                                  case k:
                                    return e == a + "";
                                  case _:
                                    var s = Fa;
                                  case g:
                                    var d = 1 & n;
                                    if ((s || (s = Va), e.size != a.size && !d))
                                      return !1;
                                    var u = o.get(e);
                                    if (u) return u == a;
                                    (n |= 2), o.set(e, a);
                                    var c = Vi(s(e), s(a), n, i, r, o);
                                    return o.delete(e), c;
                                  case L:
                                    if (At) return At.call(e) == At.call(a);
                                }
                                return !1;
                              })(e, a, c, t, n, i, r)
                        );
                      if (!(1 & t)) {
                        var P = O && ve.call(e, "__wrapped__"),
                          b = A && ve.call(a, "__wrapped__");
                        if (P || b) {
                          var E = P ? e.value() : e,
                            D = b ? a.value() : a;
                          return r || (r = new Ht()), i(E, D, t, n, r);
                        }
                      }
                      if (!S) return !1;
                      return (
                        r || (r = new Ht()),
                        (function (e, a, t, n, i, r) {
                          var o = 1 & t,
                            s = Ni(e),
                            d = s.length,
                            u = Ni(a).length;
                          if (d != u && !o) return !1;
                          var l = d;
                          for (; l--; ) {
                            var m = s[l];
                            if (!(o ? m in a : ve.call(a, m))) return !1;
                          }
                          var y = r.get(e);
                          if (y && r.get(a)) return y == a;
                          var c = !0;
                          r.set(e, a), r.set(a, e);
                          var h = o;
                          for (; ++l < d; ) {
                            m = s[l];
                            var _ = e[m],
                              M = a[m];
                            if (n)
                              var p = o
                                ? n(M, _, m, a, e, r)
                                : n(_, M, m, e, a, r);
                            if (
                              !(void 0 === p ? _ === M || i(_, M, t, n, r) : p)
                            ) {
                              c = !1;
                              break;
                            }
                            h || (h = "constructor" == m);
                          }
                          if (c && !h) {
                            var f = e.constructor,
                              g = a.constructor;
                            f != g &&
                              "constructor" in e &&
                              "constructor" in a &&
                              !(
                                "function" == typeof f &&
                                f instanceof f &&
                                "function" == typeof g &&
                                g instanceof g
                              ) &&
                              (c = !1);
                          }
                          return r.delete(e), r.delete(a), c;
                        })(e, a, t, n, i, r)
                      );
                    })(e, a, t, n, kn, i))
              );
            }
            function Ln(e, a, t, n) {
              var i = t.length,
                r = i,
                o = !n;
              if (null == e) return !r;
              for (e = _e(e); i--; ) {
                var s = t[i];
                if (o && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1;
              }
              for (; ++i < r; ) {
                var d = (s = t[i])[0],
                  u = e[d],
                  l = s[1];
                if (o && s[2]) {
                  if (void 0 === u && !(d in e)) return !1;
                } else {
                  var m = new Ht();
                  if (n) var y = n(u, l, d, e, a, m);
                  if (!(void 0 === y ? kn(l, u, 3, n, m) : y)) return !1;
                }
              }
              return !0;
            }
            function On(e) {
              return (
                !(!Vo(e) || ((a = e), Se && Se in a)) &&
                (Fo(e) ? De : oe).test(Sr(e))
              );
              var a;
            }
            function Tn(e) {
              return "function" == typeof e
                ? e
                : null == e
                ? Gs
                : "object" == typeof e
                ? Co(e)
                  ? En(e[0], e[1])
                  : bn(e)
                : ad(e);
            }
            function vn(e) {
              if (!mr(e)) return it(e);
              var a = [];
              for (var t in _e(e))
                ve.call(e, t) && "constructor" != t && a.push(t);
              return a;
            }
            function An(e) {
              if (!Vo(e))
                return (function (e) {
                  var a = [];
                  if (null != e) for (var t in _e(e)) a.push(t);
                  return a;
                })(e);
              var a = mr(e),
                t = [];
              for (var n in e)
                ("constructor" != n || (!a && ve.call(e, n))) && t.push(n);
              return t;
            }
            function Sn(e, a) {
              return e < a;
            }
            function Pn(e, a) {
              var t = -1,
                i = Bo(e) ? n(e.length) : [];
              return (
                Qt(e, function (e, n, r) {
                  i[++t] = a(e, n, r);
                }),
                i
              );
            }
            function bn(e) {
              var a = $i(e);
              return 1 == a.length && a[0][2]
                ? cr(a[0][0], a[0][1])
                : function (t) {
                    return t === e || Ln(t, e, a);
                  };
            }
            function En(e, a) {
              return dr(e) && yr(a)
                ? cr(Ar(e), a)
                : function (t) {
                    var n = _s(t, e);
                    return void 0 === n && n === a ? Ms(t, e) : kn(a, n, 3);
                  };
            }
            function Dn(e, a, t, n, i) {
              e !== a &&
                on(
                  a,
                  function (r, o) {
                    if ((i || (i = new Ht()), Vo(r)))
                      !(function (e, a, t, n, i, r, o) {
                        var s = pr(e, t),
                          d = pr(a, t),
                          u = o.get(d);
                        if (u) return void Wt(e, t, u);
                        var l = r ? r(s, d, t + "", e, a, o) : void 0,
                          m = void 0 === l;
                        if (m) {
                          var y = Co(d),
                            c = !y && Io(d),
                            h = !y && !c && $o(d);
                          (l = d),
                            y || c || h
                              ? Co(s)
                                ? (l = s)
                                : Ho(s)
                                ? (l = pi(s))
                                : c
                                ? ((m = !1), (l = mi(d, !0)))
                                : h
                                ? ((m = !1), (l = ci(d, !0)))
                                : (l = [])
                              : Ko(d) || wo(d)
                              ? ((l = s),
                                wo(s)
                                  ? (l = os(s))
                                  : (Vo(s) && !Fo(s)) || (l = ir(d)))
                              : (m = !1);
                        }
                        m && (o.set(d, l), i(l, d, n, r, o), o.delete(d));
                        Wt(e, t, l);
                      })(e, a, o, t, Dn, n, i);
                    else {
                      var s = n ? n(pr(e, o), r, o + "", e, a, i) : void 0;
                      void 0 === s && (s = r), Wt(e, o, s);
                    }
                  },
                  Ls
                );
            }
            function Yn(e, a) {
              var t = e.length;
              if (t) return or((a += a < 0 ? t : 0), t) ? e[a] : void 0;
            }
            function wn(e, a, t) {
              var n = -1;
              return (
                (a = ca(a.length ? a : [Gs], Da(Zi()))),
                (function (e, a) {
                  var t = e.length;
                  for (e.sort(a); t--; ) e[t] = e[t].value;
                  return e;
                })(
                  Pn(e, function (e, t, i) {
                    return {
                      criteria: ca(a, function (a) {
                        return a(e);
                      }),
                      index: ++n,
                      value: e,
                    };
                  }),
                  function (e, a) {
                    return (function (e, a, t) {
                      var n = -1,
                        i = e.criteria,
                        r = a.criteria,
                        o = i.length,
                        s = t.length;
                      for (; ++n < o; ) {
                        var d = hi(i[n], r[n]);
                        if (d) {
                          if (n >= s) return d;
                          var u = t[n];
                          return d * ("desc" == u ? -1 : 1);
                        }
                      }
                      return e.index - a.index;
                    })(e, a, t);
                  }
                )
              );
            }
            function Cn(e, a, t) {
              for (var n = -1, i = a.length, r = {}; ++n < i; ) {
                var o = a[n],
                  s = mn(e, o);
                t(s, o) && Wn(r, si(o, e), s);
              }
              return r;
            }
            function Rn(e, a, t, n) {
              var i = n ? Oa : La,
                r = -1,
                o = a.length,
                s = e;
              for (e === a && (a = pi(a)), t && (s = ca(e, Da(t))); ++r < o; )
                for (
                  var d = 0, u = a[r], l = t ? t(u) : u;
                  (d = i(s, l, d, n)) > -1;

                )
                  s !== e && qe.call(s, d, 1), qe.call(e, d, 1);
              return e;
            }
            function Bn(e, a) {
              for (var t = e ? a.length : 0, n = t - 1; t--; ) {
                var i = a[t];
                if (t == n || i !== r) {
                  var r = i;
                  or(i) ? qe.call(e, i, 1) : Qn(e, i);
                }
              }
              return e;
            }
            function Hn(e, a) {
              return e + Qa(ut() * (a - e + 1));
            }
            function In(e, a) {
              var t = "";
              if (!e || a < 1 || a > 9007199254740991) return t;
              do {
                a % 2 && (t += e), (a = Qa(a / 2)) && (e += e);
              } while (a);
              return t;
            }
            function zn(e, a) {
              return kr(hr(e, a, Gs), e + "");
            }
            function jn(e) {
              return zt(Es(e));
            }
            function Fn(e, a) {
              var t = Es(e);
              return Tr(t, Ut(a, 0, t.length));
            }
            function Wn(e, a, t, n) {
              if (!Vo(e)) return e;
              for (
                var i = -1, r = (a = si(a, e)).length, o = r - 1, s = e;
                null != s && ++i < r;

              ) {
                var d = Ar(a[i]),
                  u = t;
                if (i != o) {
                  var l = s[d];
                  void 0 === (u = n ? n(l, d, s) : void 0) &&
                    (u = Vo(l) ? l : or(a[i + 1]) ? [] : {});
                }
                Jt(s, d, u), (s = s[d]);
              }
              return e;
            }
            var Jn = pt
                ? function (e, a) {
                    return pt.set(e, a), e;
                  }
                : Gs,
              Vn = Sa
                ? function (e, a) {
                    return Sa(e, "toString", {
                      configurable: !0,
                      enumerable: !1,
                      value: Vs(a),
                      writable: !0,
                    });
                  }
                : Gs;
            function xn(e) {
              return Tr(Es(e));
            }
            function Nn(e, a, t) {
              var i = -1,
                r = e.length;
              a < 0 && (a = -a > r ? 0 : r + a),
                (t = t > r ? r : t) < 0 && (t += r),
                (r = a > t ? 0 : (t - a) >>> 0),
                (a >>>= 0);
              for (var o = n(r); ++i < r; ) o[i] = e[i + a];
              return o;
            }
            function Gn(e, a) {
              var t;
              return (
                Qt(e, function (e, n, i) {
                  return !(t = a(e, n, i));
                }),
                !!t
              );
            }
            function Kn(e, a, t) {
              var n = 0,
                i = null == e ? n : e.length;
              if ("number" == typeof a && a == a && i <= 2147483647) {
                for (; n < i; ) {
                  var r = (n + i) >>> 1,
                    o = e[r];
                  null !== o && !Xo(o) && (t ? o <= a : o < a)
                    ? (n = r + 1)
                    : (i = r);
                }
                return i;
              }
              return Un(e, a, Gs, t);
            }
            function Un(e, a, t, n) {
              a = t(a);
              for (
                var i = 0,
                  r = null == e ? 0 : e.length,
                  o = a != a,
                  s = null === a,
                  d = Xo(a),
                  u = void 0 === a;
                i < r;

              ) {
                var l = Qa((i + r) / 2),
                  m = t(e[l]),
                  y = void 0 !== m,
                  c = null === m,
                  h = m == m,
                  _ = Xo(m);
                if (o) var M = n || h;
                else
                  M = u
                    ? h && (n || y)
                    : s
                    ? h && y && (n || !c)
                    : d
                    ? h && y && !c && (n || !_)
                    : !c && !_ && (n ? m <= a : m < a);
                M ? (i = l + 1) : (r = l);
              }
              return ot(r, 4294967294);
            }
            function qn(e, a) {
              for (var t = -1, n = e.length, i = 0, r = []; ++t < n; ) {
                var o = e[t],
                  s = a ? a(o) : o;
                if (!t || !Eo(s, d)) {
                  var d = s;
                  r[i++] = 0 === o ? 0 : o;
                }
              }
              return r;
            }
            function Zn(e) {
              return "number" == typeof e ? e : Xo(e) ? NaN : +e;
            }
            function Xn(e) {
              if ("string" == typeof e) return e;
              if (Co(e)) return ca(e, Xn) + "";
              if (Xo(e)) return St ? St.call(e) : "";
              var a = e + "";
              return "0" == a && 1 / e == -1 / 0 ? "-0" : a;
            }
            function $n(e, a, t) {
              var n = -1,
                i = ma,
                r = e.length,
                o = !0,
                s = [],
                d = s;
              if (t) (o = !1), (i = ya);
              else if (r >= 200) {
                var u = a ? null : Ii(e);
                if (u) return Va(u);
                (o = !1), (i = wa), (d = new Bt());
              } else d = a ? [] : s;
              e: for (; ++n < r; ) {
                var l = e[n],
                  m = a ? a(l) : l;
                if (((l = t || 0 !== l ? l : 0), o && m == m)) {
                  for (var y = d.length; y--; ) if (d[y] === m) continue e;
                  a && d.push(m), s.push(l);
                } else i(d, m, t) || (d !== s && d.push(m), s.push(l));
              }
              return s;
            }
            function Qn(e, a) {
              return null == (e = _r(e, (a = si(a, e)))) || delete e[Ar(zr(a))];
            }
            function ei(e, a, t, n) {
              return Wn(e, a, t(mn(e, a)), n);
            }
            function ai(e, a, t, n) {
              for (
                var i = e.length, r = n ? i : -1;
                (n ? r-- : ++r < i) && a(e[r], r, e);

              );
              return t
                ? Nn(e, n ? 0 : r, n ? r + 1 : i)
                : Nn(e, n ? r + 1 : 0, n ? i : r);
            }
            function ti(e, a) {
              var t = e;
              return (
                t instanceof Yt && (t = t.value()),
                _a(
                  a,
                  function (e, a) {
                    return a.func.apply(a.thisArg, ha([e], a.args));
                  },
                  t
                )
              );
            }
            function ni(e, a, t) {
              var i = e.length;
              if (i < 2) return i ? $n(e[0]) : [];
              for (var r = -1, o = n(i); ++r < i; )
                for (var s = e[r], d = -1; ++d < i; )
                  d != r && (o[r] = $t(o[r] || s, e[d], a, t));
              return $n(rn(o, 1), a, t);
            }
            function ii(e, a, t) {
              for (var n = -1, i = e.length, r = a.length, o = {}; ++n < i; ) {
                var s = n < r ? a[n] : void 0;
                t(o, e[n], s);
              }
              return o;
            }
            function ri(e) {
              return Ho(e) ? e : [];
            }
            function oi(e) {
              return "function" == typeof e ? e : Gs;
            }
            function si(e, a) {
              return Co(e) ? e : dr(e, a) ? [e] : vr(ss(e));
            }
            var di = zn;
            function ui(e, a, t) {
              var n = e.length;
              return (t = void 0 === t ? n : t), !a && t >= n ? e : Nn(e, a, t);
            }
            var li =
              qa ||
              function (e) {
                return Ke.clearTimeout(e);
              };
            function mi(e, a) {
              if (a) return e.slice();
              var t = e.length,
                n = Je ? Je(t) : new e.constructor(t);
              return e.copy(n), n;
            }
            function yi(e) {
              var a = new e.constructor(e.byteLength);
              return new He(a).set(new He(e)), a;
            }
            function ci(e, a) {
              var t = a ? yi(e.buffer) : e.buffer;
              return new e.constructor(t, e.byteOffset, e.length);
            }
            function hi(e, a) {
              if (e !== a) {
                var t = void 0 !== e,
                  n = null === e,
                  i = e == e,
                  r = Xo(e),
                  o = void 0 !== a,
                  s = null === a,
                  d = a == a,
                  u = Xo(a);
                if (
                  (!s && !u && !r && e > a) ||
                  (r && o && d && !s && !u) ||
                  (n && o && d) ||
                  (!t && d) ||
                  !i
                )
                  return 1;
                if (
                  (!n && !r && !u && e < a) ||
                  (u && t && i && !n && !r) ||
                  (s && t && i) ||
                  (!o && i) ||
                  !d
                )
                  return -1;
              }
              return 0;
            }
            function _i(e, a, t, i) {
              for (
                var r = -1,
                  o = e.length,
                  s = t.length,
                  d = -1,
                  u = a.length,
                  l = rt(o - s, 0),
                  m = n(u + l),
                  y = !i;
                ++d < u;

              )
                m[d] = a[d];
              for (; ++r < s; ) (y || r < o) && (m[t[r]] = e[r]);
              for (; l--; ) m[d++] = e[r++];
              return m;
            }
            function Mi(e, a, t, i) {
              for (
                var r = -1,
                  o = e.length,
                  s = -1,
                  d = t.length,
                  u = -1,
                  l = a.length,
                  m = rt(o - d, 0),
                  y = n(m + l),
                  c = !i;
                ++r < m;

              )
                y[r] = e[r];
              for (var h = r; ++u < l; ) y[h + u] = a[u];
              for (; ++s < d; ) (c || r < o) && (y[h + t[s]] = e[r++]);
              return y;
            }
            function pi(e, a) {
              var t = -1,
                i = e.length;
              for (a || (a = n(i)); ++t < i; ) a[t] = e[t];
              return a;
            }
            function fi(e, a, t, n) {
              var i = !t;
              t || (t = {});
              for (var r = -1, o = a.length; ++r < o; ) {
                var s = a[r],
                  d = n ? n(t[s], e[s], s, t, e) : void 0;
                void 0 === d && (d = e[s]), i ? Gt(t, s, d) : Jt(t, s, d);
              }
              return t;
            }
            function gi(e, a) {
              return function (t, n) {
                var i = Co(t) ? oa : xt,
                  r = a ? a() : {};
                return i(t, e, Zi(n, 2), r);
              };
            }
            function ki(e) {
              return zn(function (a, t) {
                var n = -1,
                  i = t.length,
                  r = i > 1 ? t[i - 1] : void 0,
                  o = i > 2 ? t[2] : void 0;
                for (
                  r =
                    e.length > 3 && "function" == typeof r ? (i--, r) : void 0,
                    o &&
                      sr(t[0], t[1], o) &&
                      ((r = i < 3 ? void 0 : r), (i = 1)),
                    a = _e(a);
                  ++n < i;

                ) {
                  var s = t[n];
                  s && e(a, s, n, r);
                }
                return a;
              });
            }
            function Li(e, a) {
              return function (t, n) {
                if (null == t) return t;
                if (!Bo(t)) return e(t, n);
                for (
                  var i = t.length, r = a ? i : -1, o = _e(t);
                  (a ? r-- : ++r < i) && !1 !== n(o[r], r, o);

                );
                return t;
              };
            }
            function Oi(e) {
              return function (a, t, n) {
                for (var i = -1, r = _e(a), o = n(a), s = o.length; s--; ) {
                  var d = o[e ? s : ++i];
                  if (!1 === t(r[d], d, r)) break;
                }
                return a;
              };
            }
            function Ti(e) {
              return function (a) {
                var t = ja((a = ss(a))) ? Ga(a) : void 0,
                  n = t ? t[0] : a.charAt(0),
                  i = t ? ui(t, 1).join("") : a.slice(1);
                return n[e]() + i;
              };
            }
            function vi(e) {
              return function (a) {
                return _a(Fs(ws(a).replace(we, "")), e, "");
              };
            }
            function Ai(e) {
              return function () {
                var a = arguments;
                switch (a.length) {
                  case 0:
                    return new e();
                  case 1:
                    return new e(a[0]);
                  case 2:
                    return new e(a[0], a[1]);
                  case 3:
                    return new e(a[0], a[1], a[2]);
                  case 4:
                    return new e(a[0], a[1], a[2], a[3]);
                  case 5:
                    return new e(a[0], a[1], a[2], a[3], a[4]);
                  case 6:
                    return new e(a[0], a[1], a[2], a[3], a[4], a[5]);
                  case 7:
                    return new e(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);
                }
                var t = bt(e.prototype),
                  n = e.apply(t, a);
                return Vo(n) ? n : t;
              };
            }
            function Si(e) {
              return function (a, t, n) {
                var i = _e(a);
                if (!Bo(a)) {
                  var r = Zi(t, 3);
                  (a = ks(a)),
                    (t = function (e) {
                      return r(i[e], e, i);
                    });
                }
                var o = e(a, t, n);
                return o > -1 ? i[r ? a[o] : o] : void 0;
              };
            }
            function Pi(e) {
              return xi(function (a) {
                var t = a.length,
                  n = t,
                  i = Dt.prototype.thru;
                for (e && a.reverse(); n--; ) {
                  var o = a[n];
                  if ("function" != typeof o) throw new fe(r);
                  if (i && !s && "wrapper" == Ui(o)) var s = new Dt([], !0);
                }
                for (n = s ? n : t; ++n < t; ) {
                  var d = Ui((o = a[n])),
                    u = "wrapper" == d ? Ki(o) : void 0;
                  s =
                    u && ur(u[0]) && 424 == u[1] && !u[4].length && 1 == u[9]
                      ? s[Ui(u[0])].apply(s, u[3])
                      : 1 == o.length && ur(o)
                      ? s[d]()
                      : s.thru(o);
                }
                return function () {
                  var e = arguments,
                    n = e[0];
                  if (s && 1 == e.length && Co(n)) return s.plant(n).value();
                  for (var i = 0, r = t ? a[i].apply(this, e) : n; ++i < t; )
                    r = a[i].call(this, r);
                  return r;
                };
              });
            }
            function bi(e, a, t, i, r, o, s, d, u, l) {
              var m = 128 & a,
                y = 1 & a,
                c = 2 & a,
                h = 24 & a,
                _ = 512 & a,
                M = c ? void 0 : Ai(e);
              return function p() {
                for (var f = arguments.length, g = n(f), k = f; k--; )
                  g[k] = arguments[k];
                if (h)
                  var L = qi(p),
                    O = Ba(g, L);
                if (
                  (i && (g = _i(g, i, r, h)),
                  o && (g = Mi(g, o, s, h)),
                  (f -= O),
                  h && f < l)
                ) {
                  var T = Ja(g, L);
                  return Bi(e, a, bi, p.placeholder, t, g, T, d, u, l - f);
                }
                var v = y ? t : this,
                  A = c ? v[e] : e;
                return (
                  (f = g.length),
                  d ? (g = Mr(g, d)) : _ && f > 1 && g.reverse(),
                  m && u < f && (g.length = u),
                  this && this !== Ke && this instanceof p && (A = M || Ai(A)),
                  A.apply(v, g)
                );
              };
            }
            function Ei(e, a) {
              return function (t, n) {
                return (function (e, a, t, n) {
                  return (
                    dn(e, function (e, i, r) {
                      a(n, t(e), i, r);
                    }),
                    n
                  );
                })(t, e, a(n), {});
              };
            }
            function Di(e, a) {
              return function (t, n) {
                var i;
                if (void 0 === t && void 0 === n) return a;
                if ((void 0 !== t && (i = t), void 0 !== n)) {
                  if (void 0 === i) return n;
                  "string" == typeof t || "string" == typeof n
                    ? ((t = Xn(t)), (n = Xn(n)))
                    : ((t = Zn(t)), (n = Zn(n))),
                    (i = e(t, n));
                }
                return i;
              };
            }
            function Yi(e) {
              return xi(function (a) {
                return (
                  (a = ca(a, Da(Zi()))),
                  zn(function (t) {
                    var n = this;
                    return e(a, function (e) {
                      return ra(e, n, t);
                    });
                  })
                );
              });
            }
            function wi(e, a) {
              var t = (a = void 0 === a ? " " : Xn(a)).length;
              if (t < 2) return t ? In(a, e) : a;
              var n = In(a, $a(e / Na(a)));
              return ja(a) ? ui(Ga(n), 0, e).join("") : n.slice(0, e);
            }
            function Ci(e) {
              return function (a, t, i) {
                return (
                  i && "number" != typeof i && sr(a, t, i) && (t = i = void 0),
                  (a = ts(a)),
                  void 0 === t ? ((t = a), (a = 0)) : (t = ts(t)),
                  (function (e, a, t, i) {
                    for (
                      var r = -1, o = rt($a((a - e) / (t || 1)), 0), s = n(o);
                      o--;

                    )
                      (s[i ? o : ++r] = e), (e += t);
                    return s;
                  })(a, t, (i = void 0 === i ? (a < t ? 1 : -1) : ts(i)), e)
                );
              };
            }
            function Ri(e) {
              return function (a, t) {
                return (
                  ("string" == typeof a && "string" == typeof t) ||
                    ((a = rs(a)), (t = rs(t))),
                  e(a, t)
                );
              };
            }
            function Bi(e, a, t, n, i, r, o, s, d, u) {
              var l = 8 & a;
              (a |= l ? 32 : 64), 4 & (a &= ~(l ? 64 : 32)) || (a &= -4);
              var m = [
                  e,
                  a,
                  i,
                  l ? r : void 0,
                  l ? o : void 0,
                  l ? void 0 : r,
                  l ? void 0 : o,
                  s,
                  d,
                  u,
                ],
                y = t.apply(void 0, m);
              return ur(e) && fr(y, m), (y.placeholder = n), Lr(y, e, a);
            }
            function Hi(e) {
              var a = he[e];
              return function (e, t) {
                if (
                  ((e = rs(e)), (t = null == t ? 0 : ot(ns(t), 292)) && tt(e))
                ) {
                  var n = (ss(e) + "e").split("e");
                  return +(
                    (n = (ss(a(n[0] + "e" + (+n[1] + t))) + "e").split(
                      "e"
                    ))[0] +
                    "e" +
                    (+n[1] - t)
                  );
                }
                return a(e);
              };
            }
            var Ii =
              ht && 1 / Va(new ht([, -0]))[1] == 1 / 0
                ? function (e) {
                    return new ht(e);
                  }
                : Xs;
            function zi(e) {
              return function (a) {
                var t = tr(a);
                return t == _
                  ? Fa(a)
                  : t == g
                  ? xa(a)
                  : (function (e, a) {
                      return ca(a, function (a) {
                        return [a, e[a]];
                      });
                    })(a, e(a));
              };
            }
            function ji(e, a, t, i, s, d, u, l) {
              var m = 2 & a;
              if (!m && "function" != typeof e) throw new fe(r);
              var y = i ? i.length : 0;
              if (
                (y || ((a &= -97), (i = s = void 0)),
                (u = void 0 === u ? u : rt(ns(u), 0)),
                (l = void 0 === l ? l : ns(l)),
                (y -= s ? s.length : 0),
                64 & a)
              ) {
                var c = i,
                  h = s;
                i = s = void 0;
              }
              var _ = m ? void 0 : Ki(e),
                M = [e, a, t, i, s, c, h, d, u, l];
              if (
                (_ &&
                  (function (e, a) {
                    var t = e[1],
                      n = a[1],
                      i = t | n,
                      r = i < 131,
                      s =
                        (128 == n && 8 == t) ||
                        (128 == n && 256 == t && e[7].length <= a[8]) ||
                        (384 == n && a[7].length <= a[8] && 8 == t);
                    if (!r && !s) return e;
                    1 & n && ((e[2] = a[2]), (i |= 1 & t ? 0 : 4));
                    var d = a[3];
                    if (d) {
                      var u = e[3];
                      (e[3] = u ? _i(u, d, a[4]) : d),
                        (e[4] = u ? Ja(e[3], o) : a[4]);
                    }
                    (d = a[5]) &&
                      ((u = e[5]),
                      (e[5] = u ? Mi(u, d, a[6]) : d),
                      (e[6] = u ? Ja(e[5], o) : a[6]));
                    (d = a[7]) && (e[7] = d);
                    128 & n && (e[8] = null == e[8] ? a[8] : ot(e[8], a[8]));
                    null == e[9] && (e[9] = a[9]);
                    (e[0] = a[0]), (e[1] = i);
                  })(M, _),
                (e = M[0]),
                (a = M[1]),
                (t = M[2]),
                (i = M[3]),
                (s = M[4]),
                !(l = M[9] =
                  void 0 === M[9] ? (m ? 0 : e.length) : rt(M[9] - y, 0)) &&
                  24 & a &&
                  (a &= -25),
                a && 1 != a)
              )
                p =
                  8 == a || 16 == a
                    ? (function (e, a, t) {
                        var i = Ai(e);
                        return function r() {
                          for (
                            var o = arguments.length,
                              s = n(o),
                              d = o,
                              u = qi(r);
                            d--;

                          )
                            s[d] = arguments[d];
                          var l =
                            o < 3 && s[0] !== u && s[o - 1] !== u
                              ? []
                              : Ja(s, u);
                          if ((o -= l.length) < t)
                            return Bi(
                              e,
                              a,
                              bi,
                              r.placeholder,
                              void 0,
                              s,
                              l,
                              void 0,
                              void 0,
                              t - o
                            );
                          var m =
                            this && this !== Ke && this instanceof r ? i : e;
                          return ra(m, this, s);
                        };
                      })(e, a, l)
                    : (32 != a && 33 != a) || s.length
                    ? bi.apply(void 0, M)
                    : (function (e, a, t, i) {
                        var r = 1 & a,
                          o = Ai(e);
                        return function a() {
                          for (
                            var s = -1,
                              d = arguments.length,
                              u = -1,
                              l = i.length,
                              m = n(l + d),
                              y =
                                this && this !== Ke && this instanceof a
                                  ? o
                                  : e;
                            ++u < l;

                          )
                            m[u] = i[u];
                          for (; d--; ) m[u++] = arguments[++s];
                          return ra(y, r ? t : this, m);
                        };
                      })(e, a, t, i);
              else
                var p = (function (e, a, t) {
                  var n = 1 & a,
                    i = Ai(e);
                  return function a() {
                    var r = this && this !== Ke && this instanceof a ? i : e;
                    return r.apply(n ? t : this, arguments);
                  };
                })(e, a, t);
              return Lr((_ ? Jn : fr)(p, M), e, a);
            }
            function Fi(e, a, t, n) {
              return void 0 === e || (Eo(e, Le[t]) && !ve.call(n, t)) ? a : e;
            }
            function Wi(e, a, t, n, i, r) {
              return (
                Vo(e) &&
                  Vo(a) &&
                  (r.set(a, e), Dn(e, a, void 0, Wi, r), r.delete(a)),
                e
              );
            }
            function Ji(e) {
              return Ko(e) ? void 0 : e;
            }
            function Vi(e, a, t, n, i, r) {
              var o = 1 & t,
                s = e.length,
                d = a.length;
              if (s != d && !(o && d > s)) return !1;
              var u = r.get(e);
              if (u && r.get(a)) return u == a;
              var l = -1,
                m = !0,
                y = 2 & t ? new Bt() : void 0;
              for (r.set(e, a), r.set(a, e); ++l < s; ) {
                var c = e[l],
                  h = a[l];
                if (n) var _ = o ? n(h, c, l, a, e, r) : n(c, h, l, e, a, r);
                if (void 0 !== _) {
                  if (_) continue;
                  m = !1;
                  break;
                }
                if (y) {
                  if (
                    !pa(a, function (e, a) {
                      if (!wa(y, a) && (c === e || i(c, e, t, n, r)))
                        return y.push(a);
                    })
                  ) {
                    m = !1;
                    break;
                  }
                } else if (c !== h && !i(c, h, t, n, r)) {
                  m = !1;
                  break;
                }
              }
              return r.delete(e), r.delete(a), m;
            }
            function xi(e) {
              return kr(hr(e, void 0, Cr), e + "");
            }
            function Ni(e) {
              return yn(e, ks, er);
            }
            function Gi(e) {
              return yn(e, Ls, ar);
            }
            var Ki = pt
              ? function (e) {
                  return pt.get(e);
                }
              : Xs;
            function Ui(e) {
              for (
                var a = e.name + "",
                  t = ft[a],
                  n = ve.call(ft, a) ? t.length : 0;
                n--;

              ) {
                var i = t[n],
                  r = i.func;
                if (null == r || r == e) return i.name;
              }
              return a;
            }
            function qi(e) {
              return (ve.call(Pt, "placeholder") ? Pt : e).placeholder;
            }
            function Zi() {
              var e = Pt.iteratee || Ks;
              return (
                (e = e === Ks ? Tn : e),
                arguments.length ? e(arguments[0], arguments[1]) : e
              );
            }
            function Xi(e, a) {
              var t,
                n,
                i = e.__data__;
              return (
                "string" == (n = typeof (t = a)) ||
                "number" == n ||
                "symbol" == n ||
                "boolean" == n
                  ? "__proto__" !== t
                  : null === t
              )
                ? i["string" == typeof a ? "string" : "hash"]
                : i.map;
            }
            function $i(e) {
              for (var a = ks(e), t = a.length; t--; ) {
                var n = a[t],
                  i = e[n];
                a[t] = [n, i, yr(i)];
              }
              return a;
            }
            function Qi(e, a) {
              var t = (function (e, a) {
                return null == e ? void 0 : e[a];
              })(e, a);
              return On(t) ? t : void 0;
            }
            var er = et
                ? function (e) {
                    return null == e
                      ? []
                      : ((e = _e(e)),
                        la(et(e), function (a) {
                          return Ue.call(e, a);
                        }));
                  }
                : id,
              ar = et
                ? function (e) {
                    for (var a = []; e; ) ha(a, er(e)), (e = Ne(e));
                    return a;
                  }
                : id,
              tr = cn;
            function nr(e, a, t) {
              for (var n = -1, i = (a = si(a, e)).length, r = !1; ++n < i; ) {
                var o = Ar(a[n]);
                if (!(r = null != e && t(e, o))) break;
                e = e[o];
              }
              return r || ++n != i
                ? r
                : !!(i = null == e ? 0 : e.length) &&
                    Jo(i) &&
                    or(o, i) &&
                    (Co(e) || wo(e));
            }
            function ir(e) {
              return "function" != typeof e.constructor || mr(e)
                ? {}
                : bt(Ne(e));
            }
            function rr(e) {
              return Co(e) || wo(e) || !!(Xe && e && e[Xe]);
            }
            function or(e, a) {
              var t = typeof e;
              return (
                !!(a = null == a ? 9007199254740991 : a) &&
                ("number" == t || ("symbol" != t && de.test(e))) &&
                e > -1 &&
                e % 1 == 0 &&
                e < a
              );
            }
            function sr(e, a, t) {
              if (!Vo(t)) return !1;
              var n = typeof a;
              return (
                !!("number" == n
                  ? Bo(t) && or(a, t.length)
                  : "string" == n && a in t) && Eo(t[a], e)
              );
            }
            function dr(e, a) {
              if (Co(e)) return !1;
              var t = typeof e;
              return (
                !(
                  "number" != t &&
                  "symbol" != t &&
                  "boolean" != t &&
                  null != e &&
                  !Xo(e)
                ) ||
                x.test(e) ||
                !V.test(e) ||
                (null != a && e in _e(a))
              );
            }
            function ur(e) {
              var a = Ui(e),
                t = Pt[a];
              if ("function" != typeof t || !(a in Yt.prototype)) return !1;
              if (e === t) return !0;
              var n = Ki(t);
              return !!n && e === n[0];
            }
            ((mt && tr(new mt(new ArrayBuffer(1))) != v) ||
              (yt && tr(new yt()) != _) ||
              (ct && "[object Promise]" != tr(ct.resolve())) ||
              (ht && tr(new ht()) != g) ||
              (_t && tr(new _t()) != O)) &&
              (tr = function (e) {
                var a = cn(e),
                  t = a == p ? e.constructor : void 0,
                  n = t ? Sr(t) : "";
                if (n)
                  switch (n) {
                    case gt:
                      return v;
                    case kt:
                      return _;
                    case Lt:
                      return "[object Promise]";
                    case Ot:
                      return g;
                    case Tt:
                      return O;
                  }
                return a;
              });
            var lr = Oe ? Fo : rd;
            function mr(e) {
              var a = e && e.constructor;
              return e === (("function" == typeof a && a.prototype) || Le);
            }
            function yr(e) {
              return e == e && !Vo(e);
            }
            function cr(e, a) {
              return function (t) {
                return null != t && t[e] === a && (void 0 !== a || e in _e(t));
              };
            }
            function hr(e, a, t) {
              return (
                (a = rt(void 0 === a ? e.length - 1 : a, 0)),
                function () {
                  for (
                    var i = arguments,
                      r = -1,
                      o = rt(i.length - a, 0),
                      s = n(o);
                    ++r < o;

                  )
                    s[r] = i[a + r];
                  r = -1;
                  for (var d = n(a + 1); ++r < a; ) d[r] = i[r];
                  return (d[a] = t(s)), ra(e, this, d);
                }
              );
            }
            function _r(e, a) {
              return a.length < 2 ? e : mn(e, Nn(a, 0, -1));
            }
            function Mr(e, a) {
              for (var t = e.length, n = ot(a.length, t), i = pi(e); n--; ) {
                var r = a[n];
                e[n] = or(r, t) ? i[r] : void 0;
              }
              return e;
            }
            function pr(e, a) {
              if (
                ("constructor" !== a || "function" != typeof e[a]) &&
                "__proto__" != a
              )
                return e[a];
            }
            var fr = Or(Jn),
              gr =
                Xa ||
                function (e, a) {
                  return Ke.setTimeout(e, a);
                },
              kr = Or(Vn);
            function Lr(e, a, t) {
              var n = a + "";
              return kr(
                e,
                (function (e, a) {
                  var t = a.length;
                  if (!t) return e;
                  var n = t - 1;
                  return (
                    (a[n] = (t > 1 ? "& " : "") + a[n]),
                    (a = a.join(t > 2 ? ", " : " ")),
                    e.replace(X, "{\n/* [wrapped with " + a + "] */\n")
                  );
                })(
                  n,
                  (function (e, a) {
                    return (
                      sa(s, function (t) {
                        var n = "_." + t[0];
                        a & t[1] && !ma(e, n) && e.push(n);
                      }),
                      e.sort()
                    );
                  })(
                    (function (e) {
                      var a = e.match($);
                      return a ? a[1].split(Q) : [];
                    })(n),
                    t
                  )
                )
              );
            }
            function Or(e) {
              var a = 0,
                t = 0;
              return function () {
                var n = st(),
                  i = 16 - (n - t);
                if (((t = n), i > 0)) {
                  if (++a >= 800) return arguments[0];
                } else a = 0;
                return e.apply(void 0, arguments);
              };
            }
            function Tr(e, a) {
              var t = -1,
                n = e.length,
                i = n - 1;
              for (a = void 0 === a ? n : a; ++t < a; ) {
                var r = Hn(t, i),
                  o = e[r];
                (e[r] = e[t]), (e[t] = o);
              }
              return (e.length = a), e;
            }
            var vr = (function (e) {
              var a = To(e, function (e) {
                  return 500 === t.size && t.clear(), e;
                }),
                t = a.cache;
              return a;
            })(function (e) {
              var a = [];
              return (
                46 === e.charCodeAt(0) && a.push(""),
                e.replace(N, function (e, t, n, i) {
                  a.push(n ? i.replace(ae, "$1") : t || e);
                }),
                a
              );
            });
            function Ar(e) {
              if ("string" == typeof e || Xo(e)) return e;
              var a = e + "";
              return "0" == a && 1 / e == -1 / 0 ? "-0" : a;
            }
            function Sr(e) {
              if (null != e) {
                try {
                  return Te.call(e);
                } catch (e) {}
                try {
                  return e + "";
                } catch (e) {}
              }
              return "";
            }
            function Pr(e) {
              if (e instanceof Yt) return e.clone();
              var a = new Dt(e.__wrapped__, e.__chain__);
              return (
                (a.__actions__ = pi(e.__actions__)),
                (a.__index__ = e.__index__),
                (a.__values__ = e.__values__),
                a
              );
            }
            var br = zn(function (e, a) {
                return Ho(e) ? $t(e, rn(a, 1, Ho, !0)) : [];
              }),
              Er = zn(function (e, a) {
                var t = zr(a);
                return (
                  Ho(t) && (t = void 0),
                  Ho(e) ? $t(e, rn(a, 1, Ho, !0), Zi(t, 2)) : []
                );
              }),
              Dr = zn(function (e, a) {
                var t = zr(a);
                return (
                  Ho(t) && (t = void 0),
                  Ho(e) ? $t(e, rn(a, 1, Ho, !0), void 0, t) : []
                );
              });
            function Yr(e, a, t) {
              var n = null == e ? 0 : e.length;
              if (!n) return -1;
              var i = null == t ? 0 : ns(t);
              return i < 0 && (i = rt(n + i, 0)), ka(e, Zi(a, 3), i);
            }
            function wr(e, a, t) {
              var n = null == e ? 0 : e.length;
              if (!n) return -1;
              var i = n - 1;
              return (
                void 0 !== t &&
                  ((i = ns(t)), (i = t < 0 ? rt(n + i, 0) : ot(i, n - 1))),
                ka(e, Zi(a, 3), i, !0)
              );
            }
            function Cr(e) {
              return (null == e ? 0 : e.length) ? rn(e, 1) : [];
            }
            function Rr(e) {
              return e && e.length ? e[0] : void 0;
            }
            var Br = zn(function (e) {
                var a = ca(e, ri);
                return a.length && a[0] === e[0] ? pn(a) : [];
              }),
              Hr = zn(function (e) {
                var a = zr(e),
                  t = ca(e, ri);
                return (
                  a === zr(t) ? (a = void 0) : t.pop(),
                  t.length && t[0] === e[0] ? pn(t, Zi(a, 2)) : []
                );
              }),
              Ir = zn(function (e) {
                var a = zr(e),
                  t = ca(e, ri);
                return (
                  (a = "function" == typeof a ? a : void 0) && t.pop(),
                  t.length && t[0] === e[0] ? pn(t, void 0, a) : []
                );
              });
            function zr(e) {
              var a = null == e ? 0 : e.length;
              return a ? e[a - 1] : void 0;
            }
            var jr = zn(Fr);
            function Fr(e, a) {
              return e && e.length && a && a.length ? Rn(e, a) : e;
            }
            var Wr = xi(function (e, a) {
              var t = null == e ? 0 : e.length,
                n = Kt(e, a);
              return (
                Bn(
                  e,
                  ca(a, function (e) {
                    return or(e, t) ? +e : e;
                  }).sort(hi)
                ),
                n
              );
            });
            function Jr(e) {
              return null == e ? e : lt.call(e);
            }
            var Vr = zn(function (e) {
                return $n(rn(e, 1, Ho, !0));
              }),
              xr = zn(function (e) {
                var a = zr(e);
                return Ho(a) && (a = void 0), $n(rn(e, 1, Ho, !0), Zi(a, 2));
              }),
              Nr = zn(function (e) {
                var a = zr(e);
                return (
                  (a = "function" == typeof a ? a : void 0),
                  $n(rn(e, 1, Ho, !0), void 0, a)
                );
              });
            function Gr(e) {
              if (!e || !e.length) return [];
              var a = 0;
              return (
                (e = la(e, function (e) {
                  if (Ho(e)) return (a = rt(e.length, a)), !0;
                })),
                Ea(a, function (a) {
                  return ca(e, Aa(a));
                })
              );
            }
            function Kr(e, a) {
              if (!e || !e.length) return [];
              var t = Gr(e);
              return null == a
                ? t
                : ca(t, function (e) {
                    return ra(a, void 0, e);
                  });
            }
            var Ur = zn(function (e, a) {
                return Ho(e) ? $t(e, a) : [];
              }),
              qr = zn(function (e) {
                return ni(la(e, Ho));
              }),
              Zr = zn(function (e) {
                var a = zr(e);
                return Ho(a) && (a = void 0), ni(la(e, Ho), Zi(a, 2));
              }),
              Xr = zn(function (e) {
                var a = zr(e);
                return (
                  (a = "function" == typeof a ? a : void 0),
                  ni(la(e, Ho), void 0, a)
                );
              }),
              $r = zn(Gr);
            var Qr = zn(function (e) {
              var a = e.length,
                t = a > 1 ? e[a - 1] : void 0;
              return (
                (t = "function" == typeof t ? (e.pop(), t) : void 0), Kr(e, t)
              );
            });
            function eo(e) {
              var a = Pt(e);
              return (a.__chain__ = !0), a;
            }
            function ao(e, a) {
              return a(e);
            }
            var to = xi(function (e) {
              var a = e.length,
                t = a ? e[0] : 0,
                n = this.__wrapped__,
                i = function (a) {
                  return Kt(a, e);
                };
              return !(a > 1 || this.__actions__.length) &&
                n instanceof Yt &&
                or(t)
                ? ((n = n.slice(t, +t + (a ? 1 : 0))).__actions__.push({
                    func: ao,
                    args: [i],
                    thisArg: void 0,
                  }),
                  new Dt(n, this.__chain__).thru(function (e) {
                    return a && !e.length && e.push(void 0), e;
                  }))
                : this.thru(i);
            });
            var no = gi(function (e, a, t) {
              ve.call(e, t) ? ++e[t] : Gt(e, t, 1);
            });
            var io = Si(Yr),
              ro = Si(wr);
            function oo(e, a) {
              return (Co(e) ? sa : Qt)(e, Zi(a, 3));
            }
            function so(e, a) {
              return (Co(e) ? da : en)(e, Zi(a, 3));
            }
            var uo = gi(function (e, a, t) {
              ve.call(e, t) ? e[t].push(a) : Gt(e, t, [a]);
            });
            var lo = zn(function (e, a, t) {
                var i = -1,
                  r = "function" == typeof a,
                  o = Bo(e) ? n(e.length) : [];
                return (
                  Qt(e, function (e) {
                    o[++i] = r ? ra(a, e, t) : fn(e, a, t);
                  }),
                  o
                );
              }),
              mo = gi(function (e, a, t) {
                Gt(e, t, a);
              });
            function yo(e, a) {
              return (Co(e) ? ca : Pn)(e, Zi(a, 3));
            }
            var co = gi(
              function (e, a, t) {
                e[t ? 0 : 1].push(a);
              },
              function () {
                return [[], []];
              }
            );
            var ho = zn(function (e, a) {
                if (null == e) return [];
                var t = a.length;
                return (
                  t > 1 && sr(e, a[0], a[1])
                    ? (a = [])
                    : t > 2 && sr(a[0], a[1], a[2]) && (a = [a[0]]),
                  wn(e, rn(a, 1), [])
                );
              }),
              _o =
                Za ||
                function () {
                  return Ke.Date.now();
                };
            function Mo(e, a, t) {
              return (
                (a = t ? void 0 : a),
                ji(
                  e,
                  128,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (a = e && null == a ? e.length : a)
                )
              );
            }
            function po(e, a) {
              var t;
              if ("function" != typeof a) throw new fe(r);
              return (
                (e = ns(e)),
                function () {
                  return (
                    --e > 0 && (t = a.apply(this, arguments)),
                    e <= 1 && (a = void 0),
                    t
                  );
                }
              );
            }
            var fo = zn(function (e, a, t) {
                var n = 1;
                if (t.length) {
                  var i = Ja(t, qi(fo));
                  n |= 32;
                }
                return ji(e, n, a, t, i);
              }),
              go = zn(function (e, a, t) {
                var n = 3;
                if (t.length) {
                  var i = Ja(t, qi(go));
                  n |= 32;
                }
                return ji(a, n, e, t, i);
              });
            function ko(e, a, t) {
              var n,
                i,
                o,
                s,
                d,
                u,
                l = 0,
                m = !1,
                y = !1,
                c = !0;
              if ("function" != typeof e) throw new fe(r);
              function h(a) {
                var t = n,
                  r = i;
                return (n = i = void 0), (l = a), (s = e.apply(r, t));
              }
              function _(e) {
                return (l = e), (d = gr(p, a)), m ? h(e) : s;
              }
              function M(e) {
                var t = e - u;
                return void 0 === u || t >= a || t < 0 || (y && e - l >= o);
              }
              function p() {
                var e = _o();
                if (M(e)) return f(e);
                d = gr(
                  p,
                  (function (e) {
                    var t = a - (e - u);
                    return y ? ot(t, o - (e - l)) : t;
                  })(e)
                );
              }
              function f(e) {
                return (d = void 0), c && n ? h(e) : ((n = i = void 0), s);
              }
              function g() {
                var e = _o(),
                  t = M(e);
                if (((n = arguments), (i = this), (u = e), t)) {
                  if (void 0 === d) return _(u);
                  if (y) return li(d), (d = gr(p, a)), h(u);
                }
                return void 0 === d && (d = gr(p, a)), s;
              }
              return (
                (a = rs(a) || 0),
                Vo(t) &&
                  ((m = !!t.leading),
                  (o = (y = "maxWait" in t) ? rt(rs(t.maxWait) || 0, a) : o),
                  (c = "trailing" in t ? !!t.trailing : c)),
                (g.cancel = function () {
                  void 0 !== d && li(d), (l = 0), (n = u = i = d = void 0);
                }),
                (g.flush = function () {
                  return void 0 === d ? s : f(_o());
                }),
                g
              );
            }
            var Lo = zn(function (e, a) {
                return Xt(e, 1, a);
              }),
              Oo = zn(function (e, a, t) {
                return Xt(e, rs(a) || 0, t);
              });
            function To(e, a) {
              if (
                "function" != typeof e ||
                (null != a && "function" != typeof a)
              )
                throw new fe(r);
              var t = function () {
                var n = arguments,
                  i = a ? a.apply(this, n) : n[0],
                  r = t.cache;
                if (r.has(i)) return r.get(i);
                var o = e.apply(this, n);
                return (t.cache = r.set(i, o) || r), o;
              };
              return (t.cache = new (To.Cache || Rt)()), t;
            }
            function vo(e) {
              if ("function" != typeof e) throw new fe(r);
              return function () {
                var a = arguments;
                switch (a.length) {
                  case 0:
                    return !e.call(this);
                  case 1:
                    return !e.call(this, a[0]);
                  case 2:
                    return !e.call(this, a[0], a[1]);
                  case 3:
                    return !e.call(this, a[0], a[1], a[2]);
                }
                return !e.apply(this, a);
              };
            }
            To.Cache = Rt;
            var Ao = di(function (e, a) {
                var t = (a =
                  1 == a.length && Co(a[0])
                    ? ca(a[0], Da(Zi()))
                    : ca(rn(a, 1), Da(Zi()))).length;
                return zn(function (n) {
                  for (var i = -1, r = ot(n.length, t); ++i < r; )
                    n[i] = a[i].call(this, n[i]);
                  return ra(e, this, n);
                });
              }),
              So = zn(function (e, a) {
                return ji(e, 32, void 0, a, Ja(a, qi(So)));
              }),
              Po = zn(function (e, a) {
                return ji(e, 64, void 0, a, Ja(a, qi(Po)));
              }),
              bo = xi(function (e, a) {
                return ji(e, 256, void 0, void 0, void 0, a);
              });
            function Eo(e, a) {
              return e === a || (e != e && a != a);
            }
            var Do = Ri(hn),
              Yo = Ri(function (e, a) {
                return e >= a;
              }),
              wo = gn(
                (function () {
                  return arguments;
                })()
              )
                ? gn
                : function (e) {
                    return (
                      xo(e) && ve.call(e, "callee") && !Ue.call(e, "callee")
                    );
                  },
              Co = n.isArray,
              Ro = Qe
                ? Da(Qe)
                : function (e) {
                    return xo(e) && cn(e) == T;
                  };
            function Bo(e) {
              return null != e && Jo(e.length) && !Fo(e);
            }
            function Ho(e) {
              return xo(e) && Bo(e);
            }
            var Io = at || rd,
              zo = ea
                ? Da(ea)
                : function (e) {
                    return xo(e) && cn(e) == m;
                  };
            function jo(e) {
              if (!xo(e)) return !1;
              var a = cn(e);
              return (
                a == y ||
                "[object DOMException]" == a ||
                ("string" == typeof e.message &&
                  "string" == typeof e.name &&
                  !Ko(e))
              );
            }
            function Fo(e) {
              if (!Vo(e)) return !1;
              var a = cn(e);
              return (
                a == c ||
                a == h ||
                "[object AsyncFunction]" == a ||
                "[object Proxy]" == a
              );
            }
            function Wo(e) {
              return "number" == typeof e && e == ns(e);
            }
            function Jo(e) {
              return (
                "number" == typeof e &&
                e > -1 &&
                e % 1 == 0 &&
                e <= 9007199254740991
              );
            }
            function Vo(e) {
              var a = typeof e;
              return null != e && ("object" == a || "function" == a);
            }
            function xo(e) {
              return null != e && "object" == typeof e;
            }
            var No = aa
              ? Da(aa)
              : function (e) {
                  return xo(e) && tr(e) == _;
                };
            function Go(e) {
              return "number" == typeof e || (xo(e) && cn(e) == M);
            }
            function Ko(e) {
              if (!xo(e) || cn(e) != p) return !1;
              var a = Ne(e);
              if (null === a) return !0;
              var t = ve.call(a, "constructor") && a.constructor;
              return (
                "function" == typeof t && t instanceof t && Te.call(t) == be
              );
            }
            var Uo = ta
              ? Da(ta)
              : function (e) {
                  return xo(e) && cn(e) == f;
                };
            var qo = na
              ? Da(na)
              : function (e) {
                  return xo(e) && tr(e) == g;
                };
            function Zo(e) {
              return "string" == typeof e || (!Co(e) && xo(e) && cn(e) == k);
            }
            function Xo(e) {
              return "symbol" == typeof e || (xo(e) && cn(e) == L);
            }
            var $o = ia
              ? Da(ia)
              : function (e) {
                  return xo(e) && Jo(e.length) && !!Fe[cn(e)];
                };
            var Qo = Ri(Sn),
              es = Ri(function (e, a) {
                return e <= a;
              });
            function as(e) {
              if (!e) return [];
              if (Bo(e)) return Zo(e) ? Ga(e) : pi(e);
              if ($e && e[$e])
                return (function (e) {
                  for (var a, t = []; !(a = e.next()).done; ) t.push(a.value);
                  return t;
                })(e[$e]());
              var a = tr(e);
              return (a == _ ? Fa : a == g ? Va : Es)(e);
            }
            function ts(e) {
              return e
                ? (e = rs(e)) === 1 / 0 || e === -1 / 0
                  ? 17976931348623157e292 * (e < 0 ? -1 : 1)
                  : e == e
                  ? e
                  : 0
                : 0 === e
                ? e
                : 0;
            }
            function ns(e) {
              var a = ts(e),
                t = a % 1;
              return a == a ? (t ? a - t : a) : 0;
            }
            function is(e) {
              return e ? Ut(ns(e), 0, 4294967295) : 0;
            }
            function rs(e) {
              if ("number" == typeof e) return e;
              if (Xo(e)) return NaN;
              if (Vo(e)) {
                var a = "function" == typeof e.valueOf ? e.valueOf() : e;
                e = Vo(a) ? a + "" : a;
              }
              if ("string" != typeof e) return 0 === e ? e : +e;
              e = e.replace(U, "");
              var t = re.test(e);
              return t || se.test(e)
                ? xe(e.slice(2), t ? 2 : 8)
                : ie.test(e)
                ? NaN
                : +e;
            }
            function os(e) {
              return fi(e, Ls(e));
            }
            function ss(e) {
              return null == e ? "" : Xn(e);
            }
            var ds = ki(function (e, a) {
                if (mr(a) || Bo(a)) fi(a, ks(a), e);
                else for (var t in a) ve.call(a, t) && Jt(e, t, a[t]);
              }),
              us = ki(function (e, a) {
                fi(a, Ls(a), e);
              }),
              ls = ki(function (e, a, t, n) {
                fi(a, Ls(a), e, n);
              }),
              ms = ki(function (e, a, t, n) {
                fi(a, ks(a), e, n);
              }),
              ys = xi(Kt);
            var cs = zn(function (e, a) {
                e = _e(e);
                var t = -1,
                  n = a.length,
                  i = n > 2 ? a[2] : void 0;
                for (i && sr(a[0], a[1], i) && (n = 1); ++t < n; )
                  for (
                    var r = a[t], o = Ls(r), s = -1, d = o.length;
                    ++s < d;

                  ) {
                    var u = o[s],
                      l = e[u];
                    (void 0 === l || (Eo(l, Le[u]) && !ve.call(e, u))) &&
                      (e[u] = r[u]);
                  }
                return e;
              }),
              hs = zn(function (e) {
                return e.push(void 0, Wi), ra(Ts, void 0, e);
              });
            function _s(e, a, t) {
              var n = null == e ? void 0 : mn(e, a);
              return void 0 === n ? t : n;
            }
            function Ms(e, a) {
              return null != e && nr(e, a, Mn);
            }
            var ps = Ei(function (e, a, t) {
                null != a &&
                  "function" != typeof a.toString &&
                  (a = Pe.call(a)),
                  (e[a] = t);
              }, Vs(Gs)),
              fs = Ei(function (e, a, t) {
                null != a &&
                  "function" != typeof a.toString &&
                  (a = Pe.call(a)),
                  ve.call(e, a) ? e[a].push(t) : (e[a] = [t]);
              }, Zi),
              gs = zn(fn);
            function ks(e) {
              return Bo(e) ? It(e) : vn(e);
            }
            function Ls(e) {
              return Bo(e) ? It(e, !0) : An(e);
            }
            var Os = ki(function (e, a, t) {
                Dn(e, a, t);
              }),
              Ts = ki(function (e, a, t, n) {
                Dn(e, a, t, n);
              }),
              vs = xi(function (e, a) {
                var t = {};
                if (null == e) return t;
                var n = !1;
                (a = ca(a, function (a) {
                  return (a = si(a, e)), n || (n = a.length > 1), a;
                })),
                  fi(e, Gi(e), t),
                  n && (t = qt(t, 7, Ji));
                for (var i = a.length; i--; ) Qn(t, a[i]);
                return t;
              });
            var As = xi(function (e, a) {
              return null == e
                ? {}
                : (function (e, a) {
                    return Cn(e, a, function (a, t) {
                      return Ms(e, t);
                    });
                  })(e, a);
            });
            function Ss(e, a) {
              if (null == e) return {};
              var t = ca(Gi(e), function (e) {
                return [e];
              });
              return (
                (a = Zi(a)),
                Cn(e, t, function (e, t) {
                  return a(e, t[0]);
                })
              );
            }
            var Ps = zi(ks),
              bs = zi(Ls);
            function Es(e) {
              return null == e ? [] : Ya(e, ks(e));
            }
            var Ds = vi(function (e, a, t) {
              return (a = a.toLowerCase()), e + (t ? Ys(a) : a);
            });
            function Ys(e) {
              return js(ss(e).toLowerCase());
            }
            function ws(e) {
              return (e = ss(e)) && e.replace(ue, Ha).replace(Ce, "");
            }
            var Cs = vi(function (e, a, t) {
                return e + (t ? "-" : "") + a.toLowerCase();
              }),
              Rs = vi(function (e, a, t) {
                return e + (t ? " " : "") + a.toLowerCase();
              }),
              Bs = Ti("toLowerCase");
            var Hs = vi(function (e, a, t) {
              return e + (t ? "_" : "") + a.toLowerCase();
            });
            var Is = vi(function (e, a, t) {
              return e + (t ? " " : "") + js(a);
            });
            var zs = vi(function (e, a, t) {
                return e + (t ? " " : "") + a.toUpperCase();
              }),
              js = Ti("toUpperCase");
            function Fs(e, a, t) {
              return (
                (e = ss(e)),
                void 0 === (a = t ? void 0 : a)
                  ? (function (e) {
                      return Ie.test(e);
                    })(e)
                    ? (function (e) {
                        return e.match(Be) || [];
                      })(e)
                    : (function (e) {
                        return e.match(ee) || [];
                      })(e)
                  : e.match(a) || []
              );
            }
            var Ws = zn(function (e, a) {
                try {
                  return ra(e, void 0, a);
                } catch (e) {
                  return jo(e) ? e : new ye(e);
                }
              }),
              Js = xi(function (e, a) {
                return (
                  sa(a, function (a) {
                    (a = Ar(a)), Gt(e, a, fo(e[a], e));
                  }),
                  e
                );
              });
            function Vs(e) {
              return function () {
                return e;
              };
            }
            var xs = Pi(),
              Ns = Pi(!0);
            function Gs(e) {
              return e;
            }
            function Ks(e) {
              return Tn("function" == typeof e ? e : qt(e, 1));
            }
            var Us = zn(function (e, a) {
                return function (t) {
                  return fn(t, e, a);
                };
              }),
              qs = zn(function (e, a) {
                return function (t) {
                  return fn(e, t, a);
                };
              });
            function Zs(e, a, t) {
              var n = ks(a),
                i = ln(a, n);
              null != t ||
                (Vo(a) && (i.length || !n.length)) ||
                ((t = a), (a = e), (e = this), (i = ln(a, ks(a))));
              var r = !(Vo(t) && "chain" in t && !t.chain),
                o = Fo(e);
              return (
                sa(i, function (t) {
                  var n = a[t];
                  (e[t] = n),
                    o &&
                      (e.prototype[t] = function () {
                        var a = this.__chain__;
                        if (r || a) {
                          var t = e(this.__wrapped__),
                            i = (t.__actions__ = pi(this.__actions__));
                          return (
                            i.push({ func: n, args: arguments, thisArg: e }),
                            (t.__chain__ = a),
                            t
                          );
                        }
                        return n.apply(e, ha([this.value()], arguments));
                      });
                }),
                e
              );
            }
            function Xs() {}
            var $s = Yi(ca),
              Qs = Yi(ua),
              ed = Yi(pa);
            function ad(e) {
              return dr(e)
                ? Aa(Ar(e))
                : (function (e) {
                    return function (a) {
                      return mn(a, e);
                    };
                  })(e);
            }
            var td = Ci(),
              nd = Ci(!0);
            function id() {
              return [];
            }
            function rd() {
              return !1;
            }
            var od = Di(function (e, a) {
                return e + a;
              }, 0),
              sd = Hi("ceil"),
              dd = Di(function (e, a) {
                return e / a;
              }, 1),
              ud = Hi("floor");
            var ld,
              md = Di(function (e, a) {
                return e * a;
              }, 1),
              yd = Hi("round"),
              cd = Di(function (e, a) {
                return e - a;
              }, 0);
            return (
              (Pt.after = function (e, a) {
                if ("function" != typeof a) throw new fe(r);
                return (
                  (e = ns(e)),
                  function () {
                    if (--e < 1) return a.apply(this, arguments);
                  }
                );
              }),
              (Pt.ary = Mo),
              (Pt.assign = ds),
              (Pt.assignIn = us),
              (Pt.assignInWith = ls),
              (Pt.assignWith = ms),
              (Pt.at = ys),
              (Pt.before = po),
              (Pt.bind = fo),
              (Pt.bindAll = Js),
              (Pt.bindKey = go),
              (Pt.castArray = function () {
                if (!arguments.length) return [];
                var e = arguments[0];
                return Co(e) ? e : [e];
              }),
              (Pt.chain = eo),
              (Pt.chunk = function (e, a, t) {
                a = (t ? sr(e, a, t) : void 0 === a) ? 1 : rt(ns(a), 0);
                var i = null == e ? 0 : e.length;
                if (!i || a < 1) return [];
                for (var r = 0, o = 0, s = n($a(i / a)); r < i; )
                  s[o++] = Nn(e, r, (r += a));
                return s;
              }),
              (Pt.compact = function (e) {
                for (
                  var a = -1, t = null == e ? 0 : e.length, n = 0, i = [];
                  ++a < t;

                ) {
                  var r = e[a];
                  r && (i[n++] = r);
                }
                return i;
              }),
              (Pt.concat = function () {
                var e = arguments.length;
                if (!e) return [];
                for (var a = n(e - 1), t = arguments[0], i = e; i--; )
                  a[i - 1] = arguments[i];
                return ha(Co(t) ? pi(t) : [t], rn(a, 1));
              }),
              (Pt.cond = function (e) {
                var a = null == e ? 0 : e.length,
                  t = Zi();
                return (
                  (e = a
                    ? ca(e, function (e) {
                        if ("function" != typeof e[1]) throw new fe(r);
                        return [t(e[0]), e[1]];
                      })
                    : []),
                  zn(function (t) {
                    for (var n = -1; ++n < a; ) {
                      var i = e[n];
                      if (ra(i[0], this, t)) return ra(i[1], this, t);
                    }
                  })
                );
              }),
              (Pt.conforms = function (e) {
                return (function (e) {
                  var a = ks(e);
                  return function (t) {
                    return Zt(t, e, a);
                  };
                })(qt(e, 1));
              }),
              (Pt.constant = Vs),
              (Pt.countBy = no),
              (Pt.create = function (e, a) {
                var t = bt(e);
                return null == a ? t : Nt(t, a);
              }),
              (Pt.curry = function e(a, t, n) {
                var i = ji(
                  a,
                  8,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (t = n ? void 0 : t)
                );
                return (i.placeholder = e.placeholder), i;
              }),
              (Pt.curryRight = function e(a, t, n) {
                var i = ji(
                  a,
                  16,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (t = n ? void 0 : t)
                );
                return (i.placeholder = e.placeholder), i;
              }),
              (Pt.debounce = ko),
              (Pt.defaults = cs),
              (Pt.defaultsDeep = hs),
              (Pt.defer = Lo),
              (Pt.delay = Oo),
              (Pt.difference = br),
              (Pt.differenceBy = Er),
              (Pt.differenceWith = Dr),
              (Pt.drop = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Nn(e, (a = t || void 0 === a ? 1 : ns(a)) < 0 ? 0 : a, n)
                  : [];
              }),
              (Pt.dropRight = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Nn(
                      e,
                      0,
                      (a = n - (a = t || void 0 === a ? 1 : ns(a))) < 0 ? 0 : a
                    )
                  : [];
              }),
              (Pt.dropRightWhile = function (e, a) {
                return e && e.length ? ai(e, Zi(a, 3), !0, !0) : [];
              }),
              (Pt.dropWhile = function (e, a) {
                return e && e.length ? ai(e, Zi(a, 3), !0) : [];
              }),
              (Pt.fill = function (e, a, t, n) {
                var i = null == e ? 0 : e.length;
                return i
                  ? (t &&
                      "number" != typeof t &&
                      sr(e, a, t) &&
                      ((t = 0), (n = i)),
                    (function (e, a, t, n) {
                      var i = e.length;
                      for (
                        (t = ns(t)) < 0 && (t = -t > i ? 0 : i + t),
                          (n = void 0 === n || n > i ? i : ns(n)) < 0 &&
                            (n += i),
                          n = t > n ? 0 : is(n);
                        t < n;

                      )
                        e[t++] = a;
                      return e;
                    })(e, a, t, n))
                  : [];
              }),
              (Pt.filter = function (e, a) {
                return (Co(e) ? la : nn)(e, Zi(a, 3));
              }),
              (Pt.flatMap = function (e, a) {
                return rn(yo(e, a), 1);
              }),
              (Pt.flatMapDeep = function (e, a) {
                return rn(yo(e, a), 1 / 0);
              }),
              (Pt.flatMapDepth = function (e, a, t) {
                return (t = void 0 === t ? 1 : ns(t)), rn(yo(e, a), t);
              }),
              (Pt.flatten = Cr),
              (Pt.flattenDeep = function (e) {
                return (null == e ? 0 : e.length) ? rn(e, 1 / 0) : [];
              }),
              (Pt.flattenDepth = function (e, a) {
                return (null == e ? 0 : e.length)
                  ? rn(e, (a = void 0 === a ? 1 : ns(a)))
                  : [];
              }),
              (Pt.flip = function (e) {
                return ji(e, 512);
              }),
              (Pt.flow = xs),
              (Pt.flowRight = Ns),
              (Pt.fromPairs = function (e) {
                for (
                  var a = -1, t = null == e ? 0 : e.length, n = {};
                  ++a < t;

                ) {
                  var i = e[a];
                  n[i[0]] = i[1];
                }
                return n;
              }),
              (Pt.functions = function (e) {
                return null == e ? [] : ln(e, ks(e));
              }),
              (Pt.functionsIn = function (e) {
                return null == e ? [] : ln(e, Ls(e));
              }),
              (Pt.groupBy = uo),
              (Pt.initial = function (e) {
                return (null == e ? 0 : e.length) ? Nn(e, 0, -1) : [];
              }),
              (Pt.intersection = Br),
              (Pt.intersectionBy = Hr),
              (Pt.intersectionWith = Ir),
              (Pt.invert = ps),
              (Pt.invertBy = fs),
              (Pt.invokeMap = lo),
              (Pt.iteratee = Ks),
              (Pt.keyBy = mo),
              (Pt.keys = ks),
              (Pt.keysIn = Ls),
              (Pt.map = yo),
              (Pt.mapKeys = function (e, a) {
                var t = {};
                return (
                  (a = Zi(a, 3)),
                  dn(e, function (e, n, i) {
                    Gt(t, a(e, n, i), e);
                  }),
                  t
                );
              }),
              (Pt.mapValues = function (e, a) {
                var t = {};
                return (
                  (a = Zi(a, 3)),
                  dn(e, function (e, n, i) {
                    Gt(t, n, a(e, n, i));
                  }),
                  t
                );
              }),
              (Pt.matches = function (e) {
                return bn(qt(e, 1));
              }),
              (Pt.matchesProperty = function (e, a) {
                return En(e, qt(a, 1));
              }),
              (Pt.memoize = To),
              (Pt.merge = Os),
              (Pt.mergeWith = Ts),
              (Pt.method = Us),
              (Pt.methodOf = qs),
              (Pt.mixin = Zs),
              (Pt.negate = vo),
              (Pt.nthArg = function (e) {
                return (
                  (e = ns(e)),
                  zn(function (a) {
                    return Yn(a, e);
                  })
                );
              }),
              (Pt.omit = vs),
              (Pt.omitBy = function (e, a) {
                return Ss(e, vo(Zi(a)));
              }),
              (Pt.once = function (e) {
                return po(2, e);
              }),
              (Pt.orderBy = function (e, a, t, n) {
                return null == e
                  ? []
                  : (Co(a) || (a = null == a ? [] : [a]),
                    Co((t = n ? void 0 : t)) || (t = null == t ? [] : [t]),
                    wn(e, a, t));
              }),
              (Pt.over = $s),
              (Pt.overArgs = Ao),
              (Pt.overEvery = Qs),
              (Pt.overSome = ed),
              (Pt.partial = So),
              (Pt.partialRight = Po),
              (Pt.partition = co),
              (Pt.pick = As),
              (Pt.pickBy = Ss),
              (Pt.property = ad),
              (Pt.propertyOf = function (e) {
                return function (a) {
                  return null == e ? void 0 : mn(e, a);
                };
              }),
              (Pt.pull = jr),
              (Pt.pullAll = Fr),
              (Pt.pullAllBy = function (e, a, t) {
                return e && e.length && a && a.length ? Rn(e, a, Zi(t, 2)) : e;
              }),
              (Pt.pullAllWith = function (e, a, t) {
                return e && e.length && a && a.length ? Rn(e, a, void 0, t) : e;
              }),
              (Pt.pullAt = Wr),
              (Pt.range = td),
              (Pt.rangeRight = nd),
              (Pt.rearg = bo),
              (Pt.reject = function (e, a) {
                return (Co(e) ? la : nn)(e, vo(Zi(a, 3)));
              }),
              (Pt.remove = function (e, a) {
                var t = [];
                if (!e || !e.length) return t;
                var n = -1,
                  i = [],
                  r = e.length;
                for (a = Zi(a, 3); ++n < r; ) {
                  var o = e[n];
                  a(o, n, e) && (t.push(o), i.push(n));
                }
                return Bn(e, i), t;
              }),
              (Pt.rest = function (e, a) {
                if ("function" != typeof e) throw new fe(r);
                return zn(e, (a = void 0 === a ? a : ns(a)));
              }),
              (Pt.reverse = Jr),
              (Pt.sampleSize = function (e, a, t) {
                return (
                  (a = (t ? sr(e, a, t) : void 0 === a) ? 1 : ns(a)),
                  (Co(e) ? jt : Fn)(e, a)
                );
              }),
              (Pt.set = function (e, a, t) {
                return null == e ? e : Wn(e, a, t);
              }),
              (Pt.setWith = function (e, a, t, n) {
                return (
                  (n = "function" == typeof n ? n : void 0),
                  null == e ? e : Wn(e, a, t, n)
                );
              }),
              (Pt.shuffle = function (e) {
                return (Co(e) ? Ft : xn)(e);
              }),
              (Pt.slice = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                return n
                  ? (t && "number" != typeof t && sr(e, a, t)
                      ? ((a = 0), (t = n))
                      : ((a = null == a ? 0 : ns(a)),
                        (t = void 0 === t ? n : ns(t))),
                    Nn(e, a, t))
                  : [];
              }),
              (Pt.sortBy = ho),
              (Pt.sortedUniq = function (e) {
                return e && e.length ? qn(e) : [];
              }),
              (Pt.sortedUniqBy = function (e, a) {
                return e && e.length ? qn(e, Zi(a, 2)) : [];
              }),
              (Pt.split = function (e, a, t) {
                return (
                  t && "number" != typeof t && sr(e, a, t) && (a = t = void 0),
                  (t = void 0 === t ? 4294967295 : t >>> 0)
                    ? (e = ss(e)) &&
                      ("string" == typeof a || (null != a && !Uo(a))) &&
                      !(a = Xn(a)) &&
                      ja(e)
                      ? ui(Ga(e), 0, t)
                      : e.split(a, t)
                    : []
                );
              }),
              (Pt.spread = function (e, a) {
                if ("function" != typeof e) throw new fe(r);
                return (
                  (a = null == a ? 0 : rt(ns(a), 0)),
                  zn(function (t) {
                    var n = t[a],
                      i = ui(t, 0, a);
                    return n && ha(i, n), ra(e, this, i);
                  })
                );
              }),
              (Pt.tail = function (e) {
                var a = null == e ? 0 : e.length;
                return a ? Nn(e, 1, a) : [];
              }),
              (Pt.take = function (e, a, t) {
                return e && e.length
                  ? Nn(e, 0, (a = t || void 0 === a ? 1 : ns(a)) < 0 ? 0 : a)
                  : [];
              }),
              (Pt.takeRight = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Nn(
                      e,
                      (a = n - (a = t || void 0 === a ? 1 : ns(a))) < 0 ? 0 : a,
                      n
                    )
                  : [];
              }),
              (Pt.takeRightWhile = function (e, a) {
                return e && e.length ? ai(e, Zi(a, 3), !1, !0) : [];
              }),
              (Pt.takeWhile = function (e, a) {
                return e && e.length ? ai(e, Zi(a, 3)) : [];
              }),
              (Pt.tap = function (e, a) {
                return a(e), e;
              }),
              (Pt.throttle = function (e, a, t) {
                var n = !0,
                  i = !0;
                if ("function" != typeof e) throw new fe(r);
                return (
                  Vo(t) &&
                    ((n = "leading" in t ? !!t.leading : n),
                    (i = "trailing" in t ? !!t.trailing : i)),
                  ko(e, a, { leading: n, maxWait: a, trailing: i })
                );
              }),
              (Pt.thru = ao),
              (Pt.toArray = as),
              (Pt.toPairs = Ps),
              (Pt.toPairsIn = bs),
              (Pt.toPath = function (e) {
                return Co(e) ? ca(e, Ar) : Xo(e) ? [e] : pi(vr(ss(e)));
              }),
              (Pt.toPlainObject = os),
              (Pt.transform = function (e, a, t) {
                var n = Co(e),
                  i = n || Io(e) || $o(e);
                if (((a = Zi(a, 4)), null == t)) {
                  var r = e && e.constructor;
                  t = i ? (n ? new r() : []) : Vo(e) && Fo(r) ? bt(Ne(e)) : {};
                }
                return (
                  (i ? sa : dn)(e, function (e, n, i) {
                    return a(t, e, n, i);
                  }),
                  t
                );
              }),
              (Pt.unary = function (e) {
                return Mo(e, 1);
              }),
              (Pt.union = Vr),
              (Pt.unionBy = xr),
              (Pt.unionWith = Nr),
              (Pt.uniq = function (e) {
                return e && e.length ? $n(e) : [];
              }),
              (Pt.uniqBy = function (e, a) {
                return e && e.length ? $n(e, Zi(a, 2)) : [];
              }),
              (Pt.uniqWith = function (e, a) {
                return (
                  (a = "function" == typeof a ? a : void 0),
                  e && e.length ? $n(e, void 0, a) : []
                );
              }),
              (Pt.unset = function (e, a) {
                return null == e || Qn(e, a);
              }),
              (Pt.unzip = Gr),
              (Pt.unzipWith = Kr),
              (Pt.update = function (e, a, t) {
                return null == e ? e : ei(e, a, oi(t));
              }),
              (Pt.updateWith = function (e, a, t, n) {
                return (
                  (n = "function" == typeof n ? n : void 0),
                  null == e ? e : ei(e, a, oi(t), n)
                );
              }),
              (Pt.values = Es),
              (Pt.valuesIn = function (e) {
                return null == e ? [] : Ya(e, Ls(e));
              }),
              (Pt.without = Ur),
              (Pt.words = Fs),
              (Pt.wrap = function (e, a) {
                return So(oi(a), e);
              }),
              (Pt.xor = qr),
              (Pt.xorBy = Zr),
              (Pt.xorWith = Xr),
              (Pt.zip = $r),
              (Pt.zipObject = function (e, a) {
                return ii(e || [], a || [], Jt);
              }),
              (Pt.zipObjectDeep = function (e, a) {
                return ii(e || [], a || [], Wn);
              }),
              (Pt.zipWith = Qr),
              (Pt.entries = Ps),
              (Pt.entriesIn = bs),
              (Pt.extend = us),
              (Pt.extendWith = ls),
              Zs(Pt, Pt),
              (Pt.add = od),
              (Pt.attempt = Ws),
              (Pt.camelCase = Ds),
              (Pt.capitalize = Ys),
              (Pt.ceil = sd),
              (Pt.clamp = function (e, a, t) {
                return (
                  void 0 === t && ((t = a), (a = void 0)),
                  void 0 !== t && (t = (t = rs(t)) == t ? t : 0),
                  void 0 !== a && (a = (a = rs(a)) == a ? a : 0),
                  Ut(rs(e), a, t)
                );
              }),
              (Pt.clone = function (e) {
                return qt(e, 4);
              }),
              (Pt.cloneDeep = function (e) {
                return qt(e, 5);
              }),
              (Pt.cloneDeepWith = function (e, a) {
                return qt(e, 5, (a = "function" == typeof a ? a : void 0));
              }),
              (Pt.cloneWith = function (e, a) {
                return qt(e, 4, (a = "function" == typeof a ? a : void 0));
              }),
              (Pt.conformsTo = function (e, a) {
                return null == a || Zt(e, a, ks(a));
              }),
              (Pt.deburr = ws),
              (Pt.defaultTo = function (e, a) {
                return null == e || e != e ? a : e;
              }),
              (Pt.divide = dd),
              (Pt.endsWith = function (e, a, t) {
                (e = ss(e)), (a = Xn(a));
                var n = e.length,
                  i = (t = void 0 === t ? n : Ut(ns(t), 0, n));
                return (t -= a.length) >= 0 && e.slice(t, i) == a;
              }),
              (Pt.eq = Eo),
              (Pt.escape = function (e) {
                return (e = ss(e)) && j.test(e) ? e.replace(I, Ia) : e;
              }),
              (Pt.escapeRegExp = function (e) {
                return (e = ss(e)) && K.test(e) ? e.replace(G, "\\$&") : e;
              }),
              (Pt.every = function (e, a, t) {
                var n = Co(e) ? ua : an;
                return t && sr(e, a, t) && (a = void 0), n(e, Zi(a, 3));
              }),
              (Pt.find = io),
              (Pt.findIndex = Yr),
              (Pt.findKey = function (e, a) {
                return ga(e, Zi(a, 3), dn);
              }),
              (Pt.findLast = ro),
              (Pt.findLastIndex = wr),
              (Pt.findLastKey = function (e, a) {
                return ga(e, Zi(a, 3), un);
              }),
              (Pt.floor = ud),
              (Pt.forEach = oo),
              (Pt.forEachRight = so),
              (Pt.forIn = function (e, a) {
                return null == e ? e : on(e, Zi(a, 3), Ls);
              }),
              (Pt.forInRight = function (e, a) {
                return null == e ? e : sn(e, Zi(a, 3), Ls);
              }),
              (Pt.forOwn = function (e, a) {
                return e && dn(e, Zi(a, 3));
              }),
              (Pt.forOwnRight = function (e, a) {
                return e && un(e, Zi(a, 3));
              }),
              (Pt.get = _s),
              (Pt.gt = Do),
              (Pt.gte = Yo),
              (Pt.has = function (e, a) {
                return null != e && nr(e, a, _n);
              }),
              (Pt.hasIn = Ms),
              (Pt.head = Rr),
              (Pt.identity = Gs),
              (Pt.includes = function (e, a, t, n) {
                (e = Bo(e) ? e : Es(e)), (t = t && !n ? ns(t) : 0);
                var i = e.length;
                return (
                  t < 0 && (t = rt(i + t, 0)),
                  Zo(e)
                    ? t <= i && e.indexOf(a, t) > -1
                    : !!i && La(e, a, t) > -1
                );
              }),
              (Pt.indexOf = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                if (!n) return -1;
                var i = null == t ? 0 : ns(t);
                return i < 0 && (i = rt(n + i, 0)), La(e, a, i);
              }),
              (Pt.inRange = function (e, a, t) {
                return (
                  (a = ts(a)),
                  void 0 === t ? ((t = a), (a = 0)) : (t = ts(t)),
                  (function (e, a, t) {
                    return e >= ot(a, t) && e < rt(a, t);
                  })((e = rs(e)), a, t)
                );
              }),
              (Pt.invoke = gs),
              (Pt.isArguments = wo),
              (Pt.isArray = Co),
              (Pt.isArrayBuffer = Ro),
              (Pt.isArrayLike = Bo),
              (Pt.isArrayLikeObject = Ho),
              (Pt.isBoolean = function (e) {
                return !0 === e || !1 === e || (xo(e) && cn(e) == l);
              }),
              (Pt.isBuffer = Io),
              (Pt.isDate = zo),
              (Pt.isElement = function (e) {
                return xo(e) && 1 === e.nodeType && !Ko(e);
              }),
              (Pt.isEmpty = function (e) {
                if (null == e) return !0;
                if (
                  Bo(e) &&
                  (Co(e) ||
                    "string" == typeof e ||
                    "function" == typeof e.splice ||
                    Io(e) ||
                    $o(e) ||
                    wo(e))
                )
                  return !e.length;
                var a = tr(e);
                if (a == _ || a == g) return !e.size;
                if (mr(e)) return !vn(e).length;
                for (var t in e) if (ve.call(e, t)) return !1;
                return !0;
              }),
              (Pt.isEqual = function (e, a) {
                return kn(e, a);
              }),
              (Pt.isEqualWith = function (e, a, t) {
                var n = (t = "function" == typeof t ? t : void 0)
                  ? t(e, a)
                  : void 0;
                return void 0 === n ? kn(e, a, void 0, t) : !!n;
              }),
              (Pt.isError = jo),
              (Pt.isFinite = function (e) {
                return "number" == typeof e && tt(e);
              }),
              (Pt.isFunction = Fo),
              (Pt.isInteger = Wo),
              (Pt.isLength = Jo),
              (Pt.isMap = No),
              (Pt.isMatch = function (e, a) {
                return e === a || Ln(e, a, $i(a));
              }),
              (Pt.isMatchWith = function (e, a, t) {
                return (
                  (t = "function" == typeof t ? t : void 0), Ln(e, a, $i(a), t)
                );
              }),
              (Pt.isNaN = function (e) {
                return Go(e) && e != +e;
              }),
              (Pt.isNative = function (e) {
                if (lr(e))
                  throw new ye(
                    "Unsupported core-js use. Try https://npms.io/search?q=ponyfill."
                  );
                return On(e);
              }),
              (Pt.isNil = function (e) {
                return null == e;
              }),
              (Pt.isNull = function (e) {
                return null === e;
              }),
              (Pt.isNumber = Go),
              (Pt.isObject = Vo),
              (Pt.isObjectLike = xo),
              (Pt.isPlainObject = Ko),
              (Pt.isRegExp = Uo),
              (Pt.isSafeInteger = function (e) {
                return Wo(e) && e >= -9007199254740991 && e <= 9007199254740991;
              }),
              (Pt.isSet = qo),
              (Pt.isString = Zo),
              (Pt.isSymbol = Xo),
              (Pt.isTypedArray = $o),
              (Pt.isUndefined = function (e) {
                return void 0 === e;
              }),
              (Pt.isWeakMap = function (e) {
                return xo(e) && tr(e) == O;
              }),
              (Pt.isWeakSet = function (e) {
                return xo(e) && "[object WeakSet]" == cn(e);
              }),
              (Pt.join = function (e, a) {
                return null == e ? "" : nt.call(e, a);
              }),
              (Pt.kebabCase = Cs),
              (Pt.last = zr),
              (Pt.lastIndexOf = function (e, a, t) {
                var n = null == e ? 0 : e.length;
                if (!n) return -1;
                var i = n;
                return (
                  void 0 !== t &&
                    (i = (i = ns(t)) < 0 ? rt(n + i, 0) : ot(i, n - 1)),
                  a == a
                    ? (function (e, a, t) {
                        for (var n = t + 1; n--; ) if (e[n] === a) return n;
                        return n;
                      })(e, a, i)
                    : ka(e, Ta, i, !0)
                );
              }),
              (Pt.lowerCase = Rs),
              (Pt.lowerFirst = Bs),
              (Pt.lt = Qo),
              (Pt.lte = es),
              (Pt.max = function (e) {
                return e && e.length ? tn(e, Gs, hn) : void 0;
              }),
              (Pt.maxBy = function (e, a) {
                return e && e.length ? tn(e, Zi(a, 2), hn) : void 0;
              }),
              (Pt.mean = function (e) {
                return va(e, Gs);
              }),
              (Pt.meanBy = function (e, a) {
                return va(e, Zi(a, 2));
              }),
              (Pt.min = function (e) {
                return e && e.length ? tn(e, Gs, Sn) : void 0;
              }),
              (Pt.minBy = function (e, a) {
                return e && e.length ? tn(e, Zi(a, 2), Sn) : void 0;
              }),
              (Pt.stubArray = id),
              (Pt.stubFalse = rd),
              (Pt.stubObject = function () {
                return {};
              }),
              (Pt.stubString = function () {
                return "";
              }),
              (Pt.stubTrue = function () {
                return !0;
              }),
              (Pt.multiply = md),
              (Pt.nth = function (e, a) {
                return e && e.length ? Yn(e, ns(a)) : void 0;
              }),
              (Pt.noConflict = function () {
                return Ke._ === this && (Ke._ = Ee), this;
              }),
              (Pt.noop = Xs),
              (Pt.now = _o),
              (Pt.pad = function (e, a, t) {
                e = ss(e);
                var n = (a = ns(a)) ? Na(e) : 0;
                if (!a || n >= a) return e;
                var i = (a - n) / 2;
                return wi(Qa(i), t) + e + wi($a(i), t);
              }),
              (Pt.padEnd = function (e, a, t) {
                e = ss(e);
                var n = (a = ns(a)) ? Na(e) : 0;
                return a && n < a ? e + wi(a - n, t) : e;
              }),
              (Pt.padStart = function (e, a, t) {
                e = ss(e);
                var n = (a = ns(a)) ? Na(e) : 0;
                return a && n < a ? wi(a - n, t) + e : e;
              }),
              (Pt.parseInt = function (e, a, t) {
                return (
                  t || null == a ? (a = 0) : a && (a = +a),
                  dt(ss(e).replace(q, ""), a || 0)
                );
              }),
              (Pt.random = function (e, a, t) {
                if (
                  (t &&
                    "boolean" != typeof t &&
                    sr(e, a, t) &&
                    (a = t = void 0),
                  void 0 === t &&
                    ("boolean" == typeof a
                      ? ((t = a), (a = void 0))
                      : "boolean" == typeof e && ((t = e), (e = void 0))),
                  void 0 === e && void 0 === a
                    ? ((e = 0), (a = 1))
                    : ((e = ts(e)),
                      void 0 === a ? ((a = e), (e = 0)) : (a = ts(a))),
                  e > a)
                ) {
                  var n = e;
                  (e = a), (a = n);
                }
                if (t || e % 1 || a % 1) {
                  var i = ut();
                  return ot(
                    e + i * (a - e + Ve("1e-" + ((i + "").length - 1))),
                    a
                  );
                }
                return Hn(e, a);
              }),
              (Pt.reduce = function (e, a, t) {
                var n = Co(e) ? _a : Pa,
                  i = arguments.length < 3;
                return n(e, Zi(a, 4), t, i, Qt);
              }),
              (Pt.reduceRight = function (e, a, t) {
                var n = Co(e) ? Ma : Pa,
                  i = arguments.length < 3;
                return n(e, Zi(a, 4), t, i, en);
              }),
              (Pt.repeat = function (e, a, t) {
                return (
                  (a = (t ? sr(e, a, t) : void 0 === a) ? 1 : ns(a)),
                  In(ss(e), a)
                );
              }),
              (Pt.replace = function () {
                var e = arguments,
                  a = ss(e[0]);
                return e.length < 3 ? a : a.replace(e[1], e[2]);
              }),
              (Pt.result = function (e, a, t) {
                var n = -1,
                  i = (a = si(a, e)).length;
                for (i || ((i = 1), (e = void 0)); ++n < i; ) {
                  var r = null == e ? void 0 : e[Ar(a[n])];
                  void 0 === r && ((n = i), (r = t)),
                    (e = Fo(r) ? r.call(e) : r);
                }
                return e;
              }),
              (Pt.round = yd),
              (Pt.runInContext = e),
              (Pt.sample = function (e) {
                return (Co(e) ? zt : jn)(e);
              }),
              (Pt.size = function (e) {
                if (null == e) return 0;
                if (Bo(e)) return Zo(e) ? Na(e) : e.length;
                var a = tr(e);
                return a == _ || a == g ? e.size : vn(e).length;
              }),
              (Pt.snakeCase = Hs),
              (Pt.some = function (e, a, t) {
                var n = Co(e) ? pa : Gn;
                return t && sr(e, a, t) && (a = void 0), n(e, Zi(a, 3));
              }),
              (Pt.sortedIndex = function (e, a) {
                return Kn(e, a);
              }),
              (Pt.sortedIndexBy = function (e, a, t) {
                return Un(e, a, Zi(t, 2));
              }),
              (Pt.sortedIndexOf = function (e, a) {
                var t = null == e ? 0 : e.length;
                if (t) {
                  var n = Kn(e, a);
                  if (n < t && Eo(e[n], a)) return n;
                }
                return -1;
              }),
              (Pt.sortedLastIndex = function (e, a) {
                return Kn(e, a, !0);
              }),
              (Pt.sortedLastIndexBy = function (e, a, t) {
                return Un(e, a, Zi(t, 2), !0);
              }),
              (Pt.sortedLastIndexOf = function (e, a) {
                if (null == e ? 0 : e.length) {
                  var t = Kn(e, a, !0) - 1;
                  if (Eo(e[t], a)) return t;
                }
                return -1;
              }),
              (Pt.startCase = Is),
              (Pt.startsWith = function (e, a, t) {
                return (
                  (e = ss(e)),
                  (t = null == t ? 0 : Ut(ns(t), 0, e.length)),
                  (a = Xn(a)),
                  e.slice(t, t + a.length) == a
                );
              }),
              (Pt.subtract = cd),
              (Pt.sum = function (e) {
                return e && e.length ? ba(e, Gs) : 0;
              }),
              (Pt.sumBy = function (e, a) {
                return e && e.length ? ba(e, Zi(a, 2)) : 0;
              }),
              (Pt.template = function (e, a, t) {
                var n = Pt.templateSettings;
                t && sr(e, a, t) && (a = void 0),
                  (e = ss(e)),
                  (a = ls({}, a, n, Fi));
                var i,
                  r,
                  o = ls({}, a.imports, n.imports, Fi),
                  s = ks(o),
                  d = Ya(o, s),
                  u = 0,
                  l = a.interpolate || le,
                  m = "__p += '",
                  y = Me(
                    (a.escape || le).source +
                      "|" +
                      l.source +
                      "|" +
                      (l === J ? te : le).source +
                      "|" +
                      (a.evaluate || le).source +
                      "|$",
                    "g"
                  ),
                  c =
                    "//# sourceURL=" +
                    (ve.call(a, "sourceURL")
                      ? (a.sourceURL + "").replace(/[\r\n]/g, " ")
                      : "lodash.templateSources[" + ++je + "]") +
                    "\n";
                e.replace(y, function (a, t, n, o, s, d) {
                  return (
                    n || (n = o),
                    (m += e.slice(u, d).replace(me, za)),
                    t && ((i = !0), (m += "' +\n__e(" + t + ") +\n'")),
                    s && ((r = !0), (m += "';\n" + s + ";\n__p += '")),
                    n &&
                      (m +=
                        "' +\n((__t = (" + n + ")) == null ? '' : __t) +\n'"),
                    (u = d + a.length),
                    a
                  );
                }),
                  (m += "';\n");
                var h = ve.call(a, "variable") && a.variable;
                h || (m = "with (obj) {\n" + m + "\n}\n"),
                  (m = (r ? m.replace(C, "") : m)
                    .replace(R, "$1")
                    .replace(B, "$1;")),
                  (m =
                    "function(" +
                    (h || "obj") +
                    ") {\n" +
                    (h ? "" : "obj || (obj = {});\n") +
                    "var __t, __p = ''" +
                    (i ? ", __e = _.escape" : "") +
                    (r
                      ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n"
                      : ";\n") +
                    m +
                    "return __p\n}");
                var _ = Ws(function () {
                  return ce(s, c + "return " + m).apply(void 0, d);
                });
                if (((_.source = m), jo(_))) throw _;
                return _;
              }),
              (Pt.times = function (e, a) {
                if ((e = ns(e)) < 1 || e > 9007199254740991) return [];
                var t = 4294967295,
                  n = ot(e, 4294967295);
                e -= 4294967295;
                for (var i = Ea(n, (a = Zi(a))); ++t < e; ) a(t);
                return i;
              }),
              (Pt.toFinite = ts),
              (Pt.toInteger = ns),
              (Pt.toLength = is),
              (Pt.toLower = function (e) {
                return ss(e).toLowerCase();
              }),
              (Pt.toNumber = rs),
              (Pt.toSafeInteger = function (e) {
                return e
                  ? Ut(ns(e), -9007199254740991, 9007199254740991)
                  : 0 === e
                  ? e
                  : 0;
              }),
              (Pt.toString = ss),
              (Pt.toUpper = function (e) {
                return ss(e).toUpperCase();
              }),
              (Pt.trim = function (e, a, t) {
                if ((e = ss(e)) && (t || void 0 === a)) return e.replace(U, "");
                if (!e || !(a = Xn(a))) return e;
                var n = Ga(e),
                  i = Ga(a);
                return ui(n, Ca(n, i), Ra(n, i) + 1).join("");
              }),
              (Pt.trimEnd = function (e, a, t) {
                if ((e = ss(e)) && (t || void 0 === a)) return e.replace(Z, "");
                if (!e || !(a = Xn(a))) return e;
                var n = Ga(e);
                return ui(n, 0, Ra(n, Ga(a)) + 1).join("");
              }),
              (Pt.trimStart = function (e, a, t) {
                if ((e = ss(e)) && (t || void 0 === a)) return e.replace(q, "");
                if (!e || !(a = Xn(a))) return e;
                var n = Ga(e);
                return ui(n, Ca(n, Ga(a))).join("");
              }),
              (Pt.truncate = function (e, a) {
                var t = 30,
                  n = "...";
                if (Vo(a)) {
                  var i = "separator" in a ? a.separator : i;
                  (t = "length" in a ? ns(a.length) : t),
                    (n = "omission" in a ? Xn(a.omission) : n);
                }
                var r = (e = ss(e)).length;
                if (ja(e)) {
                  var o = Ga(e);
                  r = o.length;
                }
                if (t >= r) return e;
                var s = t - Na(n);
                if (s < 1) return n;
                var d = o ? ui(o, 0, s).join("") : e.slice(0, s);
                if (void 0 === i) return d + n;
                if ((o && (s += d.length - s), Uo(i))) {
                  if (e.slice(s).search(i)) {
                    var u,
                      l = d;
                    for (
                      i.global || (i = Me(i.source, ss(ne.exec(i)) + "g")),
                        i.lastIndex = 0;
                      (u = i.exec(l));

                    )
                      var m = u.index;
                    d = d.slice(0, void 0 === m ? s : m);
                  }
                } else if (e.indexOf(Xn(i), s) != s) {
                  var y = d.lastIndexOf(i);
                  y > -1 && (d = d.slice(0, y));
                }
                return d + n;
              }),
              (Pt.unescape = function (e) {
                return (e = ss(e)) && z.test(e) ? e.replace(H, Ka) : e;
              }),
              (Pt.uniqueId = function (e) {
                var a = ++Ae;
                return ss(e) + a;
              }),
              (Pt.upperCase = zs),
              (Pt.upperFirst = js),
              (Pt.each = oo),
              (Pt.eachRight = so),
              (Pt.first = Rr),
              Zs(
                Pt,
                ((ld = {}),
                dn(Pt, function (e, a) {
                  ve.call(Pt.prototype, a) || (ld[a] = e);
                }),
                ld),
                { chain: !1 }
              ),
              (Pt.VERSION = "4.17.15"),
              sa(
                [
                  "bind",
                  "bindKey",
                  "curry",
                  "curryRight",
                  "partial",
                  "partialRight",
                ],
                function (e) {
                  Pt[e].placeholder = Pt;
                }
              ),
              sa(["drop", "take"], function (e, a) {
                (Yt.prototype[e] = function (t) {
                  t = void 0 === t ? 1 : rt(ns(t), 0);
                  var n = this.__filtered__ && !a ? new Yt(this) : this.clone();
                  return (
                    n.__filtered__
                      ? (n.__takeCount__ = ot(t, n.__takeCount__))
                      : n.__views__.push({
                          size: ot(t, 4294967295),
                          type: e + (n.__dir__ < 0 ? "Right" : ""),
                        }),
                    n
                  );
                }),
                  (Yt.prototype[e + "Right"] = function (a) {
                    return this.reverse()[e](a).reverse();
                  });
              }),
              sa(["filter", "map", "takeWhile"], function (e, a) {
                var t = a + 1,
                  n = 1 == t || 3 == t;
                Yt.prototype[e] = function (e) {
                  var a = this.clone();
                  return (
                    a.__iteratees__.push({ iteratee: Zi(e, 3), type: t }),
                    (a.__filtered__ = a.__filtered__ || n),
                    a
                  );
                };
              }),
              sa(["head", "last"], function (e, a) {
                var t = "take" + (a ? "Right" : "");
                Yt.prototype[e] = function () {
                  return this[t](1).value()[0];
                };
              }),
              sa(["initial", "tail"], function (e, a) {
                var t = "drop" + (a ? "" : "Right");
                Yt.prototype[e] = function () {
                  return this.__filtered__ ? new Yt(this) : this[t](1);
                };
              }),
              (Yt.prototype.compact = function () {
                return this.filter(Gs);
              }),
              (Yt.prototype.find = function (e) {
                return this.filter(e).head();
              }),
              (Yt.prototype.findLast = function (e) {
                return this.reverse().find(e);
              }),
              (Yt.prototype.invokeMap = zn(function (e, a) {
                return "function" == typeof e
                  ? new Yt(this)
                  : this.map(function (t) {
                      return fn(t, e, a);
                    });
              })),
              (Yt.prototype.reject = function (e) {
                return this.filter(vo(Zi(e)));
              }),
              (Yt.prototype.slice = function (e, a) {
                e = ns(e);
                var t = this;
                return t.__filtered__ && (e > 0 || a < 0)
                  ? new Yt(t)
                  : (e < 0 ? (t = t.takeRight(-e)) : e && (t = t.drop(e)),
                    void 0 !== a &&
                      (t = (a = ns(a)) < 0 ? t.dropRight(-a) : t.take(a - e)),
                    t);
              }),
              (Yt.prototype.takeRightWhile = function (e) {
                return this.reverse().takeWhile(e).reverse();
              }),
              (Yt.prototype.toArray = function () {
                return this.take(4294967295);
              }),
              dn(Yt.prototype, function (e, a) {
                var t = /^(?:filter|find|map|reject)|While$/.test(a),
                  n = /^(?:head|last)$/.test(a),
                  i = Pt[n ? "take" + ("last" == a ? "Right" : "") : a],
                  r = n || /^find/.test(a);
                i &&
                  (Pt.prototype[a] = function () {
                    var a = this.__wrapped__,
                      o = n ? [1] : arguments,
                      s = a instanceof Yt,
                      d = o[0],
                      u = s || Co(a),
                      l = function (e) {
                        var a = i.apply(Pt, ha([e], o));
                        return n && m ? a[0] : a;
                      };
                    u &&
                      t &&
                      "function" == typeof d &&
                      1 != d.length &&
                      (s = u = !1);
                    var m = this.__chain__,
                      y = !!this.__actions__.length,
                      c = r && !m,
                      h = s && !y;
                    if (!r && u) {
                      a = h ? a : new Yt(this);
                      var _ = e.apply(a, o);
                      return (
                        _.__actions__.push({
                          func: ao,
                          args: [l],
                          thisArg: void 0,
                        }),
                        new Dt(_, m)
                      );
                    }
                    return c && h
                      ? e.apply(this, o)
                      : ((_ = this.thru(l)),
                        c ? (n ? _.value()[0] : _.value()) : _);
                  });
              }),
              sa(
                ["pop", "push", "shift", "sort", "splice", "unshift"],
                function (e) {
                  var a = ge[e],
                    t = /^(?:push|sort|unshift)$/.test(e) ? "tap" : "thru",
                    n = /^(?:pop|shift)$/.test(e);
                  Pt.prototype[e] = function () {
                    var e = arguments;
                    if (n && !this.__chain__) {
                      var i = this.value();
                      return a.apply(Co(i) ? i : [], e);
                    }
                    return this[t](function (t) {
                      return a.apply(Co(t) ? t : [], e);
                    });
                  };
                }
              ),
              dn(Yt.prototype, function (e, a) {
                var t = Pt[a];
                if (t) {
                  var n = t.name + "";
                  ve.call(ft, n) || (ft[n] = []),
                    ft[n].push({ name: a, func: t });
                }
              }),
              (ft[bi(void 0, 2).name] = [{ name: "wrapper", func: void 0 }]),
              (Yt.prototype.clone = function () {
                var e = new Yt(this.__wrapped__);
                return (
                  (e.__actions__ = pi(this.__actions__)),
                  (e.__dir__ = this.__dir__),
                  (e.__filtered__ = this.__filtered__),
                  (e.__iteratees__ = pi(this.__iteratees__)),
                  (e.__takeCount__ = this.__takeCount__),
                  (e.__views__ = pi(this.__views__)),
                  e
                );
              }),
              (Yt.prototype.reverse = function () {
                if (this.__filtered__) {
                  var e = new Yt(this);
                  (e.__dir__ = -1), (e.__filtered__ = !0);
                } else (e = this.clone()).__dir__ *= -1;
                return e;
              }),
              (Yt.prototype.value = function () {
                var e = this.__wrapped__.value(),
                  a = this.__dir__,
                  t = Co(e),
                  n = a < 0,
                  i = t ? e.length : 0,
                  r = (function (e, a, t) {
                    var n = -1,
                      i = t.length;
                    for (; ++n < i; ) {
                      var r = t[n],
                        o = r.size;
                      switch (r.type) {
                        case "drop":
                          e += o;
                          break;
                        case "dropRight":
                          a -= o;
                          break;
                        case "take":
                          a = ot(a, e + o);
                          break;
                        case "takeRight":
                          e = rt(e, a - o);
                      }
                    }
                    return { start: e, end: a };
                  })(0, i, this.__views__),
                  o = r.start,
                  s = r.end,
                  d = s - o,
                  u = n ? s : o - 1,
                  l = this.__iteratees__,
                  m = l.length,
                  y = 0,
                  c = ot(d, this.__takeCount__);
                if (!t || (!n && i == d && c == d))
                  return ti(e, this.__actions__);
                var h = [];
                e: for (; d-- && y < c; ) {
                  for (var _ = -1, M = e[(u += a)]; ++_ < m; ) {
                    var p = l[_],
                      f = p.iteratee,
                      g = p.type,
                      k = f(M);
                    if (2 == g) M = k;
                    else if (!k) {
                      if (1 == g) continue e;
                      break e;
                    }
                  }
                  h[y++] = M;
                }
                return h;
              }),
              (Pt.prototype.at = to),
              (Pt.prototype.chain = function () {
                return eo(this);
              }),
              (Pt.prototype.commit = function () {
                return new Dt(this.value(), this.__chain__);
              }),
              (Pt.prototype.next = function () {
                void 0 === this.__values__ &&
                  (this.__values__ = as(this.value()));
                var e = this.__index__ >= this.__values__.length;
                return {
                  done: e,
                  value: e ? void 0 : this.__values__[this.__index__++],
                };
              }),
              (Pt.prototype.plant = function (e) {
                for (var a, t = this; t instanceof Et; ) {
                  var n = Pr(t);
                  (n.__index__ = 0),
                    (n.__values__ = void 0),
                    a ? (i.__wrapped__ = n) : (a = n);
                  var i = n;
                  t = t.__wrapped__;
                }
                return (i.__wrapped__ = e), a;
              }),
              (Pt.prototype.reverse = function () {
                var e = this.__wrapped__;
                if (e instanceof Yt) {
                  var a = e;
                  return (
                    this.__actions__.length && (a = new Yt(this)),
                    (a = a.reverse()).__actions__.push({
                      func: ao,
                      args: [Jr],
                      thisArg: void 0,
                    }),
                    new Dt(a, this.__chain__)
                  );
                }
                return this.thru(Jr);
              }),
              (Pt.prototype.toJSON =
                Pt.prototype.valueOf =
                Pt.prototype.value =
                  function () {
                    return ti(this.__wrapped__, this.__actions__);
                  }),
              (Pt.prototype.first = Pt.prototype.head),
              $e &&
                (Pt.prototype[$e] = function () {
                  return this;
                }),
              Pt
            );
          })();
          (Ke._ = Ua),
            void 0 ===
              (i = function () {
                return Ua;
              }.call(a, t, a, n)) || (n.exports = i);
        }).call(this);
      }).call(this, t(131), t(2)(e));
    },
    function (e, a) {
      e.exports = function (e) {
        return (
          e.webpackPolyfill ||
            ((e.deprecate = function () {}),
            (e.paths = []),
            e.children || (e.children = []),
            Object.defineProperty(e, "loaded", {
              enumerable: !0,
              get: function () {
                return e.l;
              },
            }),
            Object.defineProperty(e, "id", {
              enumerable: !0,
              get: function () {
                return e.i;
              },
            }),
            (e.webpackPolyfill = 1)),
          e
        );
      };
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("af", {
          months:
            "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays:
            "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split(
              "_"
            ),
          weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
          weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
          meridiemParse: /vm|nm/i,
          isPM: function (e) {
            return /^nm$/i.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 12 ? (t ? "vm" : "VM") : t ? "nm" : "NM";
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Vandag om] LT",
            nextDay: "[Môre om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[Gister om] LT",
            lastWeek: "[Laas] dddd [om] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "oor %s",
            past: "%s gelede",
            s: "'n paar sekondes",
            ss: "%d sekondes",
            m: "'n minuut",
            mm: "%d minute",
            h: "'n uur",
            hh: "%d ure",
            d: "'n dag",
            dd: "%d dae",
            M: "'n maand",
            MM: "%d maande",
            y: "'n jaar",
            yy: "%d jaar",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "١",
            2: "٢",
            3: "٣",
            4: "٤",
            5: "٥",
            6: "٦",
            7: "٧",
            8: "٨",
            9: "٩",
            0: "٠",
          },
          t = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0",
          },
          n = function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : 2 === e
              ? 2
              : e % 100 >= 3 && e % 100 <= 10
              ? 3
              : e % 100 >= 11
              ? 4
              : 5;
          },
          i = {
            s: [
              "أقل من ثانية",
              "ثانية واحدة",
              ["ثانيتان", "ثانيتين"],
              "%d ثوان",
              "%d ثانية",
              "%d ثانية",
            ],
            m: [
              "أقل من دقيقة",
              "دقيقة واحدة",
              ["دقيقتان", "دقيقتين"],
              "%d دقائق",
              "%d دقيقة",
              "%d دقيقة",
            ],
            h: [
              "أقل من ساعة",
              "ساعة واحدة",
              ["ساعتان", "ساعتين"],
              "%d ساعات",
              "%d ساعة",
              "%d ساعة",
            ],
            d: [
              "أقل من يوم",
              "يوم واحد",
              ["يومان", "يومين"],
              "%d أيام",
              "%d يومًا",
              "%d يوم",
            ],
            M: [
              "أقل من شهر",
              "شهر واحد",
              ["شهران", "شهرين"],
              "%d أشهر",
              "%d شهرا",
              "%d شهر",
            ],
            y: [
              "أقل من عام",
              "عام واحد",
              ["عامان", "عامين"],
              "%d أعوام",
              "%d عامًا",
              "%d عام",
            ],
          },
          r = function (e) {
            return function (a, t, r, o) {
              var s = n(a),
                d = i[e][n(a)];
              return 2 === s && (d = d[t ? 0 : 1]), d.replace(/%d/i, a);
            };
          },
          o = [
            "يناير",
            "فبراير",
            "مارس",
            "أبريل",
            "مايو",
            "يونيو",
            "يوليو",
            "أغسطس",
            "سبتمبر",
            "أكتوبر",
            "نوفمبر",
            "ديسمبر",
          ];
        e.defineLocale("ar", {
          months: o,
          monthsShort: o,
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/‏M/‏YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return "م" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ص" : "م";
          },
          calendar: {
            sameDay: "[اليوم عند الساعة] LT",
            nextDay: "[غدًا عند الساعة] LT",
            nextWeek: "dddd [عند الساعة] LT",
            lastDay: "[أمس عند الساعة] LT",
            lastWeek: "dddd [عند الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "بعد %s",
            past: "منذ %s",
            s: r("s"),
            ss: r("s"),
            m: r("m"),
            mm: r("m"),
            h: r("h"),
            hh: r("h"),
            d: r("d"),
            dd: r("d"),
            M: r("M"),
            MM: r("M"),
            y: r("y"),
            yy: r("y"),
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return t[e];
              })
              .replace(/،/g, ",");
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return a[e];
              })
              .replace(/,/g, "،");
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ar-dz", {
          months:
            "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          monthsShort:
            "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "أح_إث_ثلا_أر_خم_جم_سب".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            ss: "%d ثانية",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات",
          },
          week: { dow: 0, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ar-kw", {
          months:
            "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
              "_"
            ),
          monthsShort:
            "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
              "_"
            ),
          weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            ss: "%d ثانية",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات",
          },
          week: { dow: 0, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "1",
            2: "2",
            3: "3",
            4: "4",
            5: "5",
            6: "6",
            7: "7",
            8: "8",
            9: "9",
            0: "0",
          },
          t = function (e) {
            return 0 === e
              ? 0
              : 1 === e
              ? 1
              : 2 === e
              ? 2
              : e % 100 >= 3 && e % 100 <= 10
              ? 3
              : e % 100 >= 11
              ? 4
              : 5;
          },
          n = {
            s: [
              "أقل من ثانية",
              "ثانية واحدة",
              ["ثانيتان", "ثانيتين"],
              "%d ثوان",
              "%d ثانية",
              "%d ثانية",
            ],
            m: [
              "أقل من دقيقة",
              "دقيقة واحدة",
              ["دقيقتان", "دقيقتين"],
              "%d دقائق",
              "%d دقيقة",
              "%d دقيقة",
            ],
            h: [
              "أقل من ساعة",
              "ساعة واحدة",
              ["ساعتان", "ساعتين"],
              "%d ساعات",
              "%d ساعة",
              "%d ساعة",
            ],
            d: [
              "أقل من يوم",
              "يوم واحد",
              ["يومان", "يومين"],
              "%d أيام",
              "%d يومًا",
              "%d يوم",
            ],
            M: [
              "أقل من شهر",
              "شهر واحد",
              ["شهران", "شهرين"],
              "%d أشهر",
              "%d شهرا",
              "%d شهر",
            ],
            y: [
              "أقل من عام",
              "عام واحد",
              ["عامان", "عامين"],
              "%d أعوام",
              "%d عامًا",
              "%d عام",
            ],
          },
          i = function (e) {
            return function (a, i, r, o) {
              var s = t(a),
                d = n[e][t(a)];
              return 2 === s && (d = d[i ? 0 : 1]), d.replace(/%d/i, a);
            };
          },
          r = [
            "يناير",
            "فبراير",
            "مارس",
            "أبريل",
            "مايو",
            "يونيو",
            "يوليو",
            "أغسطس",
            "سبتمبر",
            "أكتوبر",
            "نوفمبر",
            "ديسمبر",
          ];
        e.defineLocale("ar-ly", {
          months: r,
          monthsShort: r,
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/‏M/‏YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return "م" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ص" : "م";
          },
          calendar: {
            sameDay: "[اليوم عند الساعة] LT",
            nextDay: "[غدًا عند الساعة] LT",
            nextWeek: "dddd [عند الساعة] LT",
            lastDay: "[أمس عند الساعة] LT",
            lastWeek: "dddd [عند الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "بعد %s",
            past: "منذ %s",
            s: i("s"),
            ss: i("s"),
            m: i("m"),
            mm: i("m"),
            h: i("h"),
            hh: i("h"),
            d: i("d"),
            dd: i("d"),
            M: i("M"),
            MM: i("M"),
            y: i("y"),
            yy: i("y"),
          },
          preparse: function (e) {
            return e.replace(/،/g, ",");
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return a[e];
              })
              .replace(/,/g, "،");
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ar-ma", {
          months:
            "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
              "_"
            ),
          monthsShort:
            "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
              "_"
            ),
          weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            ss: "%d ثانية",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات",
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "١",
            2: "٢",
            3: "٣",
            4: "٤",
            5: "٥",
            6: "٦",
            7: "٧",
            8: "٨",
            9: "٩",
            0: "٠",
          },
          t = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0",
          };
        e.defineLocale("ar-sa", {
          months:
            "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          monthsShort:
            "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return "م" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ص" : "م";
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            ss: "%d ثانية",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات",
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return t[e];
              })
              .replace(/،/g, ",");
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return a[e];
              })
              .replace(/,/g, "،");
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ar-tn", {
          months:
            "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          monthsShort:
            "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
              "_"
            ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            ss: "%d ثانية",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات",
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          1: "-inci",
          5: "-inci",
          8: "-inci",
          70: "-inci",
          80: "-inci",
          2: "-nci",
          7: "-nci",
          20: "-nci",
          50: "-nci",
          3: "-üncü",
          4: "-üncü",
          100: "-üncü",
          6: "-ncı",
          9: "-uncu",
          10: "-uncu",
          30: "-uncu",
          60: "-ıncı",
          90: "-ıncı",
        };
        e.defineLocale("az", {
          months:
            "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split(
              "_"
            ),
          monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split(
            "_"
          ),
          weekdays:
            "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split(
              "_"
            ),
          weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
          weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[bugün saat] LT",
            nextDay: "[sabah saat] LT",
            nextWeek: "[gələn həftə] dddd [saat] LT",
            lastDay: "[dünən] LT",
            lastWeek: "[keçən həftə] dddd [saat] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s sonra",
            past: "%s əvvəl",
            s: "birneçə saniyə",
            ss: "%d saniyə",
            m: "bir dəqiqə",
            mm: "%d dəqiqə",
            h: "bir saat",
            hh: "%d saat",
            d: "bir gün",
            dd: "%d gün",
            M: "bir ay",
            MM: "%d ay",
            y: "bir il",
            yy: "%d il",
          },
          meridiemParse: /gecə|səhər|gündüz|axşam/,
          isPM: function (e) {
            return /^(gündüz|axşam)$/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "gecə"
              : e < 12
              ? "səhər"
              : e < 17
              ? "gündüz"
              : "axşam";
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
          ordinal: function (e) {
            if (0 === e) return e + "-ıncı";
            var t = e % 10;
            return e + (a[t] || a[(e % 100) - t] || a[e >= 100 ? 100 : null]);
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n, i;
          return "m" === t
            ? a
              ? "хвіліна"
              : "хвіліну"
            : "h" === t
            ? a
              ? "гадзіна"
              : "гадзіну"
            : e +
              " " +
              ((n = +e),
              (i = {
                ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                mm: a ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
                hh: a ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
                dd: "дзень_дні_дзён",
                MM: "месяц_месяцы_месяцаў",
                yy: "год_гады_гадоў",
              }[t].split("_")),
              n % 10 == 1 && n % 100 != 11
                ? i[0]
                : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)
                ? i[1]
                : i[2]);
        }
        e.defineLocale("be", {
          months: {
            format:
              "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split(
                "_"
              ),
            standalone:
              "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split(
                "_"
              ),
          },
          monthsShort:
            "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split(
              "_"
            ),
          weekdays: {
            format:
              "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split(
                "_"
              ),
            standalone:
              "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split(
                "_"
              ),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
          },
          weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
          weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY г.",
            LLL: "D MMMM YYYY г., HH:mm",
            LLLL: "dddd, D MMMM YYYY г., HH:mm",
          },
          calendar: {
            sameDay: "[Сёння ў] LT",
            nextDay: "[Заўтра ў] LT",
            lastDay: "[Учора ў] LT",
            nextWeek: function () {
              return "[У] dddd [ў] LT";
            },
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return "[У мінулую] dddd [ў] LT";
                case 1:
                case 2:
                case 4:
                  return "[У мінулы] dddd [ў] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "праз %s",
            past: "%s таму",
            s: "некалькі секунд",
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: "дзень",
            dd: a,
            M: "месяц",
            MM: a,
            y: "год",
            yy: a,
          },
          meridiemParse: /ночы|раніцы|дня|вечара/,
          isPM: function (e) {
            return /^(дня|вечара)$/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "ночы"
              : e < 12
              ? "раніцы"
              : e < 17
              ? "дня"
              : "вечара";
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
          ordinal: function (e, a) {
            switch (a) {
              case "M":
              case "d":
              case "DDD":
              case "w":
              case "W":
                return (e % 10 != 2 && e % 10 != 3) ||
                  e % 100 == 12 ||
                  e % 100 == 13
                  ? e + "-ы"
                  : e + "-і";
              case "D":
                return e + "-га";
              default:
                return e;
            }
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("bg", {
          months:
            "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split(
              "_"
            ),
          monthsShort: "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split(
            "_"
          ),
          weekdays:
            "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
          weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
          weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[Днес в] LT",
            nextDay: "[Утре в] LT",
            nextWeek: "dddd [в] LT",
            lastDay: "[Вчера в] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return "[В изминалата] dddd [в] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[В изминалия] dddd [в] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "след %s",
            past: "преди %s",
            s: "няколко секунди",
            ss: "%d секунди",
            m: "минута",
            mm: "%d минути",
            h: "час",
            hh: "%d часа",
            d: "ден",
            dd: "%d дни",
            M: "месец",
            MM: "%d месеца",
            y: "година",
            yy: "%d години",
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function (e) {
            var a = e % 10,
              t = e % 100;
            return 0 === e
              ? e + "-ев"
              : 0 === t
              ? e + "-ен"
              : t > 10 && t < 20
              ? e + "-ти"
              : 1 === a
              ? e + "-ви"
              : 2 === a
              ? e + "-ри"
              : 7 === a || 8 === a
              ? e + "-ми"
              : e + "-ти";
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("bm", {
          months:
            "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split(
              "_"
            ),
          monthsShort: "Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split(
            "_"
          ),
          weekdays: "Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
          weekdaysShort: "Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),
          weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "MMMM [tile] D [san] YYYY",
            LLL: "MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
            LLLL: "dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
          },
          calendar: {
            sameDay: "[Bi lɛrɛ] LT",
            nextDay: "[Sini lɛrɛ] LT",
            nextWeek: "dddd [don lɛrɛ] LT",
            lastDay: "[Kunu lɛrɛ] LT",
            lastWeek: "dddd [tɛmɛnen lɛrɛ] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s kɔnɔ",
            past: "a bɛ %s bɔ",
            s: "sanga dama dama",
            ss: "sekondi %d",
            m: "miniti kelen",
            mm: "miniti %d",
            h: "lɛrɛ kelen",
            hh: "lɛrɛ %d",
            d: "tile kelen",
            dd: "tile %d",
            M: "kalo kelen",
            MM: "kalo %d",
            y: "san kelen",
            yy: "san %d",
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "১",
            2: "২",
            3: "৩",
            4: "৪",
            5: "৫",
            6: "৬",
            7: "৭",
            8: "৮",
            9: "৯",
            0: "০",
          },
          t = {
            "১": "1",
            "২": "2",
            "৩": "3",
            "৪": "4",
            "৫": "5",
            "৬": "6",
            "৭": "7",
            "৮": "8",
            "৯": "9",
            "০": "0",
          };
        e.defineLocale("bn", {
          months:
            "জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split(
              "_"
            ),
          monthsShort:
            "জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
          weekdays:
            "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split(
              "_"
            ),
          weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
          weekdaysMin: "রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি".split("_"),
          longDateFormat: {
            LT: "A h:mm সময়",
            LTS: "A h:mm:ss সময়",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm সময়",
            LLLL: "dddd, D MMMM YYYY, A h:mm সময়",
          },
          calendar: {
            sameDay: "[আজ] LT",
            nextDay: "[আগামীকাল] LT",
            nextWeek: "dddd, LT",
            lastDay: "[গতকাল] LT",
            lastWeek: "[গত] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s পরে",
            past: "%s আগে",
            s: "কয়েক সেকেন্ড",
            ss: "%d সেকেন্ড",
            m: "এক মিনিট",
            mm: "%d মিনিট",
            h: "এক ঘন্টা",
            hh: "%d ঘন্টা",
            d: "এক দিন",
            dd: "%d দিন",
            M: "এক মাস",
            MM: "%d মাস",
            y: "এক বছর",
            yy: "%d বছর",
          },
          preparse: function (e) {
            return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              ("রাত" === a && e >= 4) ||
              ("দুপুর" === a && e < 5) ||
              "বিকাল" === a
                ? e + 12
                : e
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "রাত"
              : e < 10
              ? "সকাল"
              : e < 17
              ? "দুপুর"
              : e < 20
              ? "বিকাল"
              : "রাত";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "༡",
            2: "༢",
            3: "༣",
            4: "༤",
            5: "༥",
            6: "༦",
            7: "༧",
            8: "༨",
            9: "༩",
            0: "༠",
          },
          t = {
            "༡": "1",
            "༢": "2",
            "༣": "3",
            "༤": "4",
            "༥": "5",
            "༦": "6",
            "༧": "7",
            "༨": "8",
            "༩": "9",
            "༠": "0",
          };
        e.defineLocale("bo", {
          months:
            "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
              "_"
            ),
          monthsShort:
            "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
              "_"
            ),
          weekdays:
            "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split(
              "_"
            ),
          weekdaysShort:
            "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
          weekdaysMin:
            "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm",
          },
          calendar: {
            sameDay: "[དི་རིང] LT",
            nextDay: "[སང་ཉིན] LT",
            nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
            lastDay: "[ཁ་སང] LT",
            lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s ལ་",
            past: "%s སྔན་ལ",
            s: "ལམ་སང",
            ss: "%d སྐར་ཆ།",
            m: "སྐར་མ་གཅིག",
            mm: "%d སྐར་མ",
            h: "ཆུ་ཚོད་གཅིག",
            hh: "%d ཆུ་ཚོད",
            d: "ཉིན་གཅིག",
            dd: "%d ཉིན་",
            M: "ཟླ་བ་གཅིག",
            MM: "%d ཟླ་བ",
            y: "ལོ་གཅིག",
            yy: "%d ལོ",
          },
          preparse: function (e) {
            return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              ("མཚན་མོ" === a && e >= 4) ||
              ("ཉིན་གུང" === a && e < 5) ||
              "དགོང་དག" === a
                ? e + 12
                : e
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "མཚན་མོ"
              : e < 10
              ? "ཞོགས་ཀས"
              : e < 17
              ? "ཉིན་གུང"
              : e < 20
              ? "དགོང་དག"
              : "མཚན་མོ";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          return (
            e +
            " " +
            (function (e, a) {
              return 2 === a
                ? (function (e) {
                    var a = { m: "v", b: "v", d: "z" };
                    return void 0 === a[e.charAt(0)]
                      ? e
                      : a[e.charAt(0)] + e.substring(1);
                  })(e)
                : e;
            })({ mm: "munutenn", MM: "miz", dd: "devezh" }[t], e)
          );
        }
        e.defineLocale("br", {
          months:
            "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split(
              "_"
            ),
          monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split(
            "_"
          ),
          weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
          weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
          weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "h[e]mm A",
            LTS: "h[e]mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [a viz] MMMM YYYY",
            LLL: "D [a viz] MMMM YYYY h[e]mm A",
            LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A",
          },
          calendar: {
            sameDay: "[Hiziv da] LT",
            nextDay: "[Warc'hoazh da] LT",
            nextWeek: "dddd [da] LT",
            lastDay: "[Dec'h da] LT",
            lastWeek: "dddd [paset da] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "a-benn %s",
            past: "%s 'zo",
            s: "un nebeud segondennoù",
            ss: "%d eilenn",
            m: "ur vunutenn",
            mm: a,
            h: "un eur",
            hh: "%d eur",
            d: "un devezh",
            dd: a,
            M: "ur miz",
            MM: a,
            y: "ur bloaz",
            yy: function (e) {
              switch (
                (function e(a) {
                  return a > 9 ? e(a % 10) : a;
                })(e)
              ) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 9:
                  return e + " bloaz";
                default:
                  return e + " vloaz";
              }
            },
          },
          dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
          ordinal: function (e) {
            return e + (1 === e ? "añ" : "vet");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n = e + " ";
          switch (t) {
            case "ss":
              return (n +=
                1 === e
                  ? "sekunda"
                  : 2 === e || 3 === e || 4 === e
                  ? "sekunde"
                  : "sekundi");
            case "m":
              return a ? "jedna minuta" : "jedne minute";
            case "mm":
              return (n +=
                1 === e
                  ? "minuta"
                  : 2 === e || 3 === e || 4 === e
                  ? "minute"
                  : "minuta");
            case "h":
              return a ? "jedan sat" : "jednog sata";
            case "hh":
              return (n +=
                1 === e
                  ? "sat"
                  : 2 === e || 3 === e || 4 === e
                  ? "sata"
                  : "sati");
            case "dd":
              return (n += 1 === e ? "dan" : "dana");
            case "MM":
              return (n +=
                1 === e
                  ? "mjesec"
                  : 2 === e || 3 === e || 4 === e
                  ? "mjeseca"
                  : "mjeseci");
            case "yy":
              return (n +=
                1 === e
                  ? "godina"
                  : 2 === e || 3 === e || 4 === e
                  ? "godine"
                  : "godina");
          }
        }
        e.defineLocale("bs", {
          months:
            "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split(
              "_"
            ),
          monthsShort:
            "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
              "_"
            ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[jučer u] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                  return "[prošlu] dddd [u] LT";
                case 6:
                  return "[prošle] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prošli] dddd [u] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: "dan",
            dd: a,
            M: "mjesec",
            MM: a,
            y: "godinu",
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ca", {
          months: {
            standalone:
              "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split(
                "_"
              ),
            format:
              "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
                "_"
              ),
            isFormat: /D[oD]?(\s)+MMMM/,
          },
          monthsShort:
            "gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split(
              "_"
            ),
          weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
          weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [de] YYYY",
            ll: "D MMM YYYY",
            LLL: "D MMMM [de] YYYY [a les] H:mm",
            lll: "D MMM YYYY, H:mm",
            LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
            llll: "ddd D MMM YYYY, H:mm",
          },
          calendar: {
            sameDay: function () {
              return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT";
            },
            nextDay: function () {
              return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT";
            },
            nextWeek: function () {
              return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT";
            },
            lastDay: function () {
              return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT";
            },
            lastWeek: function () {
              return (
                "[el] dddd [passat a " +
                (1 !== this.hours() ? "les" : "la") +
                "] LT"
              );
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "d'aquí %s",
            past: "fa %s",
            s: "uns segons",
            ss: "%d segons",
            m: "un minut",
            mm: "%d minuts",
            h: "una hora",
            hh: "%d hores",
            d: "un dia",
            dd: "%d dies",
            M: "un mes",
            MM: "%d mesos",
            y: "un any",
            yy: "%d anys",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
          ordinal: function (e, a) {
            var t =
              1 === e
                ? "r"
                : 2 === e
                ? "n"
                : 3 === e
                ? "r"
                : 4 === e
                ? "t"
                : "è";
            return ("w" !== a && "W" !== a) || (t = "a"), e + t;
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split(
              "_"
            ),
          t = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"),
          n = [
            /^led/i,
            /^úno/i,
            /^bře/i,
            /^dub/i,
            /^kvě/i,
            /^(čvn|červen$|června)/i,
            /^(čvc|červenec|července)/i,
            /^srp/i,
            /^zář/i,
            /^říj/i,
            /^lis/i,
            /^pro/i,
          ],
          i =
            /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;
        function r(e) {
          return e > 1 && e < 5 && 1 != ~~(e / 10);
        }
        function o(e, a, t, n) {
          var i = e + " ";
          switch (t) {
            case "s":
              return a || n ? "pár sekund" : "pár sekundami";
            case "ss":
              return a || n
                ? i + (r(e) ? "sekundy" : "sekund")
                : i + "sekundami";
            case "m":
              return a ? "minuta" : n ? "minutu" : "minutou";
            case "mm":
              return a || n ? i + (r(e) ? "minuty" : "minut") : i + "minutami";
            case "h":
              return a ? "hodina" : n ? "hodinu" : "hodinou";
            case "hh":
              return a || n ? i + (r(e) ? "hodiny" : "hodin") : i + "hodinami";
            case "d":
              return a || n ? "den" : "dnem";
            case "dd":
              return a || n ? i + (r(e) ? "dny" : "dní") : i + "dny";
            case "M":
              return a || n ? "měsíc" : "měsícem";
            case "MM":
              return a || n ? i + (r(e) ? "měsíce" : "měsíců") : i + "měsíci";
            case "y":
              return a || n ? "rok" : "rokem";
            case "yy":
              return a || n ? i + (r(e) ? "roky" : "let") : i + "lety";
          }
        }
        e.defineLocale("cs", {
          months: a,
          monthsShort: t,
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
          monthsShortStrictRegex:
            /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split(
            "_"
          ),
          weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
          weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm",
            l: "D. M. YYYY",
          },
          calendar: {
            sameDay: "[dnes v] LT",
            nextDay: "[zítra v] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[v neděli v] LT";
                case 1:
                case 2:
                  return "[v] dddd [v] LT";
                case 3:
                  return "[ve středu v] LT";
                case 4:
                  return "[ve čtvrtek v] LT";
                case 5:
                  return "[v pátek v] LT";
                case 6:
                  return "[v sobotu v] LT";
              }
            },
            lastDay: "[včera v] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[minulou neděli v] LT";
                case 1:
                case 2:
                  return "[minulé] dddd [v] LT";
                case 3:
                  return "[minulou středu v] LT";
                case 4:
                case 5:
                  return "[minulý] dddd [v] LT";
                case 6:
                  return "[minulou sobotu v] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "před %s",
            s: o,
            ss: o,
            m: o,
            mm: o,
            h: o,
            hh: o,
            d: o,
            dd: o,
            M: o,
            MM: o,
            y: o,
            yy: o,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("cv", {
          months:
            "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split(
              "_"
            ),
          monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split(
            "_"
          ),
          weekdays:
            "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split(
              "_"
            ),
          weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
          weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
            LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
            LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
          },
          calendar: {
            sameDay: "[Паян] LT [сехетре]",
            nextDay: "[Ыран] LT [сехетре]",
            lastDay: "[Ӗнер] LT [сехетре]",
            nextWeek: "[Ҫитес] dddd LT [сехетре]",
            lastWeek: "[Иртнӗ] dddd LT [сехетре]",
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              return (
                e +
                (/сехет$/i.exec(e) ? "рен" : /ҫул$/i.exec(e) ? "тан" : "ран")
              );
            },
            past: "%s каялла",
            s: "пӗр-ик ҫеккунт",
            ss: "%d ҫеккунт",
            m: "пӗр минут",
            mm: "%d минут",
            h: "пӗр сехет",
            hh: "%d сехет",
            d: "пӗр кун",
            dd: "%d кун",
            M: "пӗр уйӑх",
            MM: "%d уйӑх",
            y: "пӗр ҫул",
            yy: "%d ҫул",
          },
          dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
          ordinal: "%d-мӗш",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("cy", {
          months:
            "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split(
              "_"
            ),
          monthsShort:
            "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
          weekdays:
            "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split(
              "_"
            ),
          weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
          weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Heddiw am] LT",
            nextDay: "[Yfory am] LT",
            nextWeek: "dddd [am] LT",
            lastDay: "[Ddoe am] LT",
            lastWeek: "dddd [diwethaf am] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "mewn %s",
            past: "%s yn ôl",
            s: "ychydig eiliadau",
            ss: "%d eiliad",
            m: "munud",
            mm: "%d munud",
            h: "awr",
            hh: "%d awr",
            d: "diwrnod",
            dd: "%d diwrnod",
            M: "mis",
            MM: "%d mis",
            y: "blwyddyn",
            yy: "%d flynedd",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
          ordinal: function (e) {
            var a = "";
            return (
              e > 20
                ? (a =
                    40 === e || 50 === e || 60 === e || 80 === e || 100 === e
                      ? "fed"
                      : "ain")
                : e > 0 &&
                  (a = [
                    "",
                    "af",
                    "il",
                    "ydd",
                    "ydd",
                    "ed",
                    "ed",
                    "ed",
                    "fed",
                    "fed",
                    "fed",
                    "eg",
                    "fed",
                    "eg",
                    "eg",
                    "fed",
                    "eg",
                    "eg",
                    "fed",
                    "eg",
                    "fed",
                  ][e]),
              e + a
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("da", {
          months:
            "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split(
            "_"
          ),
          weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
          weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm",
          },
          calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "på dddd [kl.] LT",
            lastDay: "[i går kl.] LT",
            lastWeek: "[i] dddd[s kl.] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "få sekunder",
            ss: "%d sekunder",
            m: "et minut",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dage",
            M: "en måned",
            MM: "%d måneder",
            y: "et år",
            yy: "%d år",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"],
          };
          return a ? i[t][0] : i[t][1];
        }
        e.defineLocale("de", {
          months:
            "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
              "_"
            ),
          monthsShort:
            "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
              "_"
            ),
          weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]",
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: a,
            mm: "%d Minuten",
            h: a,
            hh: "%d Stunden",
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"],
          };
          return a ? i[t][0] : i[t][1];
        }
        e.defineLocale("de-at", {
          months:
            "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
              "_"
            ),
          monthsShort:
            "Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
              "_"
            ),
          weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]",
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: a,
            mm: "%d Minuten",
            h: a,
            hh: "%d Stunden",
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"],
          };
          return a ? i[t][0] : i[t][1];
        }
        e.defineLocale("de-ch", {
          months:
            "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
              "_"
            ),
          monthsShort:
            "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
              "_"
            ),
          weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]",
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: a,
            mm: "%d Minuten",
            h: a,
            hh: "%d Stunden",
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = [
            "ޖެނުއަރީ",
            "ފެބްރުއަރީ",
            "މާރިޗު",
            "އޭޕްރީލު",
            "މޭ",
            "ޖޫން",
            "ޖުލައި",
            "އޯގަސްޓު",
            "ސެޕްޓެމްބަރު",
            "އޮކްޓޯބަރު",
            "ނޮވެމްބަރު",
            "ޑިސެމްބަރު",
          ],
          t = [
            "އާދިއްތަ",
            "ހޯމަ",
            "އަންގާރަ",
            "ބުދަ",
            "ބުރާސްފަތި",
            "ހުކުރު",
            "ހޮނިހިރު",
          ];
        e.defineLocale("dv", {
          months: a,
          monthsShort: a,
          weekdays: t,
          weekdaysShort: t,
          weekdaysMin: "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/M/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          meridiemParse: /މކ|މފ/,
          isPM: function (e) {
            return "މފ" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "މކ" : "މފ";
          },
          calendar: {
            sameDay: "[މިއަދު] LT",
            nextDay: "[މާދަމާ] LT",
            nextWeek: "dddd LT",
            lastDay: "[އިއްޔެ] LT",
            lastWeek: "[ފާއިތުވި] dddd LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "ތެރޭގައި %s",
            past: "ކުރިން %s",
            s: "ސިކުންތުކޮޅެއް",
            ss: "d% ސިކުންތު",
            m: "މިނިޓެއް",
            mm: "މިނިޓު %d",
            h: "ގަޑިއިރެއް",
            hh: "ގަޑިއިރު %d",
            d: "ދުވަހެއް",
            dd: "ދުވަސް %d",
            M: "މަހެއް",
            MM: "މަސް %d",
            y: "އަހަރެއް",
            yy: "އަހަރު %d",
          },
          preparse: function (e) {
            return e.replace(/،/g, ",");
          },
          postformat: function (e) {
            return e.replace(/,/g, "،");
          },
          week: { dow: 7, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("el", {
          monthsNominativeEl:
            "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split(
              "_"
            ),
          monthsGenitiveEl:
            "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split(
              "_"
            ),
          months: function (e, a) {
            return e
              ? "string" == typeof a &&
                /D/.test(a.substring(0, a.indexOf("MMMM")))
                ? this._monthsGenitiveEl[e.month()]
                : this._monthsNominativeEl[e.month()]
              : this._monthsNominativeEl;
          },
          monthsShort:
            "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
          weekdays:
            "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
          weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
          weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
          meridiem: function (e, a, t) {
            return e > 11 ? (t ? "μμ" : "ΜΜ") : t ? "πμ" : "ΠΜ";
          },
          isPM: function (e) {
            return "μ" === (e + "").toLowerCase()[0];
          },
          meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendarEl: {
            sameDay: "[Σήμερα {}] LT",
            nextDay: "[Αύριο {}] LT",
            nextWeek: "dddd [{}] LT",
            lastDay: "[Χθες {}] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 6:
                  return "[το προηγούμενο] dddd [{}] LT";
                default:
                  return "[την προηγούμενη] dddd [{}] LT";
              }
            },
            sameElse: "L",
          },
          calendar: function (e, a) {
            var t,
              n = this._calendarEl[e],
              i = a && a.hours();
            return (
              ((t = n) instanceof Function ||
                "[object Function]" === Object.prototype.toString.call(t)) &&
                (n = n.apply(a)),
              n.replace("{}", i % 12 == 1 ? "στη" : "στις")
            );
          },
          relativeTime: {
            future: "σε %s",
            past: "%s πριν",
            s: "λίγα δευτερόλεπτα",
            ss: "%d δευτερόλεπτα",
            m: "ένα λεπτό",
            mm: "%d λεπτά",
            h: "μία ώρα",
            hh: "%d ώρες",
            d: "μία μέρα",
            dd: "%d μέρες",
            M: "ένας μήνας",
            MM: "%d μήνες",
            y: "ένας χρόνος",
            yy: "%d χρόνια",
          },
          dayOfMonthOrdinalParse: /\d{1,2}η/,
          ordinal: "%dη",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-SG", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-au", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-ca", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "YYYY-MM-DD",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-gb", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-ie", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-il", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("en-nz", {
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("eo", {
          months:
            "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split(
            "_"
          ),
          weekdaysShort: "dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),
          weekdaysMin: "di_lu_ma_me_ĵa_ve_sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D[-a de] MMMM, YYYY",
            LLL: "D[-a de] MMMM, YYYY HH:mm",
            LLLL: "dddd, [la] D[-a de] MMMM, YYYY HH:mm",
          },
          meridiemParse: /[ap]\.t\.m/i,
          isPM: function (e) {
            return "p" === e.charAt(0).toLowerCase();
          },
          meridiem: function (e, a, t) {
            return e > 11 ? (t ? "p.t.m." : "P.T.M.") : t ? "a.t.m." : "A.T.M.";
          },
          calendar: {
            sameDay: "[Hodiaŭ je] LT",
            nextDay: "[Morgaŭ je] LT",
            nextWeek: "dddd [je] LT",
            lastDay: "[Hieraŭ je] LT",
            lastWeek: "[pasinta] dddd [je] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "post %s",
            past: "antaŭ %s",
            s: "sekundoj",
            ss: "%d sekundoj",
            m: "minuto",
            mm: "%d minutoj",
            h: "horo",
            hh: "%d horoj",
            d: "tago",
            dd: "%d tagoj",
            M: "monato",
            MM: "%d monatoj",
            y: "jaro",
            yy: "%d jaroj",
          },
          dayOfMonthOrdinalParse: /\d{1,2}a/,
          ordinal: "%da",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
              "_"
            ),
          t = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
          n = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
          ],
          i =
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
        e.defineLocale("es", {
          months:
            "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex:
            /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays:
            "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm",
          },
          calendar: {
            sameDay: function () {
              return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextDay: function () {
              return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextWeek: function () {
              return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastDay: function () {
              return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastWeek: function () {
              return (
                "[el] dddd [pasado a la" +
                (1 !== this.hours() ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
              "_"
            ),
          t = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
          n = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
          ],
          i =
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
        e.defineLocale("es-do", {
          months:
            "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex:
            /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays:
            "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY h:mm A",
            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A",
          },
          calendar: {
            sameDay: function () {
              return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextDay: function () {
              return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextWeek: function () {
              return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastDay: function () {
              return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastWeek: function () {
              return (
                "[el] dddd [pasado a la" +
                (1 !== this.hours() ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
              "_"
            ),
          t = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
          n = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
          ],
          i =
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
        e.defineLocale("es-us", {
          months:
            "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex:
            /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays:
            "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "MM/DD/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY h:mm A",
            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A",
          },
          calendar: {
            sameDay: function () {
              return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextDay: function () {
              return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            nextWeek: function () {
              return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastDay: function () {
              return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
            },
            lastWeek: function () {
              return (
                "[el] dddd [pasado a la" +
                (1 !== this.hours() ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            s: ["mõne sekundi", "mõni sekund", "paar sekundit"],
            ss: [e + "sekundi", e + "sekundit"],
            m: ["ühe minuti", "üks minut"],
            mm: [e + " minuti", e + " minutit"],
            h: ["ühe tunni", "tund aega", "üks tund"],
            hh: [e + " tunni", e + " tundi"],
            d: ["ühe päeva", "üks päev"],
            M: ["kuu aja", "kuu aega", "üks kuu"],
            MM: [e + " kuu", e + " kuud"],
            y: ["ühe aasta", "aasta", "üks aasta"],
            yy: [e + " aasta", e + " aastat"],
          };
          return a ? (i[t][2] ? i[t][2] : i[t][1]) : n ? i[t][0] : i[t][1];
        }
        e.defineLocale("et", {
          months:
            "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split(
              "_"
            ),
          monthsShort:
            "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split(
              "_"
            ),
          weekdays:
            "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split(
              "_"
            ),
          weekdaysShort: "P_E_T_K_N_R_L".split("_"),
          weekdaysMin: "P_E_T_K_N_R_L".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[Täna,] LT",
            nextDay: "[Homme,] LT",
            nextWeek: "[Järgmine] dddd LT",
            lastDay: "[Eile,] LT",
            lastWeek: "[Eelmine] dddd LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s pärast",
            past: "%s tagasi",
            s: a,
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: a,
            dd: "%d päeva",
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("eu", {
          months:
            "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split(
              "_"
            ),
          monthsShort:
            "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split(
              "_"
            ),
          weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
          weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY[ko] MMMM[ren] D[a]",
            LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
            LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
            l: "YYYY-M-D",
            ll: "YYYY[ko] MMM D[a]",
            lll: "YYYY[ko] MMM D[a] HH:mm",
            llll: "ddd, YYYY[ko] MMM D[a] HH:mm",
          },
          calendar: {
            sameDay: "[gaur] LT[etan]",
            nextDay: "[bihar] LT[etan]",
            nextWeek: "dddd LT[etan]",
            lastDay: "[atzo] LT[etan]",
            lastWeek: "[aurreko] dddd LT[etan]",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s barru",
            past: "duela %s",
            s: "segundo batzuk",
            ss: "%d segundo",
            m: "minutu bat",
            mm: "%d minutu",
            h: "ordu bat",
            hh: "%d ordu",
            d: "egun bat",
            dd: "%d egun",
            M: "hilabete bat",
            MM: "%d hilabete",
            y: "urte bat",
            yy: "%d urte",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "۱",
            2: "۲",
            3: "۳",
            4: "۴",
            5: "۵",
            6: "۶",
            7: "۷",
            8: "۸",
            9: "۹",
            0: "۰",
          },
          t = {
            "۱": "1",
            "۲": "2",
            "۳": "3",
            "۴": "4",
            "۵": "5",
            "۶": "6",
            "۷": "7",
            "۸": "8",
            "۹": "9",
            "۰": "0",
          };
        e.defineLocale("fa", {
          months:
            "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split(
              "_"
            ),
          monthsShort:
            "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split(
              "_"
            ),
          weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split(
            "_"
          ),
          weekdaysShort:
            "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
          weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          meridiemParse: /قبل از ظهر|بعد از ظهر/,
          isPM: function (e) {
            return /بعد از ظهر/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "قبل از ظهر" : "بعد از ظهر";
          },
          calendar: {
            sameDay: "[امروز ساعت] LT",
            nextDay: "[فردا ساعت] LT",
            nextWeek: "dddd [ساعت] LT",
            lastDay: "[دیروز ساعت] LT",
            lastWeek: "dddd [پیش] [ساعت] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "در %s",
            past: "%s پیش",
            s: "چند ثانیه",
            ss: "ثانیه d%",
            m: "یک دقیقه",
            mm: "%d دقیقه",
            h: "یک ساعت",
            hh: "%d ساعت",
            d: "یک روز",
            dd: "%d روز",
            M: "یک ماه",
            MM: "%d ماه",
            y: "یک سال",
            yy: "%d سال",
          },
          preparse: function (e) {
            return e
              .replace(/[۰-۹]/g, function (e) {
                return t[e];
              })
              .replace(/،/g, ",");
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return a[e];
              })
              .replace(/,/g, "،");
          },
          dayOfMonthOrdinalParse: /\d{1,2}م/,
          ordinal: "%dم",
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(
              " "
            ),
          t = [
            "nolla",
            "yhden",
            "kahden",
            "kolmen",
            "neljän",
            "viiden",
            "kuuden",
            a[7],
            a[8],
            a[9],
          ];
        function n(e, n, i, r) {
          var o = "";
          switch (i) {
            case "s":
              return r ? "muutaman sekunnin" : "muutama sekunti";
            case "ss":
              return r ? "sekunnin" : "sekuntia";
            case "m":
              return r ? "minuutin" : "minuutti";
            case "mm":
              o = r ? "minuutin" : "minuuttia";
              break;
            case "h":
              return r ? "tunnin" : "tunti";
            case "hh":
              o = r ? "tunnin" : "tuntia";
              break;
            case "d":
              return r ? "päivän" : "päivä";
            case "dd":
              o = r ? "päivän" : "päivää";
              break;
            case "M":
              return r ? "kuukauden" : "kuukausi";
            case "MM":
              o = r ? "kuukauden" : "kuukautta";
              break;
            case "y":
              return r ? "vuoden" : "vuosi";
            case "yy":
              o = r ? "vuoden" : "vuotta";
          }
          return (o =
            (function (e, n) {
              return e < 10 ? (n ? t[e] : a[e]) : e;
            })(e, r) +
            " " +
            o);
        }
        e.defineLocale("fi", {
          months:
            "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split(
              "_"
            ),
          monthsShort:
            "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split(
              "_"
            ),
          weekdays:
            "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split(
              "_"
            ),
          weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
          weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "Do MMMM[ta] YYYY",
            LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
            LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
            l: "D.M.YYYY",
            ll: "Do MMM YYYY",
            lll: "Do MMM YYYY, [klo] HH.mm",
            llll: "ddd, Do MMM YYYY, [klo] HH.mm",
          },
          calendar: {
            sameDay: "[tänään] [klo] LT",
            nextDay: "[huomenna] [klo] LT",
            nextWeek: "dddd [klo] LT",
            lastDay: "[eilen] [klo] LT",
            lastWeek: "[viime] dddd[na] [klo] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s päästä",
            past: "%s sitten",
            s: n,
            ss: n,
            m: n,
            mm: n,
            h: n,
            hh: n,
            d: n,
            dd: n,
            M: n,
            MM: n,
            y: n,
            yy: n,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("fo", {
          months:
            "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
            "_"
          ),
          weekdays:
            "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split(
              "_"
            ),
          weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
          weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D. MMMM, YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Í dag kl.] LT",
            nextDay: "[Í morgin kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[Í gjár kl.] LT",
            lastWeek: "[síðstu] dddd [kl] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "um %s",
            past: "%s síðani",
            s: "fá sekund",
            ss: "%d sekundir",
            m: "ein minuttur",
            mm: "%d minuttir",
            h: "ein tími",
            hh: "%d tímar",
            d: "ein dagur",
            dd: "%d dagar",
            M: "ein mánaður",
            MM: "%d mánaðir",
            y: "eitt ár",
            yy: "%d ár",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("fr", {
          months:
            "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
              "_"
            ),
          monthsShort:
            "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
          ordinal: function (e, a) {
            switch (a) {
              case "D":
                return e + (1 === e ? "er" : "");
              default:
              case "M":
              case "Q":
              case "DDD":
              case "d":
                return e + (1 === e ? "er" : "e");
              case "w":
              case "W":
                return e + (1 === e ? "re" : "e");
            }
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("fr-ca", {
          months:
            "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
              "_"
            ),
          monthsShort:
            "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function (e, a) {
            switch (a) {
              default:
              case "M":
              case "Q":
              case "D":
              case "DDD":
              case "d":
                return e + (1 === e ? "er" : "e");
              case "w":
              case "W":
                return e + (1 === e ? "re" : "e");
            }
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("fr-ch", {
          months:
            "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
              "_"
            ),
          monthsShort:
            "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function (e, a) {
            switch (a) {
              default:
              case "M":
              case "Q":
              case "D":
              case "DDD":
              case "d":
                return e + (1 === e ? "er" : "e");
              case "w":
              case "W":
                return e + (1 === e ? "re" : "e");
            }
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split(
              "_"
            ),
          t = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
        e.defineLocale("fy", {
          months:
            "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsParseExact: !0,
          weekdays:
            "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
          weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
          weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[hjoed om] LT",
            nextDay: "[moarn om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[juster om] LT",
            lastWeek: "[ôfrûne] dddd [om] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "oer %s",
            past: "%s lyn",
            s: "in pear sekonden",
            ss: "%d sekonden",
            m: "ien minút",
            mm: "%d minuten",
            h: "ien oere",
            hh: "%d oeren",
            d: "ien dei",
            dd: "%d dagen",
            M: "ien moanne",
            MM: "%d moannen",
            y: "ien jier",
            yy: "%d jierren",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ga", {
          months: [
            "Eanáir",
            "Feabhra",
            "Márta",
            "Aibreán",
            "Bealtaine",
            "Méitheamh",
            "Iúil",
            "Lúnasa",
            "Meán Fómhair",
            "Deaireadh Fómhair",
            "Samhain",
            "Nollaig",
          ],
          monthsShort: [
            "Eaná",
            "Feab",
            "Márt",
            "Aibr",
            "Beal",
            "Méit",
            "Iúil",
            "Lúna",
            "Meán",
            "Deai",
            "Samh",
            "Noll",
          ],
          monthsParseExact: !0,
          weekdays: [
            "Dé Domhnaigh",
            "Dé Luain",
            "Dé Máirt",
            "Dé Céadaoin",
            "Déardaoin",
            "Dé hAoine",
            "Dé Satharn",
          ],
          weekdaysShort: ["Dom", "Lua", "Mái", "Céa", "Déa", "hAo", "Sat"],
          weekdaysMin: ["Do", "Lu", "Má", "Ce", "Dé", "hA", "Sa"],
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Inniu ag] LT",
            nextDay: "[Amárach ag] LT",
            nextWeek: "dddd [ag] LT",
            lastDay: "[Inné aig] LT",
            lastWeek: "dddd [seo caite] [ag] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "i %s",
            past: "%s ó shin",
            s: "cúpla soicind",
            ss: "%d soicind",
            m: "nóiméad",
            mm: "%d nóiméad",
            h: "uair an chloig",
            hh: "%d uair an chloig",
            d: "lá",
            dd: "%d lá",
            M: "mí",
            MM: "%d mí",
            y: "bliain",
            yy: "%d bliain",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function (e) {
            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("gd", {
          months: [
            "Am Faoilleach",
            "An Gearran",
            "Am Màrt",
            "An Giblean",
            "An Cèitean",
            "An t-Ògmhios",
            "An t-Iuchar",
            "An Lùnastal",
            "An t-Sultain",
            "An Dàmhair",
            "An t-Samhain",
            "An Dùbhlachd",
          ],
          monthsShort: [
            "Faoi",
            "Gear",
            "Màrt",
            "Gibl",
            "Cèit",
            "Ògmh",
            "Iuch",
            "Lùn",
            "Sult",
            "Dàmh",
            "Samh",
            "Dùbh",
          ],
          monthsParseExact: !0,
          weekdays: [
            "Didòmhnaich",
            "Diluain",
            "Dimàirt",
            "Diciadain",
            "Diardaoin",
            "Dihaoine",
            "Disathairne",
          ],
          weekdaysShort: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
          weekdaysMin: ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"],
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[An-diugh aig] LT",
            nextDay: "[A-màireach aig] LT",
            nextWeek: "dddd [aig] LT",
            lastDay: "[An-dè aig] LT",
            lastWeek: "dddd [seo chaidh] [aig] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "ann an %s",
            past: "bho chionn %s",
            s: "beagan diogan",
            ss: "%d diogan",
            m: "mionaid",
            mm: "%d mionaidean",
            h: "uair",
            hh: "%d uairean",
            d: "latha",
            dd: "%d latha",
            M: "mìos",
            MM: "%d mìosan",
            y: "bliadhna",
            yy: "%d bliadhna",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function (e) {
            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("gl", {
          months:
            "xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split(
              "_"
            ),
          monthsShort:
            "xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "domingo_luns_martes_mércores_xoves_venres_sábado".split(
            "_"
          ),
          weekdaysShort: "dom._lun._mar._mér._xov._ven._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mé_xo_ve_sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm",
          },
          calendar: {
            sameDay: function () {
              return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT";
            },
            nextDay: function () {
              return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT";
            },
            nextWeek: function () {
              return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT";
            },
            lastDay: function () {
              return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT";
            },
            lastWeek: function () {
              return (
                "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT"
              );
            },
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              return 0 === e.indexOf("un") ? "n" + e : "en " + e;
            },
            past: "hai %s",
            s: "uns segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "unha hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un ano",
            yy: "%d anos",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            s: ["thodde secondanim", "thodde second"],
            ss: [e + " secondanim", e + " second"],
            m: ["eka mintan", "ek minute"],
            mm: [e + " mintanim", e + " mintam"],
            h: ["eka voran", "ek vor"],
            hh: [e + " voranim", e + " voram"],
            d: ["eka disan", "ek dis"],
            dd: [e + " disanim", e + " dis"],
            M: ["eka mhoinean", "ek mhoino"],
            MM: [e + " mhoineanim", e + " mhoine"],
            y: ["eka vorsan", "ek voros"],
            yy: [e + " vorsanim", e + " vorsam"],
          };
          return a ? i[t][0] : i[t][1];
        }
        e.defineLocale("gom-latn", {
          months:
            "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split(
              "_"
            ),
          monthsShort:
            "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son'var".split(
            "_"
          ),
          weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
          weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "A h:mm [vazta]",
            LTS: "A h:mm:ss [vazta]",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY A h:mm [vazta]",
            LLLL: "dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]",
            llll: "ddd, D MMM YYYY, A h:mm [vazta]",
          },
          calendar: {
            sameDay: "[Aiz] LT",
            nextDay: "[Faleam] LT",
            nextWeek: "[Ieta to] dddd[,] LT",
            lastDay: "[Kal] LT",
            lastWeek: "[Fatlo] dddd[,] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s",
            past: "%s adim",
            s: a,
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er)/,
          ordinal: function (e, a) {
            switch (a) {
              case "D":
                return e + "er";
              default:
              case "M":
              case "Q":
              case "DDD":
              case "d":
              case "w":
              case "W":
                return e;
            }
          },
          week: { dow: 1, doy: 4 },
          meridiemParse: /rati|sokalli|donparam|sanje/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "rati" === a
                ? e < 4
                  ? e
                  : e + 12
                : "sokalli" === a
                ? e
                : "donparam" === a
                ? e > 12
                  ? e
                  : e + 12
                : "sanje" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "rati"
              : e < 12
              ? "sokalli"
              : e < 16
              ? "donparam"
              : e < 20
              ? "sanje"
              : "rati";
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "૧",
            2: "૨",
            3: "૩",
            4: "૪",
            5: "૫",
            6: "૬",
            7: "૭",
            8: "૮",
            9: "૯",
            0: "૦",
          },
          t = {
            "૧": "1",
            "૨": "2",
            "૩": "3",
            "૪": "4",
            "૫": "5",
            "૬": "6",
            "૭": "7",
            "૮": "8",
            "૯": "9",
            "૦": "0",
          };
        e.defineLocale("gu", {
          months:
            "જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split(
              "_"
            ),
          monthsShort:
            "જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),
          weekdaysShort: "રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),
          weekdaysMin: "ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),
          longDateFormat: {
            LT: "A h:mm વાગ્યે",
            LTS: "A h:mm:ss વાગ્યે",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm વાગ્યે",
            LLLL: "dddd, D MMMM YYYY, A h:mm વાગ્યે",
          },
          calendar: {
            sameDay: "[આજ] LT",
            nextDay: "[કાલે] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ગઇકાલે] LT",
            lastWeek: "[પાછલા] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s મા",
            past: "%s પેહલા",
            s: "અમુક પળો",
            ss: "%d સેકંડ",
            m: "એક મિનિટ",
            mm: "%d મિનિટ",
            h: "એક કલાક",
            hh: "%d કલાક",
            d: "એક દિવસ",
            dd: "%d દિવસ",
            M: "એક મહિનો",
            MM: "%d મહિનો",
            y: "એક વર્ષ",
            yy: "%d વર્ષ",
          },
          preparse: function (e) {
            return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "રાત" === a
                ? e < 4
                  ? e
                  : e + 12
                : "સવાર" === a
                ? e
                : "બપોર" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "સાંજ" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "રાત"
              : e < 10
              ? "સવાર"
              : e < 17
              ? "બપોર"
              : e < 20
              ? "સાંજ"
              : "રાત";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("he", {
          months:
            "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split(
              "_"
            ),
          monthsShort:
            "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split(
              "_"
            ),
          weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
          weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
          weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [ב]MMMM YYYY",
            LLL: "D [ב]MMMM YYYY HH:mm",
            LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
            l: "D/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[היום ב־]LT",
            nextDay: "[מחר ב־]LT",
            nextWeek: "dddd [בשעה] LT",
            lastDay: "[אתמול ב־]LT",
            lastWeek: "[ביום] dddd [האחרון בשעה] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "בעוד %s",
            past: "לפני %s",
            s: "מספר שניות",
            ss: "%d שניות",
            m: "דקה",
            mm: "%d דקות",
            h: "שעה",
            hh: function (e) {
              return 2 === e ? "שעתיים" : e + " שעות";
            },
            d: "יום",
            dd: function (e) {
              return 2 === e ? "יומיים" : e + " ימים";
            },
            M: "חודש",
            MM: function (e) {
              return 2 === e ? "חודשיים" : e + " חודשים";
            },
            y: "שנה",
            yy: function (e) {
              return 2 === e
                ? "שנתיים"
                : e % 10 == 0 && 10 !== e
                ? e + " שנה"
                : e + " שנים";
            },
          },
          meridiemParse:
            /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
          isPM: function (e) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 5
              ? "לפנות בוקר"
              : e < 10
              ? "בבוקר"
              : e < 12
              ? t
                ? 'לפנה"צ'
                : "לפני הצהריים"
              : e < 18
              ? t
                ? 'אחה"צ'
                : "אחרי הצהריים"
              : "בערב";
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "१",
            2: "२",
            3: "३",
            4: "४",
            5: "५",
            6: "६",
            7: "७",
            8: "८",
            9: "९",
            0: "०",
          },
          t = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0",
          };
        e.defineLocale("hi", {
          months:
            "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split(
              "_"
            ),
          monthsShort:
            "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
          weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
          weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
          longDateFormat: {
            LT: "A h:mm बजे",
            LTS: "A h:mm:ss बजे",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm बजे",
            LLLL: "dddd, D MMMM YYYY, A h:mm बजे",
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[कल] LT",
            nextWeek: "dddd, LT",
            lastDay: "[कल] LT",
            lastWeek: "[पिछले] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s में",
            past: "%s पहले",
            s: "कुछ ही क्षण",
            ss: "%d सेकंड",
            m: "एक मिनट",
            mm: "%d मिनट",
            h: "एक घंटा",
            hh: "%d घंटे",
            d: "एक दिन",
            dd: "%d दिन",
            M: "एक महीने",
            MM: "%d महीने",
            y: "एक वर्ष",
            yy: "%d वर्ष",
          },
          preparse: function (e) {
            return e.replace(/[१२३४५६७८९०]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /रात|सुबह|दोपहर|शाम/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "रात" === a
                ? e < 4
                  ? e
                  : e + 12
                : "सुबह" === a
                ? e
                : "दोपहर" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "शाम" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "रात"
              : e < 10
              ? "सुबह"
              : e < 17
              ? "दोपहर"
              : e < 20
              ? "शाम"
              : "रात";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n = e + " ";
          switch (t) {
            case "ss":
              return (n +=
                1 === e
                  ? "sekunda"
                  : 2 === e || 3 === e || 4 === e
                  ? "sekunde"
                  : "sekundi");
            case "m":
              return a ? "jedna minuta" : "jedne minute";
            case "mm":
              return (n +=
                1 === e
                  ? "minuta"
                  : 2 === e || 3 === e || 4 === e
                  ? "minute"
                  : "minuta");
            case "h":
              return a ? "jedan sat" : "jednog sata";
            case "hh":
              return (n +=
                1 === e
                  ? "sat"
                  : 2 === e || 3 === e || 4 === e
                  ? "sata"
                  : "sati");
            case "dd":
              return (n += 1 === e ? "dan" : "dana");
            case "MM":
              return (n +=
                1 === e
                  ? "mjesec"
                  : 2 === e || 3 === e || 4 === e
                  ? "mjeseca"
                  : "mjeseci");
            case "yy":
              return (n +=
                1 === e
                  ? "godina"
                  : 2 === e || 3 === e || 4 === e
                  ? "godine"
                  : "godina");
          }
        }
        e.defineLocale("hr", {
          months: {
            format:
              "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split(
                "_"
              ),
            standalone:
              "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split(
                "_"
              ),
          },
          monthsShort:
            "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
              "_"
            ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[jučer u] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                  return "[prošlu] dddd [u] LT";
                case 6:
                  return "[prošle] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prošli] dddd [u] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: "dan",
            dd: a,
            M: "mjesec",
            MM: a,
            y: "godinu",
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
          "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(
            " "
          );
        function t(e, a, t, n) {
          var i = e;
          switch (t) {
            case "s":
              return n || a ? "néhány másodperc" : "néhány másodperce";
            case "ss":
              return i + (n || a) ? " másodperc" : " másodperce";
            case "m":
              return "egy" + (n || a ? " perc" : " perce");
            case "mm":
              return i + (n || a ? " perc" : " perce");
            case "h":
              return "egy" + (n || a ? " óra" : " órája");
            case "hh":
              return i + (n || a ? " óra" : " órája");
            case "d":
              return "egy" + (n || a ? " nap" : " napja");
            case "dd":
              return i + (n || a ? " nap" : " napja");
            case "M":
              return "egy" + (n || a ? " hónap" : " hónapja");
            case "MM":
              return i + (n || a ? " hónap" : " hónapja");
            case "y":
              return "egy" + (n || a ? " év" : " éve");
            case "yy":
              return i + (n || a ? " év" : " éve");
          }
          return "";
        }
        function n(e) {
          return (e ? "" : "[múlt] ") + "[" + a[this.day()] + "] LT[-kor]";
        }
        e.defineLocale("hu", {
          months:
            "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split(
              "_"
            ),
          monthsShort:
            "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
          weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split(
            "_"
          ),
          weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
          weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "YYYY.MM.DD.",
            LL: "YYYY. MMMM D.",
            LLL: "YYYY. MMMM D. H:mm",
            LLLL: "YYYY. MMMM D., dddd H:mm",
          },
          meridiemParse: /de|du/i,
          isPM: function (e) {
            return "u" === e.charAt(1).toLowerCase();
          },
          meridiem: function (e, a, t) {
            return e < 12 ? (!0 === t ? "de" : "DE") : !0 === t ? "du" : "DU";
          },
          calendar: {
            sameDay: "[ma] LT[-kor]",
            nextDay: "[holnap] LT[-kor]",
            nextWeek: function () {
              return n.call(this, !0);
            },
            lastDay: "[tegnap] LT[-kor]",
            lastWeek: function () {
              return n.call(this, !1);
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "%s múlva",
            past: "%s",
            s: t,
            ss: t,
            m: t,
            mm: t,
            h: t,
            hh: t,
            d: t,
            dd: t,
            M: t,
            MM: t,
            y: t,
            yy: t,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("hy-am", {
          months: {
            format:
              "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split(
                "_"
              ),
            standalone:
              "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split(
                "_"
              ),
          },
          monthsShort: "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split(
            "_"
          ),
          weekdays:
            "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split(
              "_"
            ),
          weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
          weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY թ.",
            LLL: "D MMMM YYYY թ., HH:mm",
            LLLL: "dddd, D MMMM YYYY թ., HH:mm",
          },
          calendar: {
            sameDay: "[այսօր] LT",
            nextDay: "[վաղը] LT",
            lastDay: "[երեկ] LT",
            nextWeek: function () {
              return "dddd [օրը ժամը] LT";
            },
            lastWeek: function () {
              return "[անցած] dddd [օրը ժամը] LT";
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "%s հետո",
            past: "%s առաջ",
            s: "մի քանի վայրկյան",
            ss: "%d վայրկյան",
            m: "րոպե",
            mm: "%d րոպե",
            h: "ժամ",
            hh: "%d ժամ",
            d: "օր",
            dd: "%d օր",
            M: "ամիս",
            MM: "%d ամիս",
            y: "տարի",
            yy: "%d տարի",
          },
          meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
          isPM: function (e) {
            return /^(ցերեկվա|երեկոյան)$/.test(e);
          },
          meridiem: function (e) {
            return e < 4
              ? "գիշերվա"
              : e < 12
              ? "առավոտվա"
              : e < 17
              ? "ցերեկվա"
              : "երեկոյան";
          },
          dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
          ordinal: function (e, a) {
            switch (a) {
              case "DDD":
              case "w":
              case "W":
              case "DDDo":
                return 1 === e ? e + "-ին" : e + "-րդ";
              default:
                return e;
            }
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("id", {
          months:
            "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
          weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
          weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm",
          },
          meridiemParse: /pagi|siang|sore|malam/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "pagi" === a
                ? e
                : "siang" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "sore" === a || "malam" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 11
              ? "pagi"
              : e < 15
              ? "siang"
              : e < 19
              ? "sore"
              : "malam";
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Besok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kemarin pukul] LT",
            lastWeek: "dddd [lalu pukul] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lalu",
            s: "beberapa detik",
            ss: "%d detik",
            m: "semenit",
            mm: "%d menit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e) {
          return e % 100 == 11 || e % 10 != 1;
        }
        function t(e, t, n, i) {
          var r = e + " ";
          switch (n) {
            case "s":
              return t || i ? "nokkrar sekúndur" : "nokkrum sekúndum";
            case "ss":
              return a(e)
                ? r + (t || i ? "sekúndur" : "sekúndum")
                : r + "sekúnda";
            case "m":
              return t ? "mínúta" : "mínútu";
            case "mm":
              return a(e)
                ? r + (t || i ? "mínútur" : "mínútum")
                : t
                ? r + "mínúta"
                : r + "mínútu";
            case "hh":
              return a(e)
                ? r + (t || i ? "klukkustundir" : "klukkustundum")
                : r + "klukkustund";
            case "d":
              return t ? "dagur" : i ? "dag" : "degi";
            case "dd":
              return a(e)
                ? t
                  ? r + "dagar"
                  : r + (i ? "daga" : "dögum")
                : t
                ? r + "dagur"
                : r + (i ? "dag" : "degi");
            case "M":
              return t ? "mánuður" : i ? "mánuð" : "mánuði";
            case "MM":
              return a(e)
                ? t
                  ? r + "mánuðir"
                  : r + (i ? "mánuði" : "mánuðum")
                : t
                ? r + "mánuður"
                : r + (i ? "mánuð" : "mánuði");
            case "y":
              return t || i ? "ár" : "ári";
            case "yy":
              return a(e)
                ? r + (t || i ? "ár" : "árum")
                : r + (t || i ? "ár" : "ári");
          }
        }
        e.defineLocale("is", {
          months:
            "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split(
            "_"
          ),
          weekdays:
            "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split(
              "_"
            ),
          weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
          weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd, D. MMMM YYYY [kl.] H:mm",
          },
          calendar: {
            sameDay: "[í dag kl.] LT",
            nextDay: "[á morgun kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[í gær kl.] LT",
            lastWeek: "[síðasta] dddd [kl.] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "eftir %s",
            past: "fyrir %s síðan",
            s: t,
            ss: t,
            m: t,
            mm: t,
            h: "klukkustund",
            hh: t,
            d: t,
            dd: t,
            M: t,
            MM: t,
            y: t,
            yy: t,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("it", {
          months:
            "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
              "_"
            ),
          monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split(
            "_"
          ),
          weekdays:
            "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split(
              "_"
            ),
          weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
          weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Oggi alle] LT",
            nextDay: "[Domani alle] LT",
            nextWeek: "dddd [alle] LT",
            lastDay: "[Ieri alle] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[la scorsa] dddd [alle] LT";
                default:
                  return "[lo scorso] dddd [alle] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
            },
            past: "%s fa",
            s: "alcuni secondi",
            ss: "%d secondi",
            m: "un minuto",
            mm: "%d minuti",
            h: "un'ora",
            hh: "%d ore",
            d: "un giorno",
            dd: "%d giorni",
            M: "un mese",
            MM: "%d mesi",
            y: "un anno",
            yy: "%d anni",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("it-ch", {
          months:
            "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
              "_"
            ),
          monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split(
            "_"
          ),
          weekdays:
            "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split(
              "_"
            ),
          weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
          weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Oggi alle] LT",
            nextDay: "[Domani alle] LT",
            nextWeek: "dddd [alle] LT",
            lastDay: "[Ieri alle] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[la scorsa] dddd [alle] LT";
                default:
                  return "[lo scorso] dddd [alle] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
            },
            past: "%s fa",
            s: "alcuni secondi",
            ss: "%d secondi",
            m: "un minuto",
            mm: "%d minuti",
            h: "un'ora",
            hh: "%d ore",
            d: "un giorno",
            dd: "%d giorni",
            M: "un mese",
            MM: "%d mesi",
            y: "un anno",
            yy: "%d anni",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ja", {
          months:
            "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
              "_"
            ),
          monthsShort:
            "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
          weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split(
            "_"
          ),
          weekdaysShort: "日_月_火_水_木_金_土".split("_"),
          weekdaysMin: "日_月_火_水_木_金_土".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY年M月D日",
            LLL: "YYYY年M月D日 HH:mm",
            LLLL: "YYYY年M月D日 dddd HH:mm",
            l: "YYYY/MM/DD",
            ll: "YYYY年M月D日",
            lll: "YYYY年M月D日 HH:mm",
            llll: "YYYY年M月D日(ddd) HH:mm",
          },
          meridiemParse: /午前|午後/i,
          isPM: function (e) {
            return "午後" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "午前" : "午後";
          },
          calendar: {
            sameDay: "[今日] LT",
            nextDay: "[明日] LT",
            nextWeek: function (e) {
              return e.week() < this.week() ? "[来週]dddd LT" : "dddd LT";
            },
            lastDay: "[昨日] LT",
            lastWeek: function (e) {
              return this.week() < e.week() ? "[先週]dddd LT" : "dddd LT";
            },
            sameElse: "L",
          },
          dayOfMonthOrdinalParse: /\d{1,2}日/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "日";
              default:
                return e;
            }
          },
          relativeTime: {
            future: "%s後",
            past: "%s前",
            s: "数秒",
            ss: "%d秒",
            m: "1分",
            mm: "%d分",
            h: "1時間",
            hh: "%d時間",
            d: "1日",
            dd: "%d日",
            M: "1ヶ月",
            MM: "%dヶ月",
            y: "1年",
            yy: "%d年",
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("jv", {
          months:
            "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split(
            "_"
          ),
          weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
          weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
          weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm",
          },
          meridiemParse: /enjing|siyang|sonten|ndalu/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "enjing" === a
                ? e
                : "siyang" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "sonten" === a || "ndalu" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 11
              ? "enjing"
              : e < 15
              ? "siyang"
              : e < 19
              ? "sonten"
              : "ndalu";
          },
          calendar: {
            sameDay: "[Dinten puniko pukul] LT",
            nextDay: "[Mbenjang pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kala wingi pukul] LT",
            lastWeek: "dddd [kepengker pukul] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "wonten ing %s",
            past: "%s ingkang kepengker",
            s: "sawetawis detik",
            ss: "%d detik",
            m: "setunggal menit",
            mm: "%d menit",
            h: "setunggal jam",
            hh: "%d jam",
            d: "sedinten",
            dd: "%d dinten",
            M: "sewulan",
            MM: "%d wulan",
            y: "setaun",
            yy: "%d taun",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ka", {
          months: {
            standalone:
              "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split(
                "_"
              ),
            format:
              "იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split(
                "_"
              ),
          },
          monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split(
            "_"
          ),
          weekdays: {
            standalone:
              "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split(
                "_"
              ),
            format:
              "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split(
                "_"
              ),
            isFormat: /(წინა|შემდეგ)/,
          },
          weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
          weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendar: {
            sameDay: "[დღეს] LT[-ზე]",
            nextDay: "[ხვალ] LT[-ზე]",
            lastDay: "[გუშინ] LT[-ზე]",
            nextWeek: "[შემდეგ] dddd LT[-ზე]",
            lastWeek: "[წინა] dddd LT-ზე",
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              return /(წამი|წუთი|საათი|წელი)/.test(e)
                ? e.replace(/ი$/, "ში")
                : e + "ში";
            },
            past: function (e) {
              return /(წამი|წუთი|საათი|დღე|თვე)/.test(e)
                ? e.replace(/(ი|ე)$/, "ის წინ")
                : /წელი/.test(e)
                ? e.replace(/წელი$/, "წლის წინ")
                : void 0;
            },
            s: "რამდენიმე წამი",
            ss: "%d წამი",
            m: "წუთი",
            mm: "%d წუთი",
            h: "საათი",
            hh: "%d საათი",
            d: "დღე",
            dd: "%d დღე",
            M: "თვე",
            MM: "%d თვე",
            y: "წელი",
            yy: "%d წელი",
          },
          dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
          ordinal: function (e) {
            return 0 === e
              ? e
              : 1 === e
              ? e + "-ლი"
              : e < 20 || (e <= 100 && e % 20 == 0) || e % 100 == 0
              ? "მე-" + e
              : e + "-ე";
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          0: "-ші",
          1: "-ші",
          2: "-ші",
          3: "-ші",
          4: "-ші",
          5: "-ші",
          6: "-шы",
          7: "-ші",
          8: "-ші",
          9: "-шы",
          10: "-шы",
          20: "-шы",
          30: "-шы",
          40: "-шы",
          50: "-ші",
          60: "-шы",
          70: "-ші",
          80: "-ші",
          90: "-шы",
          100: "-ші",
        };
        e.defineLocale("kk", {
          months:
            "қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split(
              "_"
            ),
          monthsShort: "қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split(
            "_"
          ),
          weekdays:
            "жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split(
              "_"
            ),
          weekdaysShort: "жек_дүй_сей_сәр_бей_жұм_сен".split("_"),
          weekdaysMin: "жк_дй_сй_ср_бй_жм_сн".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Бүгін сағат] LT",
            nextDay: "[Ертең сағат] LT",
            nextWeek: "dddd [сағат] LT",
            lastDay: "[Кеше сағат] LT",
            lastWeek: "[Өткен аптаның] dddd [сағат] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s ішінде",
            past: "%s бұрын",
            s: "бірнеше секунд",
            ss: "%d секунд",
            m: "бір минут",
            mm: "%d минут",
            h: "бір сағат",
            hh: "%d сағат",
            d: "бір күн",
            dd: "%d күн",
            M: "бір ай",
            MM: "%d ай",
            y: "бір жыл",
            yy: "%d жыл",
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
          ordinal: function (e) {
            return e + (a[e] || a[e % 10] || a[e >= 100 ? 100 : null]);
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "១",
            2: "២",
            3: "៣",
            4: "៤",
            5: "៥",
            6: "៦",
            7: "៧",
            8: "៨",
            9: "៩",
            0: "០",
          },
          t = {
            "១": "1",
            "២": "2",
            "៣": "3",
            "៤": "4",
            "៥": "5",
            "៦": "6",
            "៧": "7",
            "៨": "8",
            "៩": "9",
            "០": "0",
          };
        e.defineLocale("km", {
          months:
            "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split(
              "_"
            ),
          monthsShort:
            "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split(
              "_"
            ),
          weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
          weekdaysShort: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
          weekdaysMin: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          meridiemParse: /ព្រឹក|ល្ងាច/,
          isPM: function (e) {
            return "ល្ងាច" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ព្រឹក" : "ល្ងាច";
          },
          calendar: {
            sameDay: "[ថ្ងៃនេះ ម៉ោង] LT",
            nextDay: "[ស្អែក ម៉ោង] LT",
            nextWeek: "dddd [ម៉ោង] LT",
            lastDay: "[ម្សិលមិញ ម៉ោង] LT",
            lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%sទៀត",
            past: "%sមុន",
            s: "ប៉ុន្មានវិនាទី",
            ss: "%d វិនាទី",
            m: "មួយនាទី",
            mm: "%d នាទី",
            h: "មួយម៉ោង",
            hh: "%d ម៉ោង",
            d: "មួយថ្ងៃ",
            dd: "%d ថ្ងៃ",
            M: "មួយខែ",
            MM: "%d ខែ",
            y: "មួយឆ្នាំ",
            yy: "%d ឆ្នាំ",
          },
          dayOfMonthOrdinalParse: /ទី\d{1,2}/,
          ordinal: "ទី%d",
          preparse: function (e) {
            return e.replace(/[១២៣៤៥៦៧៨៩០]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "೧",
            2: "೨",
            3: "೩",
            4: "೪",
            5: "೫",
            6: "೬",
            7: "೭",
            8: "೮",
            9: "೯",
            0: "೦",
          },
          t = {
            "೧": "1",
            "೨": "2",
            "೩": "3",
            "೪": "4",
            "೫": "5",
            "೬": "6",
            "೭": "7",
            "೮": "8",
            "೯": "9",
            "೦": "0",
          };
        e.defineLocale("kn", {
          months:
            "ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split(
              "_"
            ),
          monthsShort:
            "ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split(
              "_"
            ),
          weekdaysShort: "ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),
          weekdaysMin: "ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm",
          },
          calendar: {
            sameDay: "[ಇಂದು] LT",
            nextDay: "[ನಾಳೆ] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ನಿನ್ನೆ] LT",
            lastWeek: "[ಕೊನೆಯ] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s ನಂತರ",
            past: "%s ಹಿಂದೆ",
            s: "ಕೆಲವು ಕ್ಷಣಗಳು",
            ss: "%d ಸೆಕೆಂಡುಗಳು",
            m: "ಒಂದು ನಿಮಿಷ",
            mm: "%d ನಿಮಿಷ",
            h: "ಒಂದು ಗಂಟೆ",
            hh: "%d ಗಂಟೆ",
            d: "ಒಂದು ದಿನ",
            dd: "%d ದಿನ",
            M: "ಒಂದು ತಿಂಗಳು",
            MM: "%d ತಿಂಗಳು",
            y: "ಒಂದು ವರ್ಷ",
            yy: "%d ವರ್ಷ",
          },
          preparse: function (e) {
            return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "ರಾತ್ರಿ" === a
                ? e < 4
                  ? e
                  : e + 12
                : "ಬೆಳಿಗ್ಗೆ" === a
                ? e
                : "ಮಧ್ಯಾಹ್ನ" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "ಸಂಜೆ" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "ರಾತ್ರಿ"
              : e < 10
              ? "ಬೆಳಿಗ್ಗೆ"
              : e < 17
              ? "ಮಧ್ಯಾಹ್ನ"
              : e < 20
              ? "ಸಂಜೆ"
              : "ರಾತ್ರಿ";
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
          ordinal: function (e) {
            return e + "ನೇ";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ko", {
          months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split(
            "_"
          ),
          monthsShort:
            "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
          weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split(
            "_"
          ),
          weekdaysShort: "일_월_화_수_목_금_토".split("_"),
          weekdaysMin: "일_월_화_수_목_금_토".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "YYYY.MM.DD.",
            LL: "YYYY년 MMMM D일",
            LLL: "YYYY년 MMMM D일 A h:mm",
            LLLL: "YYYY년 MMMM D일 dddd A h:mm",
            l: "YYYY.MM.DD.",
            ll: "YYYY년 MMMM D일",
            lll: "YYYY년 MMMM D일 A h:mm",
            llll: "YYYY년 MMMM D일 dddd A h:mm",
          },
          calendar: {
            sameDay: "오늘 LT",
            nextDay: "내일 LT",
            nextWeek: "dddd LT",
            lastDay: "어제 LT",
            lastWeek: "지난주 dddd LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s 후",
            past: "%s 전",
            s: "몇 초",
            ss: "%d초",
            m: "1분",
            mm: "%d분",
            h: "한 시간",
            hh: "%d시간",
            d: "하루",
            dd: "%d일",
            M: "한 달",
            MM: "%d달",
            y: "일 년",
            yy: "%d년",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "일";
              case "M":
                return e + "월";
              case "w":
              case "W":
                return e + "주";
              default:
                return e;
            }
          },
          meridiemParse: /오전|오후/,
          isPM: function (e) {
            return "오후" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "오전" : "오후";
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "١",
            2: "٢",
            3: "٣",
            4: "٤",
            5: "٥",
            6: "٦",
            7: "٧",
            8: "٨",
            9: "٩",
            0: "٠",
          },
          t = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0",
          },
          n = [
            "کانونی دووەم",
            "شوبات",
            "ئازار",
            "نیسان",
            "ئایار",
            "حوزەیران",
            "تەمموز",
            "ئاب",
            "ئەیلوول",
            "تشرینی یەكەم",
            "تشرینی دووەم",
            "كانونی یەکەم",
          ];
        e.defineLocale("ku", {
          months: n,
          monthsShort: n,
          weekdays:
            "یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌".split(
              "_"
            ),
          weekdaysShort:
            "یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌".split(
              "_"
            ),
          weekdaysMin: "ی_د_س_چ_پ_ه_ش".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          meridiemParse: /ئێواره‌|به‌یانی/,
          isPM: function (e) {
            return /ئێواره‌/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "به‌یانی" : "ئێواره‌";
          },
          calendar: {
            sameDay: "[ئه‌مرۆ كاتژمێر] LT",
            nextDay: "[به‌یانی كاتژمێر] LT",
            nextWeek: "dddd [كاتژمێر] LT",
            lastDay: "[دوێنێ كاتژمێر] LT",
            lastWeek: "dddd [كاتژمێر] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "له‌ %s",
            past: "%s",
            s: "چه‌ند چركه‌یه‌ك",
            ss: "چركه‌ %d",
            m: "یه‌ك خوله‌ك",
            mm: "%d خوله‌ك",
            h: "یه‌ك كاتژمێر",
            hh: "%d كاتژمێر",
            d: "یه‌ك ڕۆژ",
            dd: "%d ڕۆژ",
            M: "یه‌ك مانگ",
            MM: "%d مانگ",
            y: "یه‌ك ساڵ",
            yy: "%d ساڵ",
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return t[e];
              })
              .replace(/،/g, ",");
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return a[e];
              })
              .replace(/,/g, "،");
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          0: "-чү",
          1: "-чи",
          2: "-чи",
          3: "-чү",
          4: "-чү",
          5: "-чи",
          6: "-чы",
          7: "-чи",
          8: "-чи",
          9: "-чу",
          10: "-чу",
          20: "-чы",
          30: "-чу",
          40: "-чы",
          50: "-чү",
          60: "-чы",
          70: "-чи",
          80: "-чи",
          90: "-чу",
          100: "-чү",
        };
        e.defineLocale("ky", {
          months:
            "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
              "_"
            ),
          monthsShort:
            "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
          weekdays:
            "Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split(
              "_"
            ),
          weekdaysShort: "Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),
          weekdaysMin: "Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Бүгүн саат] LT",
            nextDay: "[Эртең саат] LT",
            nextWeek: "dddd [саат] LT",
            lastDay: "[Кечээ саат] LT",
            lastWeek: "[Өткөн аптанын] dddd [күнү] [саат] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s ичинде",
            past: "%s мурун",
            s: "бирнече секунд",
            ss: "%d секунд",
            m: "бир мүнөт",
            mm: "%d мүнөт",
            h: "бир саат",
            hh: "%d саат",
            d: "бир күн",
            dd: "%d күн",
            M: "бир ай",
            MM: "%d ай",
            y: "бир жыл",
            yy: "%d жыл",
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
          ordinal: function (e) {
            return e + (a[e] || a[e % 10] || a[e >= 100 ? 100 : null]);
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            m: ["eng Minutt", "enger Minutt"],
            h: ["eng Stonn", "enger Stonn"],
            d: ["een Dag", "engem Dag"],
            M: ["ee Mount", "engem Mount"],
            y: ["ee Joer", "engem Joer"],
          };
          return a ? i[t][0] : i[t][1];
        }
        function t(e) {
          if (((e = parseInt(e, 10)), isNaN(e))) return !1;
          if (e < 0) return !0;
          if (e < 10) return 4 <= e && e <= 7;
          if (e < 100) {
            var a = e % 10;
            return t(0 === a ? e / 10 : a);
          }
          if (e < 1e4) {
            for (; e >= 10; ) e /= 10;
            return t(e);
          }
          return t((e /= 1e3));
        }
        e.defineLocale("lb", {
          months:
            "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split(
              "_"
            ),
          monthsShort:
            "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split(
              "_"
            ),
          weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm [Auer]",
            LTS: "H:mm:ss [Auer]",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm [Auer]",
            LLLL: "dddd, D. MMMM YYYY H:mm [Auer]",
          },
          calendar: {
            sameDay: "[Haut um] LT",
            sameElse: "L",
            nextDay: "[Muer um] LT",
            nextWeek: "dddd [um] LT",
            lastDay: "[Gëschter um] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 2:
                case 4:
                  return "[Leschten] dddd [um] LT";
                default:
                  return "[Leschte] dddd [um] LT";
              }
            },
          },
          relativeTime: {
            future: function (e) {
              return t(e.substr(0, e.indexOf(" "))) ? "a " + e : "an " + e;
            },
            past: function (e) {
              return t(e.substr(0, e.indexOf(" ")))
                ? "viru " + e
                : "virun " + e;
            },
            s: "e puer Sekonnen",
            ss: "%d Sekonnen",
            m: a,
            mm: "%d Minutten",
            h: a,
            hh: "%d Stonnen",
            d: a,
            dd: "%d Deeg",
            M: a,
            MM: "%d Méint",
            y: a,
            yy: "%d Joer",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("lo", {
          months:
            "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split(
              "_"
            ),
          monthsShort:
            "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split(
              "_"
            ),
          weekdays: "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
          weekdaysShort: "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
          weekdaysMin: "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "ວັນdddd D MMMM YYYY HH:mm",
          },
          meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
          isPM: function (e) {
            return "ຕອນແລງ" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ຕອນເຊົ້າ" : "ຕອນແລງ";
          },
          calendar: {
            sameDay: "[ມື້ນີ້ເວລາ] LT",
            nextDay: "[ມື້ອື່ນເວລາ] LT",
            nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
            lastDay: "[ມື້ວານນີ້ເວລາ] LT",
            lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "ອີກ %s",
            past: "%sຜ່ານມາ",
            s: "ບໍ່ເທົ່າໃດວິນາທີ",
            ss: "%d ວິນາທີ",
            m: "1 ນາທີ",
            mm: "%d ນາທີ",
            h: "1 ຊົ່ວໂມງ",
            hh: "%d ຊົ່ວໂມງ",
            d: "1 ມື້",
            dd: "%d ມື້",
            M: "1 ເດືອນ",
            MM: "%d ເດືອນ",
            y: "1 ປີ",
            yy: "%d ປີ",
          },
          dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
          ordinal: function (e) {
            return "ທີ່" + e;
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          ss: "sekundė_sekundžių_sekundes",
          m: "minutė_minutės_minutę",
          mm: "minutės_minučių_minutes",
          h: "valanda_valandos_valandą",
          hh: "valandos_valandų_valandas",
          d: "diena_dienos_dieną",
          dd: "dienos_dienų_dienas",
          M: "mėnuo_mėnesio_mėnesį",
          MM: "mėnesiai_mėnesių_mėnesius",
          y: "metai_metų_metus",
          yy: "metai_metų_metus",
        };
        function t(e, a, t, n) {
          return a ? i(t)[0] : n ? i(t)[1] : i(t)[2];
        }
        function n(e) {
          return e % 10 == 0 || (e > 10 && e < 20);
        }
        function i(e) {
          return a[e].split("_");
        }
        function r(e, a, r, o) {
          var s = e + " ";
          return 1 === e
            ? s + t(0, a, r[0], o)
            : a
            ? s + (n(e) ? i(r)[1] : i(r)[0])
            : o
            ? s + i(r)[1]
            : s + (n(e) ? i(r)[1] : i(r)[2]);
        }
        e.defineLocale("lt", {
          months: {
            format:
              "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split(
                "_"
              ),
            standalone:
              "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split(
                "_"
              ),
            isFormat:
              /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
          },
          monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split(
            "_"
          ),
          weekdays: {
            format:
              "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split(
                "_"
              ),
            standalone:
              "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split(
                "_"
              ),
            isFormat: /dddd HH:mm/,
          },
          weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
          weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY [m.] MMMM D [d.]",
            LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
            l: "YYYY-MM-DD",
            ll: "YYYY [m.] MMMM D [d.]",
            lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]",
          },
          calendar: {
            sameDay: "[Šiandien] LT",
            nextDay: "[Rytoj] LT",
            nextWeek: "dddd LT",
            lastDay: "[Vakar] LT",
            lastWeek: "[Praėjusį] dddd LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "po %s",
            past: "prieš %s",
            s: function (e, a, t, n) {
              return a
                ? "kelios sekundės"
                : n
                ? "kelių sekundžių"
                : "kelias sekundes";
            },
            ss: r,
            m: t,
            mm: r,
            h: t,
            hh: r,
            d: t,
            dd: r,
            M: t,
            MM: r,
            y: t,
            yy: r,
          },
          dayOfMonthOrdinalParse: /\d{1,2}-oji/,
          ordinal: function (e) {
            return e + "-oji";
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          ss: "sekundes_sekundēm_sekunde_sekundes".split("_"),
          m: "minūtes_minūtēm_minūte_minūtes".split("_"),
          mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
          h: "stundas_stundām_stunda_stundas".split("_"),
          hh: "stundas_stundām_stunda_stundas".split("_"),
          d: "dienas_dienām_diena_dienas".split("_"),
          dd: "dienas_dienām_diena_dienas".split("_"),
          M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
          MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
          y: "gada_gadiem_gads_gadi".split("_"),
          yy: "gada_gadiem_gads_gadi".split("_"),
        };
        function t(e, a, t) {
          return t
            ? a % 10 == 1 && a % 100 != 11
              ? e[2]
              : e[3]
            : a % 10 == 1 && a % 100 != 11
            ? e[0]
            : e[1];
        }
        function n(e, n, i) {
          return e + " " + t(a[i], e, n);
        }
        function i(e, n, i) {
          return t(a[i], e, n);
        }
        e.defineLocale("lv", {
          months:
            "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays:
            "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split(
              "_"
            ),
          weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
          weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY.",
            LL: "YYYY. [gada] D. MMMM",
            LLL: "YYYY. [gada] D. MMMM, HH:mm",
            LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm",
          },
          calendar: {
            sameDay: "[Šodien pulksten] LT",
            nextDay: "[Rīt pulksten] LT",
            nextWeek: "dddd [pulksten] LT",
            lastDay: "[Vakar pulksten] LT",
            lastWeek: "[Pagājušā] dddd [pulksten] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "pēc %s",
            past: "pirms %s",
            s: function (e, a) {
              return a ? "dažas sekundes" : "dažām sekundēm";
            },
            ss: n,
            m: i,
            mm: n,
            h: i,
            hh: n,
            d: i,
            dd: n,
            M: i,
            MM: n,
            y: i,
            yy: n,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          words: {
            ss: ["sekund", "sekunda", "sekundi"],
            m: ["jedan minut", "jednog minuta"],
            mm: ["minut", "minuta", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mjesec", "mjeseca", "mjeseci"],
            yy: ["godina", "godine", "godina"],
          },
          correctGrammaticalCase: function (e, a) {
            return 1 === e ? a[0] : e >= 2 && e <= 4 ? a[1] : a[2];
          },
          translate: function (e, t, n) {
            var i = a.words[n];
            return 1 === n.length
              ? t
                ? i[0]
                : i[1]
              : e + " " + a.correctGrammaticalCase(e, i);
          },
        };
        e.defineLocale("me", {
          months:
            "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
              "_"
            ),
          monthsShort:
            "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
              "_"
            ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sjutra u] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[juče u] LT",
            lastWeek: function () {
              return [
                "[prošle] [nedjelje] [u] LT",
                "[prošlog] [ponedjeljka] [u] LT",
                "[prošlog] [utorka] [u] LT",
                "[prošle] [srijede] [u] LT",
                "[prošlog] [četvrtka] [u] LT",
                "[prošlog] [petka] [u] LT",
                "[prošle] [subote] [u] LT",
              ][this.day()];
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "nekoliko sekundi",
            ss: a.translate,
            m: a.translate,
            mm: a.translate,
            h: a.translate,
            hh: a.translate,
            d: "dan",
            dd: a.translate,
            M: "mjesec",
            MM: a.translate,
            y: "godinu",
            yy: a.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("mi", {
          months:
            "Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split(
              "_"
            ),
          monthsShort:
            "Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split(
              "_"
            ),
          monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
          weekdays: "Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split(
            "_"
          ),
          weekdaysShort: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
          weekdaysMin: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [i] HH:mm",
            LLLL: "dddd, D MMMM YYYY [i] HH:mm",
          },
          calendar: {
            sameDay: "[i teie mahana, i] LT",
            nextDay: "[apopo i] LT",
            nextWeek: "dddd [i] LT",
            lastDay: "[inanahi i] LT",
            lastWeek: "dddd [whakamutunga i] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "i roto i %s",
            past: "%s i mua",
            s: "te hēkona ruarua",
            ss: "%d hēkona",
            m: "he meneti",
            mm: "%d meneti",
            h: "te haora",
            hh: "%d haora",
            d: "he ra",
            dd: "%d ra",
            M: "he marama",
            MM: "%d marama",
            y: "he tau",
            yy: "%d tau",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("mk", {
          months:
            "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split(
              "_"
            ),
          monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split(
            "_"
          ),
          weekdays:
            "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
          weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
          weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[Денес во] LT",
            nextDay: "[Утре во] LT",
            nextWeek: "[Во] dddd [во] LT",
            lastDay: "[Вчера во] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return "[Изминатата] dddd [во] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[Изминатиот] dddd [во] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "после %s",
            past: "пред %s",
            s: "неколку секунди",
            ss: "%d секунди",
            m: "минута",
            mm: "%d минути",
            h: "час",
            hh: "%d часа",
            d: "ден",
            dd: "%d дена",
            M: "месец",
            MM: "%d месеци",
            y: "година",
            yy: "%d години",
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function (e) {
            var a = e % 10,
              t = e % 100;
            return 0 === e
              ? e + "-ев"
              : 0 === t
              ? e + "-ен"
              : t > 10 && t < 20
              ? e + "-ти"
              : 1 === a
              ? e + "-ви"
              : 2 === a
              ? e + "-ри"
              : 7 === a || 8 === a
              ? e + "-ми"
              : e + "-ти";
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ml", {
          months:
            "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split(
              "_"
            ),
          monthsShort:
            "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split(
              "_"
            ),
          weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
          weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
          longDateFormat: {
            LT: "A h:mm -നു",
            LTS: "A h:mm:ss -നു",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm -നു",
            LLLL: "dddd, D MMMM YYYY, A h:mm -നു",
          },
          calendar: {
            sameDay: "[ഇന്ന്] LT",
            nextDay: "[നാളെ] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ഇന്നലെ] LT",
            lastWeek: "[കഴിഞ്ഞ] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s കഴിഞ്ഞ്",
            past: "%s മുൻപ്",
            s: "അൽപ നിമിഷങ്ങൾ",
            ss: "%d സെക്കൻഡ്",
            m: "ഒരു മിനിറ്റ്",
            mm: "%d മിനിറ്റ്",
            h: "ഒരു മണിക്കൂർ",
            hh: "%d മണിക്കൂർ",
            d: "ഒരു ദിവസം",
            dd: "%d ദിവസം",
            M: "ഒരു മാസം",
            MM: "%d മാസം",
            y: "ഒരു വർഷം",
            yy: "%d വർഷം",
          },
          meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              ("രാത്രി" === a && e >= 4) ||
              "ഉച്ച കഴിഞ്ഞ്" === a ||
              "വൈകുന്നേരം" === a
                ? e + 12
                : e
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "രാത്രി"
              : e < 12
              ? "രാവിലെ"
              : e < 17
              ? "ഉച്ച കഴിഞ്ഞ്"
              : e < 20
              ? "വൈകുന്നേരം"
              : "രാത്രി";
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          switch (t) {
            case "s":
              return a ? "хэдхэн секунд" : "хэдхэн секундын";
            case "ss":
              return e + (a ? " секунд" : " секундын");
            case "m":
            case "mm":
              return e + (a ? " минут" : " минутын");
            case "h":
            case "hh":
              return e + (a ? " цаг" : " цагийн");
            case "d":
            case "dd":
              return e + (a ? " өдөр" : " өдрийн");
            case "M":
            case "MM":
              return e + (a ? " сар" : " сарын");
            case "y":
            case "yy":
              return e + (a ? " жил" : " жилийн");
            default:
              return e;
          }
        }
        e.defineLocale("mn", {
          months:
            "Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split(
              "_"
            ),
          monthsShort:
            "1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),
          weekdaysShort: "Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),
          weekdaysMin: "Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY оны MMMMын D",
            LLL: "YYYY оны MMMMын D HH:mm",
            LLLL: "dddd, YYYY оны MMMMын D HH:mm",
          },
          meridiemParse: /ҮӨ|ҮХ/i,
          isPM: function (e) {
            return "ҮХ" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ҮӨ" : "ҮХ";
          },
          calendar: {
            sameDay: "[Өнөөдөр] LT",
            nextDay: "[Маргааш] LT",
            nextWeek: "[Ирэх] dddd LT",
            lastDay: "[Өчигдөр] LT",
            lastWeek: "[Өнгөрсөн] dddd LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s дараа",
            past: "%s өмнө",
            s: a,
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + " өдөр";
              default:
                return e;
            }
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "१",
            2: "२",
            3: "३",
            4: "४",
            5: "५",
            6: "६",
            7: "७",
            8: "८",
            9: "९",
            0: "०",
          },
          t = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0",
          };
        function n(e, a, t, n) {
          var i = "";
          if (a)
            switch (t) {
              case "s":
                i = "काही सेकंद";
                break;
              case "ss":
                i = "%d सेकंद";
                break;
              case "m":
                i = "एक मिनिट";
                break;
              case "mm":
                i = "%d मिनिटे";
                break;
              case "h":
                i = "एक तास";
                break;
              case "hh":
                i = "%d तास";
                break;
              case "d":
                i = "एक दिवस";
                break;
              case "dd":
                i = "%d दिवस";
                break;
              case "M":
                i = "एक महिना";
                break;
              case "MM":
                i = "%d महिने";
                break;
              case "y":
                i = "एक वर्ष";
                break;
              case "yy":
                i = "%d वर्षे";
            }
          else
            switch (t) {
              case "s":
                i = "काही सेकंदां";
                break;
              case "ss":
                i = "%d सेकंदां";
                break;
              case "m":
                i = "एका मिनिटा";
                break;
              case "mm":
                i = "%d मिनिटां";
                break;
              case "h":
                i = "एका तासा";
                break;
              case "hh":
                i = "%d तासां";
                break;
              case "d":
                i = "एका दिवसा";
                break;
              case "dd":
                i = "%d दिवसां";
                break;
              case "M":
                i = "एका महिन्या";
                break;
              case "MM":
                i = "%d महिन्यां";
                break;
              case "y":
                i = "एका वर्षा";
                break;
              case "yy":
                i = "%d वर्षां";
            }
          return i.replace(/%d/i, e);
        }
        e.defineLocale("mr", {
          months:
            "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split(
              "_"
            ),
          monthsShort:
            "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
          weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
          weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
          longDateFormat: {
            LT: "A h:mm वाजता",
            LTS: "A h:mm:ss वाजता",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm वाजता",
            LLLL: "dddd, D MMMM YYYY, A h:mm वाजता",
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[उद्या] LT",
            nextWeek: "dddd, LT",
            lastDay: "[काल] LT",
            lastWeek: "[मागील] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%sमध्ये",
            past: "%sपूर्वी",
            s: n,
            ss: n,
            m: n,
            mm: n,
            h: n,
            hh: n,
            d: n,
            dd: n,
            M: n,
            MM: n,
            y: n,
            yy: n,
          },
          preparse: function (e) {
            return e.replace(/[१२३४५६७८९०]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "रात्री" === a
                ? e < 4
                  ? e
                  : e + 12
                : "सकाळी" === a
                ? e
                : "दुपारी" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "सायंकाळी" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "रात्री"
              : e < 10
              ? "सकाळी"
              : e < 17
              ? "दुपारी"
              : e < 20
              ? "सायंकाळी"
              : "रात्री";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ms", {
          months:
            "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
            "_"
          ),
          weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
          weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
          weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm",
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "pagi" === a
                ? e
                : "tengahari" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "petang" === a || "malam" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 11
              ? "pagi"
              : e < 15
              ? "tengahari"
              : e < 19
              ? "petang"
              : "malam";
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            ss: "%d saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ms-my", {
          months:
            "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
            "_"
          ),
          weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
          weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
          weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm",
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "pagi" === a
                ? e
                : "tengahari" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "petang" === a || "malam" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 11
              ? "pagi"
              : e < 15
              ? "tengahari"
              : e < 19
              ? "petang"
              : "malam";
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            ss: "%d saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("mt", {
          months:
            "Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split(
              "_"
            ),
          monthsShort: "Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split(
            "_"
          ),
          weekdays:
            "Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split(
              "_"
            ),
          weekdaysShort: "Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),
          weekdaysMin: "Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Illum fil-]LT",
            nextDay: "[Għada fil-]LT",
            nextWeek: "dddd [fil-]LT",
            lastDay: "[Il-bieraħ fil-]LT",
            lastWeek: "dddd [li għadda] [fil-]LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "f’ %s",
            past: "%s ilu",
            s: "ftit sekondi",
            ss: "%d sekondi",
            m: "minuta",
            mm: "%d minuti",
            h: "siegħa",
            hh: "%d siegħat",
            d: "ġurnata",
            dd: "%d ġranet",
            M: "xahar",
            MM: "%d xhur",
            y: "sena",
            yy: "%d sni",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "၁",
            2: "၂",
            3: "၃",
            4: "၄",
            5: "၅",
            6: "၆",
            7: "၇",
            8: "၈",
            9: "၉",
            0: "၀",
          },
          t = {
            "၁": "1",
            "၂": "2",
            "၃": "3",
            "၄": "4",
            "၅": "5",
            "၆": "6",
            "၇": "7",
            "၈": "8",
            "၉": "9",
            "၀": "0",
          };
        e.defineLocale("my", {
          months:
            "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split(
              "_"
            ),
          monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split(
            "_"
          ),
          weekdays:
            "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
          weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
          weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[ယနေ.] LT [မှာ]",
            nextDay: "[မနက်ဖြန်] LT [မှာ]",
            nextWeek: "dddd LT [မှာ]",
            lastDay: "[မနေ.က] LT [မှာ]",
            lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
            sameElse: "L",
          },
          relativeTime: {
            future: "လာမည့် %s မှာ",
            past: "လွန်ခဲ့သော %s က",
            s: "စက္ကန်.အနည်းငယ်",
            ss: "%d စက္ကန့်",
            m: "တစ်မိနစ်",
            mm: "%d မိနစ်",
            h: "တစ်နာရီ",
            hh: "%d နာရီ",
            d: "တစ်ရက်",
            dd: "%d ရက်",
            M: "တစ်လ",
            MM: "%d လ",
            y: "တစ်နှစ်",
            yy: "%d နှစ်",
          },
          preparse: function (e) {
            return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("nb", {
          months:
            "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
              "_"
            ),
          monthsShort:
            "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split(
            "_"
          ),
          weekdaysShort: "sø._ma._ti._on._to._fr._lø.".split("_"),
          weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm",
          },
          calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[i går kl.] LT",
            lastWeek: "[forrige] dddd [kl.] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "noen sekunder",
            ss: "%d sekunder",
            m: "ett minutt",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dager",
            M: "en måned",
            MM: "%d måneder",
            y: "ett år",
            yy: "%d år",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "१",
            2: "२",
            3: "३",
            4: "४",
            5: "५",
            6: "६",
            7: "७",
            8: "८",
            9: "९",
            0: "०",
          },
          t = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0",
          };
        e.defineLocale("ne", {
          months:
            "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split(
              "_"
            ),
          monthsShort:
            "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
          weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
          weekdaysMin: "आ._सो._मं._बु._बि._शु._श.".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "Aको h:mm बजे",
            LTS: "Aको h:mm:ss बजे",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, Aको h:mm बजे",
            LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे",
          },
          preparse: function (e) {
            return e.replace(/[१२३४५६७८९०]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "राति" === a
                ? e < 4
                  ? e
                  : e + 12
                : "बिहान" === a
                ? e
                : "दिउँसो" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "साँझ" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 3
              ? "राति"
              : e < 12
              ? "बिहान"
              : e < 16
              ? "दिउँसो"
              : e < 20
              ? "साँझ"
              : "राति";
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[भोलि] LT",
            nextWeek: "[आउँदो] dddd[,] LT",
            lastDay: "[हिजो] LT",
            lastWeek: "[गएको] dddd[,] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%sमा",
            past: "%s अगाडि",
            s: "केही क्षण",
            ss: "%d सेकेण्ड",
            m: "एक मिनेट",
            mm: "%d मिनेट",
            h: "एक घण्टा",
            hh: "%d घण्टा",
            d: "एक दिन",
            dd: "%d दिन",
            M: "एक महिना",
            MM: "%d महिना",
            y: "एक बर्ष",
            yy: "%d बर्ष",
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
              "_"
            ),
          t = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
          n = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
          ],
          i =
            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
        e.defineLocale("nl", {
          months:
            "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex:
            /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays:
            "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
              "_"
            ),
          weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
          weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            ss: "%d seconden",
            m: "één minuut",
            mm: "%d minuten",
            h: "één uur",
            hh: "%d uur",
            d: "één dag",
            dd: "%d dagen",
            M: "één maand",
            MM: "%d maanden",
            y: "één jaar",
            yy: "%d jaar",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
              "_"
            ),
          t = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
          n = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
          ],
          i =
            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
        e.defineLocale("nl-be", {
          months:
            "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
              "_"
            ),
          monthsShort: function (e, n) {
            return e ? (/-MMM-/.test(n) ? t[e.month()] : a[e.month()]) : a;
          },
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex:
            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex:
            /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: n,
          longMonthsParse: n,
          shortMonthsParse: n,
          weekdays:
            "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
              "_"
            ),
          weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
          weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            ss: "%d seconden",
            m: "één minuut",
            mm: "%d minuten",
            h: "één uur",
            hh: "%d uur",
            d: "één dag",
            dd: "%d dagen",
            M: "één maand",
            MM: "%d maanden",
            y: "één jaar",
            yy: "%d jaar",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("nn", {
          months:
            "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
            "_"
          ),
          weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split(
            "_"
          ),
          weekdaysShort: "sun_mån_tys_ons_tor_fre_lau".split("_"),
          weekdaysMin: "su_må_ty_on_to_fr_lø".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm",
          },
          calendar: {
            sameDay: "[I dag klokka] LT",
            nextDay: "[I morgon klokka] LT",
            nextWeek: "dddd [klokka] LT",
            lastDay: "[I går klokka] LT",
            lastWeek: "[Føregåande] dddd [klokka] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "om %s",
            past: "%s sidan",
            s: "nokre sekund",
            ss: "%d sekund",
            m: "eit minutt",
            mm: "%d minutt",
            h: "ein time",
            hh: "%d timar",
            d: "ein dag",
            dd: "%d dagar",
            M: "ein månad",
            MM: "%d månader",
            y: "eit år",
            yy: "%d år",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "੧",
            2: "੨",
            3: "੩",
            4: "੪",
            5: "੫",
            6: "੬",
            7: "੭",
            8: "੮",
            9: "੯",
            0: "੦",
          },
          t = {
            "੧": "1",
            "੨": "2",
            "੩": "3",
            "੪": "4",
            "੫": "5",
            "੬": "6",
            "੭": "7",
            "੮": "8",
            "੯": "9",
            "੦": "0",
          };
        e.defineLocale("pa-in", {
          months:
            "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split(
              "_"
            ),
          monthsShort:
            "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split(
              "_"
            ),
          weekdays:
            "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),
          weekdaysShort: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
          weekdaysMin: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
          longDateFormat: {
            LT: "A h:mm ਵਜੇ",
            LTS: "A h:mm:ss ਵਜੇ",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm ਵਜੇ",
            LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ",
          },
          calendar: {
            sameDay: "[ਅਜ] LT",
            nextDay: "[ਕਲ] LT",
            nextWeek: "[ਅਗਲਾ] dddd, LT",
            lastDay: "[ਕਲ] LT",
            lastWeek: "[ਪਿਛਲੇ] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s ਵਿੱਚ",
            past: "%s ਪਿਛਲੇ",
            s: "ਕੁਝ ਸਕਿੰਟ",
            ss: "%d ਸਕਿੰਟ",
            m: "ਇਕ ਮਿੰਟ",
            mm: "%d ਮਿੰਟ",
            h: "ਇੱਕ ਘੰਟਾ",
            hh: "%d ਘੰਟੇ",
            d: "ਇੱਕ ਦਿਨ",
            dd: "%d ਦਿਨ",
            M: "ਇੱਕ ਮਹੀਨਾ",
            MM: "%d ਮਹੀਨੇ",
            y: "ਇੱਕ ਸਾਲ",
            yy: "%d ਸਾਲ",
          },
          preparse: function (e) {
            return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "ਰਾਤ" === a
                ? e < 4
                  ? e
                  : e + 12
                : "ਸਵੇਰ" === a
                ? e
                : "ਦੁਪਹਿਰ" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "ਸ਼ਾਮ" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "ਰਾਤ"
              : e < 10
              ? "ਸਵੇਰ"
              : e < 17
              ? "ਦੁਪਹਿਰ"
              : e < 20
              ? "ਸ਼ਾਮ"
              : "ਰਾਤ";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split(
              "_"
            ),
          t =
            "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split(
              "_"
            );
        function n(e) {
          return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 != 1;
        }
        function i(e, a, t) {
          var i = e + " ";
          switch (t) {
            case "ss":
              return i + (n(e) ? "sekundy" : "sekund");
            case "m":
              return a ? "minuta" : "minutę";
            case "mm":
              return i + (n(e) ? "minuty" : "minut");
            case "h":
              return a ? "godzina" : "godzinę";
            case "hh":
              return i + (n(e) ? "godziny" : "godzin");
            case "MM":
              return i + (n(e) ? "miesiące" : "miesięcy");
            case "yy":
              return i + (n(e) ? "lata" : "lat");
          }
        }
        e.defineLocale("pl", {
          months: function (e, n) {
            return e
              ? "" === n
                ? "(" + t[e.month()] + "|" + a[e.month()] + ")"
                : /D MMMM/.test(n)
                ? t[e.month()]
                : a[e.month()]
              : a;
          },
          monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split(
            "_"
          ),
          weekdays:
            "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split(
              "_"
            ),
          weekdaysShort: "ndz_pon_wt_śr_czw_pt_sob".split("_"),
          weekdaysMin: "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Dziś o] LT",
            nextDay: "[Jutro o] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[W niedzielę o] LT";
                case 2:
                  return "[We wtorek o] LT";
                case 3:
                  return "[W środę o] LT";
                case 6:
                  return "[W sobotę o] LT";
                default:
                  return "[W] dddd [o] LT";
              }
            },
            lastDay: "[Wczoraj o] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[W zeszłą niedzielę o] LT";
                case 3:
                  return "[W zeszłą środę o] LT";
                case 6:
                  return "[W zeszłą sobotę o] LT";
                default:
                  return "[W zeszły] dddd [o] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "%s temu",
            s: "kilka sekund",
            ss: i,
            m: i,
            mm: i,
            h: i,
            hh: i,
            d: "1 dzień",
            dd: "%d dni",
            M: "miesiąc",
            MM: i,
            y: "rok",
            yy: i,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("pt", {
          months:
            "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split(
              "_"
            ),
          monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split(
            "_"
          ),
          weekdays:
            "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split(
              "_"
            ),
          weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
          weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Hoje às] LT",
            nextDay: "[Amanhã às] LT",
            nextWeek: "dddd [às] LT",
            lastDay: "[Ontem às] LT",
            lastWeek: function () {
              return 0 === this.day() || 6 === this.day()
                ? "[Último] dddd [às] LT"
                : "[Última] dddd [às] LT";
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "em %s",
            past: "há %s",
            s: "segundos",
            ss: "%d segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um mês",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("pt-br", {
          months:
            "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split(
              "_"
            ),
          monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split(
            "_"
          ),
          weekdays:
            "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split(
              "_"
            ),
          weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
          weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm",
          },
          calendar: {
            sameDay: "[Hoje às] LT",
            nextDay: "[Amanhã às] LT",
            nextWeek: "dddd [às] LT",
            lastDay: "[Ontem às] LT",
            lastWeek: function () {
              return 0 === this.day() || 6 === this.day()
                ? "[Último] dddd [às] LT"
                : "[Última] dddd [às] LT";
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "em %s",
            past: "há %s",
            s: "poucos segundos",
            ss: "%d segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um mês",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos",
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n = " ";
          return (
            (e % 100 >= 20 || (e >= 100 && e % 100 == 0)) && (n = " de "),
            e +
              n +
              {
                ss: "secunde",
                mm: "minute",
                hh: "ore",
                dd: "zile",
                MM: "luni",
                yy: "ani",
              }[t]
          );
        }
        e.defineLocale("ro", {
          months:
            "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split(
              "_"
            ),
          monthsShort:
            "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split(
            "_"
          ),
          weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
          weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[azi la] LT",
            nextDay: "[mâine la] LT",
            nextWeek: "dddd [la] LT",
            lastDay: "[ieri la] LT",
            lastWeek: "[fosta] dddd [la] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "peste %s",
            past: "%s în urmă",
            s: "câteva secunde",
            ss: a,
            m: "un minut",
            mm: a,
            h: "o oră",
            hh: a,
            d: "o zi",
            dd: a,
            M: "o lună",
            MM: a,
            y: "un an",
            yy: a,
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n, i;
          return "m" === t
            ? a
              ? "минута"
              : "минуту"
            : e +
                " " +
                ((n = +e),
                (i = {
                  ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                  mm: a ? "минута_минуты_минут" : "минуту_минуты_минут",
                  hh: "час_часа_часов",
                  dd: "день_дня_дней",
                  MM: "месяц_месяца_месяцев",
                  yy: "год_года_лет",
                }[t].split("_")),
                n % 10 == 1 && n % 100 != 11
                  ? i[0]
                  : n % 10 >= 2 &&
                    n % 10 <= 4 &&
                    (n % 100 < 10 || n % 100 >= 20)
                  ? i[1]
                  : i[2]);
        }
        var t = [
          /^янв/i,
          /^фев/i,
          /^мар/i,
          /^апр/i,
          /^ма[йя]/i,
          /^июн/i,
          /^июл/i,
          /^авг/i,
          /^сен/i,
          /^окт/i,
          /^ноя/i,
          /^дек/i,
        ];
        e.defineLocale("ru", {
          months: {
            format:
              "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split(
                "_"
              ),
            standalone:
              "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
                "_"
              ),
          },
          monthsShort: {
            format:
              "янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split(
                "_"
              ),
            standalone:
              "янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split(
                "_"
              ),
          },
          weekdays: {
            standalone:
              "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split(
                "_"
              ),
            format:
              "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split(
                "_"
              ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/,
          },
          weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
          weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
          monthsParse: t,
          longMonthsParse: t,
          shortMonthsParse: t,
          monthsRegex:
            /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          monthsShortRegex:
            /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          monthsStrictRegex:
            /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
          monthsShortStrictRegex:
            /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY г.",
            LLL: "D MMMM YYYY г., H:mm",
            LLLL: "dddd, D MMMM YYYY г., H:mm",
          },
          calendar: {
            sameDay: "[Сегодня, в] LT",
            nextDay: "[Завтра, в] LT",
            lastDay: "[Вчера, в] LT",
            nextWeek: function (e) {
              if (e.week() === this.week())
                return 2 === this.day()
                  ? "[Во] dddd, [в] LT"
                  : "[В] dddd, [в] LT";
              switch (this.day()) {
                case 0:
                  return "[В следующее] dddd, [в] LT";
                case 1:
                case 2:
                case 4:
                  return "[В следующий] dddd, [в] LT";
                case 3:
                case 5:
                case 6:
                  return "[В следующую] dddd, [в] LT";
              }
            },
            lastWeek: function (e) {
              if (e.week() === this.week())
                return 2 === this.day()
                  ? "[Во] dddd, [в] LT"
                  : "[В] dddd, [в] LT";
              switch (this.day()) {
                case 0:
                  return "[В прошлое] dddd, [в] LT";
                case 1:
                case 2:
                case 4:
                  return "[В прошлый] dddd, [в] LT";
                case 3:
                case 5:
                case 6:
                  return "[В прошлую] dddd, [в] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "через %s",
            past: "%s назад",
            s: "несколько секунд",
            ss: a,
            m: a,
            mm: a,
            h: "час",
            hh: a,
            d: "день",
            dd: a,
            M: "месяц",
            MM: a,
            y: "год",
            yy: a,
          },
          meridiemParse: /ночи|утра|дня|вечера/i,
          isPM: function (e) {
            return /^(дня|вечера)$/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 4 ? "ночи" : e < 12 ? "утра" : e < 17 ? "дня" : "вечера";
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
          ordinal: function (e, a) {
            switch (a) {
              case "M":
              case "d":
              case "DDD":
                return e + "-й";
              case "D":
                return e + "-го";
              case "w":
              case "W":
                return e + "-я";
              default:
                return e;
            }
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = [
            "جنوري",
            "فيبروري",
            "مارچ",
            "اپريل",
            "مئي",
            "جون",
            "جولاءِ",
            "آگسٽ",
            "سيپٽمبر",
            "آڪٽوبر",
            "نومبر",
            "ڊسمبر",
          ],
          t = ["آچر", "سومر", "اڱارو", "اربع", "خميس", "جمع", "ڇنڇر"];
        e.defineLocale("sd", {
          months: a,
          monthsShort: a,
          weekdays: t,
          weekdaysShort: t,
          weekdaysMin: t,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd، D MMMM YYYY HH:mm",
          },
          meridiemParse: /صبح|شام/,
          isPM: function (e) {
            return "شام" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "صبح" : "شام";
          },
          calendar: {
            sameDay: "[اڄ] LT",
            nextDay: "[سڀاڻي] LT",
            nextWeek: "dddd [اڳين هفتي تي] LT",
            lastDay: "[ڪالهه] LT",
            lastWeek: "[گزريل هفتي] dddd [تي] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s پوء",
            past: "%s اڳ",
            s: "چند سيڪنڊ",
            ss: "%d سيڪنڊ",
            m: "هڪ منٽ",
            mm: "%d منٽ",
            h: "هڪ ڪلاڪ",
            hh: "%d ڪلاڪ",
            d: "هڪ ڏينهن",
            dd: "%d ڏينهن",
            M: "هڪ مهينو",
            MM: "%d مهينا",
            y: "هڪ سال",
            yy: "%d سال",
          },
          preparse: function (e) {
            return e.replace(/،/g, ",");
          },
          postformat: function (e) {
            return e.replace(/,/g, "،");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("se", {
          months:
            "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split(
              "_"
            ),
          monthsShort:
            "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split(
              "_"
            ),
          weekdays:
            "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split(
              "_"
            ),
          weekdaysShort: "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
          weekdaysMin: "s_v_m_g_d_b_L".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "MMMM D. [b.] YYYY",
            LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
            LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm",
          },
          calendar: {
            sameDay: "[otne ti] LT",
            nextDay: "[ihttin ti] LT",
            nextWeek: "dddd [ti] LT",
            lastDay: "[ikte ti] LT",
            lastWeek: "[ovddit] dddd [ti] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s geažes",
            past: "maŋit %s",
            s: "moadde sekunddat",
            ss: "%d sekunddat",
            m: "okta minuhta",
            mm: "%d minuhtat",
            h: "okta diimmu",
            hh: "%d diimmut",
            d: "okta beaivi",
            dd: "%d beaivvit",
            M: "okta mánnu",
            MM: "%d mánut",
            y: "okta jahki",
            yy: "%d jagit",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("si", {
          months:
            "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split(
              "_"
            ),
          monthsShort:
            "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
          weekdays:
            "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split(
              "_"
            ),
          weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
          weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "a h:mm",
            LTS: "a h:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY MMMM D",
            LLL: "YYYY MMMM D, a h:mm",
            LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss",
          },
          calendar: {
            sameDay: "[අද] LT[ට]",
            nextDay: "[හෙට] LT[ට]",
            nextWeek: "dddd LT[ට]",
            lastDay: "[ඊයේ] LT[ට]",
            lastWeek: "[පසුගිය] dddd LT[ට]",
            sameElse: "L",
          },
          relativeTime: {
            future: "%sකින්",
            past: "%sකට පෙර",
            s: "තත්පර කිහිපය",
            ss: "තත්පර %d",
            m: "මිනිත්තුව",
            mm: "මිනිත්තු %d",
            h: "පැය",
            hh: "පැය %d",
            d: "දිනය",
            dd: "දින %d",
            M: "මාසය",
            MM: "මාස %d",
            y: "වසර",
            yy: "වසර %d",
          },
          dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
          ordinal: function (e) {
            return e + " වැනි";
          },
          meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
          isPM: function (e) {
            return "ප.ව." === e || "පස් වරු" === e;
          },
          meridiem: function (e, a, t) {
            return e > 11 ? (t ? "ප.ව." : "පස් වරු") : t ? "පෙ.ව." : "පෙර වරු";
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a =
            "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split(
              "_"
            ),
          t = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");
        function n(e) {
          return e > 1 && e < 5;
        }
        function i(e, a, t, i) {
          var r = e + " ";
          switch (t) {
            case "s":
              return a || i ? "pár sekúnd" : "pár sekundami";
            case "ss":
              return a || i
                ? r + (n(e) ? "sekundy" : "sekúnd")
                : r + "sekundami";
            case "m":
              return a ? "minúta" : i ? "minútu" : "minútou";
            case "mm":
              return a || i ? r + (n(e) ? "minúty" : "minút") : r + "minútami";
            case "h":
              return a ? "hodina" : i ? "hodinu" : "hodinou";
            case "hh":
              return a || i ? r + (n(e) ? "hodiny" : "hodín") : r + "hodinami";
            case "d":
              return a || i ? "deň" : "dňom";
            case "dd":
              return a || i ? r + (n(e) ? "dni" : "dní") : r + "dňami";
            case "M":
              return a || i ? "mesiac" : "mesiacom";
            case "MM":
              return a || i
                ? r + (n(e) ? "mesiace" : "mesiacov")
                : r + "mesiacmi";
            case "y":
              return a || i ? "rok" : "rokom";
            case "yy":
              return a || i ? r + (n(e) ? "roky" : "rokov") : r + "rokmi";
          }
        }
        e.defineLocale("sk", {
          months: a,
          monthsShort: t,
          weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split(
            "_"
          ),
          weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
          weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[dnes o] LT",
            nextDay: "[zajtra o] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[v nedeľu o] LT";
                case 1:
                case 2:
                  return "[v] dddd [o] LT";
                case 3:
                  return "[v stredu o] LT";
                case 4:
                  return "[vo štvrtok o] LT";
                case 5:
                  return "[v piatok o] LT";
                case 6:
                  return "[v sobotu o] LT";
              }
            },
            lastDay: "[včera o] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[minulú nedeľu o] LT";
                case 1:
                case 2:
                  return "[minulý] dddd [o] LT";
                case 3:
                  return "[minulú stredu o] LT";
                case 4:
                case 5:
                  return "[minulý] dddd [o] LT";
                case 6:
                  return "[minulú sobotu o] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "pred %s",
            s: i,
            ss: i,
            m: i,
            mm: i,
            h: i,
            hh: i,
            d: i,
            dd: i,
            M: i,
            MM: i,
            y: i,
            yy: i,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = e + " ";
          switch (t) {
            case "s":
              return a || n ? "nekaj sekund" : "nekaj sekundami";
            case "ss":
              return (i +=
                1 === e
                  ? a
                    ? "sekundo"
                    : "sekundi"
                  : 2 === e
                  ? a || n
                    ? "sekundi"
                    : "sekundah"
                  : e < 5
                  ? a || n
                    ? "sekunde"
                    : "sekundah"
                  : "sekund");
            case "m":
              return a ? "ena minuta" : "eno minuto";
            case "mm":
              return (i +=
                1 === e
                  ? a
                    ? "minuta"
                    : "minuto"
                  : 2 === e
                  ? a || n
                    ? "minuti"
                    : "minutama"
                  : e < 5
                  ? a || n
                    ? "minute"
                    : "minutami"
                  : a || n
                  ? "minut"
                  : "minutami");
            case "h":
              return a ? "ena ura" : "eno uro";
            case "hh":
              return (i +=
                1 === e
                  ? a
                    ? "ura"
                    : "uro"
                  : 2 === e
                  ? a || n
                    ? "uri"
                    : "urama"
                  : e < 5
                  ? a || n
                    ? "ure"
                    : "urami"
                  : a || n
                  ? "ur"
                  : "urami");
            case "d":
              return a || n ? "en dan" : "enim dnem";
            case "dd":
              return (i +=
                1 === e
                  ? a || n
                    ? "dan"
                    : "dnem"
                  : 2 === e
                  ? a || n
                    ? "dni"
                    : "dnevoma"
                  : a || n
                  ? "dni"
                  : "dnevi");
            case "M":
              return a || n ? "en mesec" : "enim mesecem";
            case "MM":
              return (i +=
                1 === e
                  ? a || n
                    ? "mesec"
                    : "mesecem"
                  : 2 === e
                  ? a || n
                    ? "meseca"
                    : "mesecema"
                  : e < 5
                  ? a || n
                    ? "mesece"
                    : "meseci"
                  : a || n
                  ? "mesecev"
                  : "meseci");
            case "y":
              return a || n ? "eno leto" : "enim letom";
            case "yy":
              return (i +=
                1 === e
                  ? a || n
                    ? "leto"
                    : "letom"
                  : 2 === e
                  ? a || n
                    ? "leti"
                    : "letoma"
                  : e < 5
                  ? a || n
                    ? "leta"
                    : "leti"
                  : a || n
                  ? "let"
                  : "leti");
          }
        }
        e.defineLocale("sl", {
          months:
            "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split(
              "_"
            ),
          monthsShort:
            "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
          weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[danes ob] LT",
            nextDay: "[jutri ob] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[v] [nedeljo] [ob] LT";
                case 3:
                  return "[v] [sredo] [ob] LT";
                case 6:
                  return "[v] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[v] dddd [ob] LT";
              }
            },
            lastDay: "[včeraj ob] LT",
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[prejšnjo] [nedeljo] [ob] LT";
                case 3:
                  return "[prejšnjo] [sredo] [ob] LT";
                case 6:
                  return "[prejšnjo] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prejšnji] dddd [ob] LT";
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "čez %s",
            past: "pred %s",
            s: a,
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("sq", {
          months:
            "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split(
              "_"
            ),
          monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split(
            "_"
          ),
          weekdays:
            "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split(
              "_"
            ),
          weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
          weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
          weekdaysParseExact: !0,
          meridiemParse: /PD|MD/,
          isPM: function (e) {
            return "M" === e.charAt(0);
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "PD" : "MD";
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Sot në] LT",
            nextDay: "[Nesër në] LT",
            nextWeek: "dddd [në] LT",
            lastDay: "[Dje në] LT",
            lastWeek: "dddd [e kaluar në] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "në %s",
            past: "%s më parë",
            s: "disa sekonda",
            ss: "%d sekonda",
            m: "një minutë",
            mm: "%d minuta",
            h: "një orë",
            hh: "%d orë",
            d: "një ditë",
            dd: "%d ditë",
            M: "një muaj",
            MM: "%d muaj",
            y: "një vit",
            yy: "%d vite",
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          words: {
            ss: ["sekunda", "sekunde", "sekundi"],
            m: ["jedan minut", "jedne minute"],
            mm: ["minut", "minute", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mesec", "meseca", "meseci"],
            yy: ["godina", "godine", "godina"],
          },
          correctGrammaticalCase: function (e, a) {
            return 1 === e ? a[0] : e >= 2 && e <= 4 ? a[1] : a[2];
          },
          translate: function (e, t, n) {
            var i = a.words[n];
            return 1 === n.length
              ? t
                ? i[0]
                : i[1]
              : e + " " + a.correctGrammaticalCase(e, i);
          },
        };
        e.defineLocale("sr", {
          months:
            "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
              "_"
            ),
          monthsShort:
            "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),
          weekdaysShort: "ned._pon._uto._sre._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[u] [nedelju] [u] LT";
                case 3:
                  return "[u] [sredu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[juče u] LT",
            lastWeek: function () {
              return [
                "[prošle] [nedelje] [u] LT",
                "[prošlog] [ponedeljka] [u] LT",
                "[prošlog] [utorka] [u] LT",
                "[prošle] [srede] [u] LT",
                "[prošlog] [četvrtka] [u] LT",
                "[prošlog] [petka] [u] LT",
                "[prošle] [subote] [u] LT",
              ][this.day()];
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "za %s",
            past: "pre %s",
            s: "nekoliko sekundi",
            ss: a.translate,
            m: a.translate,
            mm: a.translate,
            h: a.translate,
            hh: a.translate,
            d: "dan",
            dd: a.translate,
            M: "mesec",
            MM: a.translate,
            y: "godinu",
            yy: a.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          words: {
            ss: ["секунда", "секунде", "секунди"],
            m: ["један минут", "једне минуте"],
            mm: ["минут", "минуте", "минута"],
            h: ["један сат", "једног сата"],
            hh: ["сат", "сата", "сати"],
            dd: ["дан", "дана", "дана"],
            MM: ["месец", "месеца", "месеци"],
            yy: ["година", "године", "година"],
          },
          correctGrammaticalCase: function (e, a) {
            return 1 === e ? a[0] : e >= 2 && e <= 4 ? a[1] : a[2];
          },
          translate: function (e, t, n) {
            var i = a.words[n];
            return 1 === n.length
              ? t
                ? i[0]
                : i[1]
              : e + " " + a.correctGrammaticalCase(e, i);
          },
        };
        e.defineLocale("sr-cyrl", {
          months:
            "јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split(
              "_"
            ),
          monthsShort:
            "јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "недеља_понедељак_уторак_среда_четвртак_петак_субота".split(
            "_"
          ),
          weekdaysShort: "нед._пон._уто._сре._чет._пет._суб.".split("_"),
          weekdaysMin: "не_по_ут_ср_че_пе_су".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm",
          },
          calendar: {
            sameDay: "[данас у] LT",
            nextDay: "[сутра у] LT",
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return "[у] [недељу] [у] LT";
                case 3:
                  return "[у] [среду] [у] LT";
                case 6:
                  return "[у] [суботу] [у] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[у] dddd [у] LT";
              }
            },
            lastDay: "[јуче у] LT",
            lastWeek: function () {
              return [
                "[прошле] [недеље] [у] LT",
                "[прошлог] [понедељка] [у] LT",
                "[прошлог] [уторка] [у] LT",
                "[прошле] [среде] [у] LT",
                "[прошлог] [четвртка] [у] LT",
                "[прошлог] [петка] [у] LT",
                "[прошле] [суботе] [у] LT",
              ][this.day()];
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "за %s",
            past: "пре %s",
            s: "неколико секунди",
            ss: a.translate,
            m: a.translate,
            mm: a.translate,
            h: a.translate,
            hh: a.translate,
            d: "дан",
            dd: a.translate,
            M: "месец",
            MM: a.translate,
            y: "годину",
            yy: a.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ss", {
          months:
            "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
              "_"
            ),
          monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split(
            "_"
          ),
          weekdays:
            "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split(
              "_"
            ),
          weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
          weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendar: {
            sameDay: "[Namuhla nga] LT",
            nextDay: "[Kusasa nga] LT",
            nextWeek: "dddd [nga] LT",
            lastDay: "[Itolo nga] LT",
            lastWeek: "dddd [leliphelile] [nga] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "nga %s",
            past: "wenteka nga %s",
            s: "emizuzwana lomcane",
            ss: "%d mzuzwana",
            m: "umzuzu",
            mm: "%d emizuzu",
            h: "lihora",
            hh: "%d emahora",
            d: "lilanga",
            dd: "%d emalanga",
            M: "inyanga",
            MM: "%d tinyanga",
            y: "umnyaka",
            yy: "%d iminyaka",
          },
          meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
          meridiem: function (e, a, t) {
            return e < 11
              ? "ekuseni"
              : e < 15
              ? "emini"
              : e < 19
              ? "entsambama"
              : "ebusuku";
          },
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "ekuseni" === a
                ? e
                : "emini" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "entsambama" === a || "ebusuku" === a
                ? 0 === e
                  ? 0
                  : e + 12
                : void 0
            );
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: "%d",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("sv", {
          months:
            "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split(
              "_"
            ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split(
            "_"
          ),
          weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
          weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd D MMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Idag] LT",
            nextDay: "[Imorgon] LT",
            lastDay: "[Igår] LT",
            nextWeek: "[På] dddd LT",
            lastWeek: "[I] dddd[s] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "om %s",
            past: "för %s sedan",
            s: "några sekunder",
            ss: "%d sekunder",
            m: "en minut",
            mm: "%d minuter",
            h: "en timme",
            hh: "%d timmar",
            d: "en dag",
            dd: "%d dagar",
            M: "en månad",
            MM: "%d månader",
            y: "ett år",
            yy: "%d år",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "e"
                : 1 === a
                ? "a"
                : 2 === a
                ? "a"
                : "e")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("sw", {
          months:
            "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split(
              "_"
            ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays:
            "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split(
              "_"
            ),
          weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
          weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[leo saa] LT",
            nextDay: "[kesho saa] LT",
            nextWeek: "[wiki ijayo] dddd [saat] LT",
            lastDay: "[jana] LT",
            lastWeek: "[wiki iliyopita] dddd [saat] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s baadaye",
            past: "tokea %s",
            s: "hivi punde",
            ss: "sekunde %d",
            m: "dakika moja",
            mm: "dakika %d",
            h: "saa limoja",
            hh: "masaa %d",
            d: "siku moja",
            dd: "masiku %d",
            M: "mwezi mmoja",
            MM: "miezi %d",
            y: "mwaka mmoja",
            yy: "miaka %d",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
            1: "௧",
            2: "௨",
            3: "௩",
            4: "௪",
            5: "௫",
            6: "௬",
            7: "௭",
            8: "௮",
            9: "௯",
            0: "௦",
          },
          t = {
            "௧": "1",
            "௨": "2",
            "௩": "3",
            "௪": "4",
            "௫": "5",
            "௬": "6",
            "௭": "7",
            "௮": "8",
            "௯": "9",
            "௦": "0",
          };
        e.defineLocale("ta", {
          months:
            "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
              "_"
            ),
          monthsShort:
            "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
              "_"
            ),
          weekdays:
            "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split(
              "_"
            ),
          weekdaysShort:
            "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
          weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, HH:mm",
            LLLL: "dddd, D MMMM YYYY, HH:mm",
          },
          calendar: {
            sameDay: "[இன்று] LT",
            nextDay: "[நாளை] LT",
            nextWeek: "dddd, LT",
            lastDay: "[நேற்று] LT",
            lastWeek: "[கடந்த வாரம்] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s இல்",
            past: "%s முன்",
            s: "ஒரு சில விநாடிகள்",
            ss: "%d விநாடிகள்",
            m: "ஒரு நிமிடம்",
            mm: "%d நிமிடங்கள்",
            h: "ஒரு மணி நேரம்",
            hh: "%d மணி நேரம்",
            d: "ஒரு நாள்",
            dd: "%d நாட்கள்",
            M: "ஒரு மாதம்",
            MM: "%d மாதங்கள்",
            y: "ஒரு வருடம்",
            yy: "%d ஆண்டுகள்",
          },
          dayOfMonthOrdinalParse: /\d{1,2}வது/,
          ordinal: function (e) {
            return e + "வது";
          },
          preparse: function (e) {
            return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (e) {
              return t[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return a[e];
            });
          },
          meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
          meridiem: function (e, a, t) {
            return e < 2
              ? " யாமம்"
              : e < 6
              ? " வைகறை"
              : e < 10
              ? " காலை"
              : e < 14
              ? " நண்பகல்"
              : e < 18
              ? " எற்பாடு"
              : e < 22
              ? " மாலை"
              : " யாமம்";
          },
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "யாமம்" === a
                ? e < 2
                  ? e
                  : e + 12
                : "வைகறை" === a || "காலை" === a
                ? e
                : "நண்பகல்" === a && e >= 10
                ? e
                : e + 12
            );
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("te", {
          months:
            "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split(
              "_"
            ),
          monthsShort:
            "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split(
              "_"
            ),
          weekdaysShort: "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
          weekdaysMin: "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm",
          },
          calendar: {
            sameDay: "[నేడు] LT",
            nextDay: "[రేపు] LT",
            nextWeek: "dddd, LT",
            lastDay: "[నిన్న] LT",
            lastWeek: "[గత] dddd, LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s లో",
            past: "%s క్రితం",
            s: "కొన్ని క్షణాలు",
            ss: "%d సెకన్లు",
            m: "ఒక నిమిషం",
            mm: "%d నిమిషాలు",
            h: "ఒక గంట",
            hh: "%d గంటలు",
            d: "ఒక రోజు",
            dd: "%d రోజులు",
            M: "ఒక నెల",
            MM: "%d నెలలు",
            y: "ఒక సంవత్సరం",
            yy: "%d సంవత్సరాలు",
          },
          dayOfMonthOrdinalParse: /\d{1,2}వ/,
          ordinal: "%dవ",
          meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "రాత్రి" === a
                ? e < 4
                  ? e
                  : e + 12
                : "ఉదయం" === a
                ? e
                : "మధ్యాహ్నం" === a
                ? e >= 10
                  ? e
                  : e + 12
                : "సాయంత్రం" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "రాత్రి"
              : e < 10
              ? "ఉదయం"
              : e < 17
              ? "మధ్యాహ్నం"
              : e < 20
              ? "సాయంత్రం"
              : "రాత్రి";
          },
          week: { dow: 0, doy: 6 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("tet", {
          months:
            "Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split(
              "_"
            ),
          monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split(
            "_"
          ),
          weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split(
            "_"
          ),
          weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
          weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Ohin iha] LT",
            nextDay: "[Aban iha] LT",
            nextWeek: "dddd [iha] LT",
            lastDay: "[Horiseik iha] LT",
            lastWeek: "dddd [semana kotuk] [iha] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "iha %s",
            past: "%s liuba",
            s: "minutu balun",
            ss: "minutu %d",
            m: "minutu ida",
            mm: "minutu %d",
            h: "oras ida",
            hh: "oras %d",
            d: "loron ida",
            dd: "loron %d",
            M: "fulan ida",
            MM: "fulan %d",
            y: "tinan ida",
            yy: "tinan %d",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          0: "-ум",
          1: "-ум",
          2: "-юм",
          3: "-юм",
          4: "-ум",
          5: "-ум",
          6: "-ум",
          7: "-ум",
          8: "-ум",
          9: "-ум",
          10: "-ум",
          12: "-ум",
          13: "-ум",
          20: "-ум",
          30: "-юм",
          40: "-ум",
          50: "-ум",
          60: "-ум",
          70: "-ум",
          80: "-ум",
          90: "-ум",
          100: "-ум",
        };
        e.defineLocale("tg", {
          months:
            "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split(
              "_"
            ),
          monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split(
            "_"
          ),
          weekdays:
            "якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),
          weekdaysShort: "яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),
          weekdaysMin: "яш_дш_сш_чш_пш_ҷм_шб".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Имрӯз соати] LT",
            nextDay: "[Пагоҳ соати] LT",
            lastDay: "[Дирӯз соати] LT",
            nextWeek: "dddd[и] [ҳафтаи оянда соати] LT",
            lastWeek: "dddd[и] [ҳафтаи гузашта соати] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "баъди %s",
            past: "%s пеш",
            s: "якчанд сония",
            m: "як дақиқа",
            mm: "%d дақиқа",
            h: "як соат",
            hh: "%d соат",
            d: "як рӯз",
            dd: "%d рӯз",
            M: "як моҳ",
            MM: "%d моҳ",
            y: "як сол",
            yy: "%d сол",
          },
          meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "шаб" === a
                ? e < 4
                  ? e
                  : e + 12
                : "субҳ" === a
                ? e
                : "рӯз" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "бегоҳ" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "шаб"
              : e < 11
              ? "субҳ"
              : e < 16
              ? "рӯз"
              : e < 19
              ? "бегоҳ"
              : "шаб";
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
          ordinal: function (e) {
            return e + (a[e] || a[e % 10] || a[e >= 100 ? 100 : null]);
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("th", {
          months:
            "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split(
              "_"
            ),
          monthsShort:
            "ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
          weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split(
            "_"
          ),
          weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY เวลา H:mm",
            LLLL: "วันddddที่ D MMMM YYYY เวลา H:mm",
          },
          meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
          isPM: function (e) {
            return "หลังเที่ยง" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "ก่อนเที่ยง" : "หลังเที่ยง";
          },
          calendar: {
            sameDay: "[วันนี้ เวลา] LT",
            nextDay: "[พรุ่งนี้ เวลา] LT",
            nextWeek: "dddd[หน้า เวลา] LT",
            lastDay: "[เมื่อวานนี้ เวลา] LT",
            lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "อีก %s",
            past: "%sที่แล้ว",
            s: "ไม่กี่วินาที",
            ss: "%d วินาที",
            m: "1 นาที",
            mm: "%d นาที",
            h: "1 ชั่วโมง",
            hh: "%d ชั่วโมง",
            d: "1 วัน",
            dd: "%d วัน",
            M: "1 เดือน",
            MM: "%d เดือน",
            y: "1 ปี",
            yy: "%d ปี",
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("tl-ph", {
          months:
            "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split(
              "_"
            ),
          monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split(
            "_"
          ),
          weekdays:
            "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
          weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
          weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "MM/D/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY HH:mm",
            LLLL: "dddd, MMMM DD, YYYY HH:mm",
          },
          calendar: {
            sameDay: "LT [ngayong araw]",
            nextDay: "[Bukas ng] LT",
            nextWeek: "LT [sa susunod na] dddd",
            lastDay: "LT [kahapon]",
            lastWeek: "LT [noong nakaraang] dddd",
            sameElse: "L",
          },
          relativeTime: {
            future: "sa loob ng %s",
            past: "%s ang nakalipas",
            s: "ilang segundo",
            ss: "%d segundo",
            m: "isang minuto",
            mm: "%d minuto",
            h: "isang oras",
            hh: "%d oras",
            d: "isang araw",
            dd: "%d araw",
            M: "isang buwan",
            MM: "%d buwan",
            y: "isang taon",
            yy: "%d taon",
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function (e) {
            return e;
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");
        function t(e, t, n, i) {
          var r = (function (e) {
            var t = Math.floor((e % 1e3) / 100),
              n = Math.floor((e % 100) / 10),
              i = e % 10,
              r = "";
            return (
              t > 0 && (r += a[t] + "vatlh"),
              n > 0 && (r += ("" !== r ? " " : "") + a[n] + "maH"),
              i > 0 && (r += ("" !== r ? " " : "") + a[i]),
              "" === r ? "pagh" : r
            );
          })(e);
          switch (n) {
            case "ss":
              return r + " lup";
            case "mm":
              return r + " tup";
            case "hh":
              return r + " rep";
            case "dd":
              return r + " jaj";
            case "MM":
              return r + " jar";
            case "yy":
              return r + " DIS";
          }
        }
        e.defineLocale("tlh", {
          months:
            "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split(
              "_"
            ),
          monthsShort:
            "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
              "_"
            ),
          weekdaysShort:
            "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
              "_"
            ),
          weekdaysMin:
            "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
              "_"
            ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[DaHjaj] LT",
            nextDay: "[wa’leS] LT",
            nextWeek: "LLL",
            lastDay: "[wa’Hu’] LT",
            lastWeek: "LLL",
            sameElse: "L",
          },
          relativeTime: {
            future: function (e) {
              var a = e;
              return (a =
                -1 !== e.indexOf("jaj")
                  ? a.slice(0, -3) + "leS"
                  : -1 !== e.indexOf("jar")
                  ? a.slice(0, -3) + "waQ"
                  : -1 !== e.indexOf("DIS")
                  ? a.slice(0, -3) + "nem"
                  : a + " pIq");
            },
            past: function (e) {
              var a = e;
              return (a =
                -1 !== e.indexOf("jaj")
                  ? a.slice(0, -3) + "Hu’"
                  : -1 !== e.indexOf("jar")
                  ? a.slice(0, -3) + "wen"
                  : -1 !== e.indexOf("DIS")
                  ? a.slice(0, -3) + "ben"
                  : a + " ret");
            },
            s: "puS lup",
            ss: t,
            m: "wa’ tup",
            mm: t,
            h: "wa’ rep",
            hh: t,
            d: "wa’ jaj",
            dd: t,
            M: "wa’ jar",
            MM: t,
            y: "wa’ DIS",
            yy: t,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = {
          1: "'inci",
          5: "'inci",
          8: "'inci",
          70: "'inci",
          80: "'inci",
          2: "'nci",
          7: "'nci",
          20: "'nci",
          50: "'nci",
          3: "'üncü",
          4: "'üncü",
          100: "'üncü",
          6: "'ncı",
          9: "'uncu",
          10: "'uncu",
          30: "'uncu",
          60: "'ıncı",
          90: "'ıncı",
        };
        e.defineLocale("tr", {
          months:
            "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split(
              "_"
            ),
          monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split(
            "_"
          ),
          weekdays:
            "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
          weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
          weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[bugün saat] LT",
            nextDay: "[yarın saat] LT",
            nextWeek: "[gelecek] dddd [saat] LT",
            lastDay: "[dün] LT",
            lastWeek: "[geçen] dddd [saat] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s sonra",
            past: "%s önce",
            s: "birkaç saniye",
            ss: "%d saniye",
            m: "bir dakika",
            mm: "%d dakika",
            h: "bir saat",
            hh: "%d saat",
            d: "bir gün",
            dd: "%d gün",
            M: "bir ay",
            MM: "%d ay",
            y: "bir yıl",
            yy: "%d yıl",
          },
          ordinal: function (e, t) {
            switch (t) {
              case "d":
              case "D":
              case "Do":
              case "DD":
                return e;
              default:
                if (0 === e) return e + "'ıncı";
                var n = e % 10;
                return (
                  e + (a[n] || a[(e % 100) - n] || a[e >= 100 ? 100 : null])
                );
            }
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t, n) {
          var i = {
            s: ["viensas secunds", "'iensas secunds"],
            ss: [e + " secunds", e + " secunds"],
            m: ["'n míut", "'iens míut"],
            mm: [e + " míuts", e + " míuts"],
            h: ["'n þora", "'iensa þora"],
            hh: [e + " þoras", e + " þoras"],
            d: ["'n ziua", "'iensa ziua"],
            dd: [e + " ziuas", e + " ziuas"],
            M: ["'n mes", "'iens mes"],
            MM: [e + " mesen", e + " mesen"],
            y: ["'n ar", "'iens ar"],
            yy: [e + " ars", e + " ars"],
          };
          return n ? i[t][0] : a ? i[t][0] : i[t][1];
        }
        e.defineLocale("tzl", {
          months:
            "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split(
              "_"
            ),
          monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split(
            "_"
          ),
          weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split(
            "_"
          ),
          weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
          weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM [dallas] YYYY",
            LLL: "D. MMMM [dallas] YYYY HH.mm",
            LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm",
          },
          meridiemParse: /d\'o|d\'a/i,
          isPM: function (e) {
            return "d'o" === e.toLowerCase();
          },
          meridiem: function (e, a, t) {
            return e > 11 ? (t ? "d'o" : "D'O") : t ? "d'a" : "D'A";
          },
          calendar: {
            sameDay: "[oxhi à] LT",
            nextDay: "[demà à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[ieiri à] LT",
            lastWeek: "[sür el] dddd [lasteu à] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "osprei %s",
            past: "ja%s",
            s: a,
            ss: a,
            m: a,
            mm: a,
            h: a,
            hh: a,
            d: a,
            dd: a,
            M: a,
            MM: a,
            y: a,
            yy: a,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("tzm", {
          months:
            "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
              "_"
            ),
          monthsShort:
            "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
              "_"
            ),
          weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split(
            "_"
          ),
          weekdaysShort:
            "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
          weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
            nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
            nextWeek: "dddd [ⴴ] LT",
            lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
            lastWeek: "dddd [ⴴ] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
            past: "ⵢⴰⵏ %s",
            s: "ⵉⵎⵉⴽ",
            ss: "%d ⵉⵎⵉⴽ",
            m: "ⵎⵉⵏⵓⴺ",
            mm: "%d ⵎⵉⵏⵓⴺ",
            h: "ⵙⴰⵄⴰ",
            hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
            d: "ⴰⵙⵙ",
            dd: "%d oⵙⵙⴰⵏ",
            M: "ⴰⵢoⵓⵔ",
            MM: "%d ⵉⵢⵢⵉⵔⵏ",
            y: "ⴰⵙⴳⴰⵙ",
            yy: "%d ⵉⵙⴳⴰⵙⵏ",
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("tzm-latn", {
          months:
            "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
              "_"
            ),
          monthsShort:
            "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
              "_"
            ),
          weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split(
            "_"
          ),
          weekdaysShort:
            "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
          weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[asdkh g] LT",
            nextDay: "[aska g] LT",
            nextWeek: "dddd [g] LT",
            lastDay: "[assant g] LT",
            lastWeek: "dddd [g] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "dadkh s yan %s",
            past: "yan %s",
            s: "imik",
            ss: "%d imik",
            m: "minuḍ",
            mm: "%d minuḍ",
            h: "saɛa",
            hh: "%d tassaɛin",
            d: "ass",
            dd: "%d ossan",
            M: "ayowr",
            MM: "%d iyyirn",
            y: "asgas",
            yy: "%d isgasn",
          },
          week: { dow: 6, doy: 12 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("ug-cn", {
          months:
            "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split(
              "_"
            ),
          monthsShort:
            "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split(
              "_"
            ),
          weekdays:
            "يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),
          weekdaysShort: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
          weekdaysMin: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY-يىلىM-ئاينىڭD-كۈنى",
            LLL: "YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",
            LLLL: "dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",
          },
          meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "يېرىم كېچە" === a || "سەھەر" === a || "چۈشتىن بۇرۇن" === a
                ? e
                : "چۈشتىن كېيىن" === a || "كەچ" === a
                ? e + 12
                : e >= 11
                ? e
                : e + 12
            );
          },
          meridiem: function (e, a, t) {
            var n = 100 * e + a;
            return n < 600
              ? "يېرىم كېچە"
              : n < 900
              ? "سەھەر"
              : n < 1130
              ? "چۈشتىن بۇرۇن"
              : n < 1230
              ? "چۈش"
              : n < 1800
              ? "چۈشتىن كېيىن"
              : "كەچ";
          },
          calendar: {
            sameDay: "[بۈگۈن سائەت] LT",
            nextDay: "[ئەتە سائەت] LT",
            nextWeek: "[كېلەركى] dddd [سائەت] LT",
            lastDay: "[تۆنۈگۈن] LT",
            lastWeek: "[ئالدىنقى] dddd [سائەت] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s كېيىن",
            past: "%s بۇرۇن",
            s: "نەچچە سېكونت",
            ss: "%d سېكونت",
            m: "بىر مىنۇت",
            mm: "%d مىنۇت",
            h: "بىر سائەت",
            hh: "%d سائەت",
            d: "بىر كۈن",
            dd: "%d كۈن",
            M: "بىر ئاي",
            MM: "%d ئاي",
            y: "بىر يىل",
            yy: "%d يىل",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "-كۈنى";
              case "w":
              case "W":
                return e + "-ھەپتە";
              default:
                return e;
            }
          },
          preparse: function (e) {
            return e.replace(/،/g, ",");
          },
          postformat: function (e) {
            return e.replace(/,/g, "،");
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        function a(e, a, t) {
          var n, i;
          return "m" === t
            ? a
              ? "хвилина"
              : "хвилину"
            : "h" === t
            ? a
              ? "година"
              : "годину"
            : e +
              " " +
              ((n = +e),
              (i = {
                ss: a ? "секунда_секунди_секунд" : "секунду_секунди_секунд",
                mm: a ? "хвилина_хвилини_хвилин" : "хвилину_хвилини_хвилин",
                hh: a ? "година_години_годин" : "годину_години_годин",
                dd: "день_дні_днів",
                MM: "місяць_місяці_місяців",
                yy: "рік_роки_років",
              }[t].split("_")),
              n % 10 == 1 && n % 100 != 11
                ? i[0]
                : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)
                ? i[1]
                : i[2]);
        }
        function t(e) {
          return function () {
            return e + "о" + (11 === this.hours() ? "б" : "") + "] LT";
          };
        }
        e.defineLocale("uk", {
          months: {
            format:
              "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split(
                "_"
              ),
            standalone:
              "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split(
                "_"
              ),
          },
          monthsShort:
            "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
          weekdays: function (e, a) {
            var t = {
              nominative:
                "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split(
                  "_"
                ),
              accusative:
                "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split(
                  "_"
                ),
              genitive:
                "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split(
                  "_"
                ),
            };
            return !0 === e
              ? t.nominative.slice(1, 7).concat(t.nominative.slice(0, 1))
              : e
              ? t[
                  /(\[[ВвУу]\]) ?dddd/.test(a)
                    ? "accusative"
                    : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(a)
                    ? "genitive"
                    : "nominative"
                ][e.day()]
              : t.nominative;
          },
          weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY р.",
            LLL: "D MMMM YYYY р., HH:mm",
            LLLL: "dddd, D MMMM YYYY р., HH:mm",
          },
          calendar: {
            sameDay: t("[Сьогодні "),
            nextDay: t("[Завтра "),
            lastDay: t("[Вчора "),
            nextWeek: t("[У] dddd ["),
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return t("[Минулої] dddd [").call(this);
                case 1:
                case 2:
                case 4:
                  return t("[Минулого] dddd [").call(this);
              }
            },
            sameElse: "L",
          },
          relativeTime: {
            future: "за %s",
            past: "%s тому",
            s: "декілька секунд",
            ss: a,
            m: a,
            mm: a,
            h: "годину",
            hh: a,
            d: "день",
            dd: a,
            M: "місяць",
            MM: a,
            y: "рік",
            yy: a,
          },
          meridiemParse: /ночі|ранку|дня|вечора/,
          isPM: function (e) {
            return /^(дня|вечора)$/.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 4
              ? "ночі"
              : e < 12
              ? "ранку"
              : e < 17
              ? "дня"
              : "вечора";
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
          ordinal: function (e, a) {
            switch (a) {
              case "M":
              case "d":
              case "DDD":
              case "w":
              case "W":
                return e + "-й";
              case "D":
                return e + "-го";
              default:
                return e;
            }
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        var a = [
            "جنوری",
            "فروری",
            "مارچ",
            "اپریل",
            "مئی",
            "جون",
            "جولائی",
            "اگست",
            "ستمبر",
            "اکتوبر",
            "نومبر",
            "دسمبر",
          ],
          t = ["اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"];
        e.defineLocale("ur", {
          months: a,
          monthsShort: a,
          weekdays: t,
          weekdaysShort: t,
          weekdaysMin: t,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd، D MMMM YYYY HH:mm",
          },
          meridiemParse: /صبح|شام/,
          isPM: function (e) {
            return "شام" === e;
          },
          meridiem: function (e, a, t) {
            return e < 12 ? "صبح" : "شام";
          },
          calendar: {
            sameDay: "[آج بوقت] LT",
            nextDay: "[کل بوقت] LT",
            nextWeek: "dddd [بوقت] LT",
            lastDay: "[گذشتہ روز بوقت] LT",
            lastWeek: "[گذشتہ] dddd [بوقت] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s بعد",
            past: "%s قبل",
            s: "چند سیکنڈ",
            ss: "%d سیکنڈ",
            m: "ایک منٹ",
            mm: "%d منٹ",
            h: "ایک گھنٹہ",
            hh: "%d گھنٹے",
            d: "ایک دن",
            dd: "%d دن",
            M: "ایک ماہ",
            MM: "%d ماہ",
            y: "ایک سال",
            yy: "%d سال",
          },
          preparse: function (e) {
            return e.replace(/،/g, ",");
          },
          postformat: function (e) {
            return e.replace(/,/g, "،");
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("uz", {
          months:
            "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split(
              "_"
            ),
          monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split(
            "_"
          ),
          weekdays:
            "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
          weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
          weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm",
          },
          calendar: {
            sameDay: "[Бугун соат] LT [да]",
            nextDay: "[Эртага] LT [да]",
            nextWeek: "dddd [куни соат] LT [да]",
            lastDay: "[Кеча соат] LT [да]",
            lastWeek: "[Утган] dddd [куни соат] LT [да]",
            sameElse: "L",
          },
          relativeTime: {
            future: "Якин %s ичида",
            past: "Бир неча %s олдин",
            s: "фурсат",
            ss: "%d фурсат",
            m: "бир дакика",
            mm: "%d дакика",
            h: "бир соат",
            hh: "%d соат",
            d: "бир кун",
            dd: "%d кун",
            M: "бир ой",
            MM: "%d ой",
            y: "бир йил",
            yy: "%d йил",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("uz-latn", {
          months:
            "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split(
              "_"
            ),
          monthsShort:
            "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),
          weekdays:
            "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split(
              "_"
            ),
          weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
          weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm",
          },
          calendar: {
            sameDay: "[Bugun soat] LT [da]",
            nextDay: "[Ertaga] LT [da]",
            nextWeek: "dddd [kuni soat] LT [da]",
            lastDay: "[Kecha soat] LT [da]",
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: "L",
          },
          relativeTime: {
            future: "Yaqin %s ichida",
            past: "Bir necha %s oldin",
            s: "soniya",
            ss: "%d soniya",
            m: "bir daqiqa",
            mm: "%d daqiqa",
            h: "bir soat",
            hh: "%d soat",
            d: "bir kun",
            dd: "%d kun",
            M: "bir oy",
            MM: "%d oy",
            y: "bir yil",
            yy: "%d yil",
          },
          week: { dow: 1, doy: 7 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("vi", {
          months:
            "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split(
              "_"
            ),
          monthsShort:
            "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
          weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
          weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
          weekdaysParseExact: !0,
          meridiemParse: /sa|ch/i,
          isPM: function (e) {
            return /^ch$/i.test(e);
          },
          meridiem: function (e, a, t) {
            return e < 12 ? (t ? "sa" : "SA") : t ? "ch" : "CH";
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [năm] YYYY",
            LLL: "D MMMM [năm] YYYY HH:mm",
            LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
            l: "DD/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[Hôm nay lúc] LT",
            nextDay: "[Ngày mai lúc] LT",
            nextWeek: "dddd [tuần tới lúc] LT",
            lastDay: "[Hôm qua lúc] LT",
            lastWeek: "dddd [tuần rồi lúc] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "%s tới",
            past: "%s trước",
            s: "vài giây",
            ss: "%d giây",
            m: "một phút",
            mm: "%d phút",
            h: "một giờ",
            hh: "%d giờ",
            d: "một ngày",
            dd: "%d ngày",
            M: "một tháng",
            MM: "%d tháng",
            y: "một năm",
            yy: "%d năm",
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function (e) {
            return e;
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("x-pseudo", {
          months:
            "J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split(
              "_"
            ),
          monthsShort:
            "J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split(
              "_"
            ),
          monthsParseExact: !0,
          weekdays:
            "S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split(
              "_"
            ),
          weekdaysShort: "S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),
          weekdaysMin: "S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: "HH:mm",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm",
          },
          calendar: {
            sameDay: "[T~ódá~ý át] LT",
            nextDay: "[T~ómó~rró~w át] LT",
            nextWeek: "dddd [át] LT",
            lastDay: "[Ý~ést~érdá~ý át] LT",
            lastWeek: "[L~ást] dddd [át] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "í~ñ %s",
            past: "%s á~gó",
            s: "á ~féw ~sécó~ñds",
            ss: "%d s~écóñ~ds",
            m: "á ~míñ~úté",
            mm: "%d m~íñú~tés",
            h: "á~ñ hó~úr",
            hh: "%d h~óúrs",
            d: "á ~dáý",
            dd: "%d d~áýs",
            M: "á ~móñ~th",
            MM: "%d m~óñt~hs",
            y: "á ~ýéár",
            yy: "%d ý~éárs",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function (e) {
            var a = e % 10;
            return (
              e +
              (1 == ~~((e % 100) / 10)
                ? "th"
                : 1 === a
                ? "st"
                : 2 === a
                ? "nd"
                : 3 === a
                ? "rd"
                : "th")
            );
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("yo", {
          months:
            "Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split(
              "_"
            ),
          monthsShort: "Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split(
            "_"
          ),
          weekdays: "Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),
          weekdaysShort: "Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),
          weekdaysMin: "Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A",
          },
          calendar: {
            sameDay: "[Ònì ni] LT",
            nextDay: "[Ọ̀la ni] LT",
            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
            lastDay: "[Àna ni] LT",
            lastWeek: "dddd [Ọsẹ̀ tólọ́] [ni] LT",
            sameElse: "L",
          },
          relativeTime: {
            future: "ní %s",
            past: "%s kọjá",
            s: "ìsẹjú aayá die",
            ss: "aayá %d",
            m: "ìsẹjú kan",
            mm: "ìsẹjú %d",
            h: "wákati kan",
            hh: "wákati %d",
            d: "ọjọ́ kan",
            dd: "ọjọ́ %d",
            M: "osù kan",
            MM: "osù %d",
            y: "ọdún kan",
            yy: "ọdún %d",
          },
          dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
          ordinal: "ọjọ́ %d",
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("zh-cn", {
          months:
            "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
              "_"
            ),
          monthsShort:
            "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY年M月D日",
            LLL: "YYYY年M月D日Ah点mm分",
            LLLL: "YYYY年M月D日ddddAh点mm分",
            l: "YYYY/M/D",
            ll: "YYYY年M月D日",
            lll: "YYYY年M月D日 HH:mm",
            llll: "YYYY年M月D日dddd HH:mm",
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "凌晨" === a || "早上" === a || "上午" === a
                ? e
                : "下午" === a || "晚上" === a
                ? e + 12
                : e >= 11
                ? e
                : e + 12
            );
          },
          meridiem: function (e, a, t) {
            var n = 100 * e + a;
            return n < 600
              ? "凌晨"
              : n < 900
              ? "早上"
              : n < 1130
              ? "上午"
              : n < 1230
              ? "中午"
              : n < 1800
              ? "下午"
              : "晚上";
          },
          calendar: {
            sameDay: "[今天]LT",
            nextDay: "[明天]LT",
            nextWeek: "[下]ddddLT",
            lastDay: "[昨天]LT",
            lastWeek: "[上]ddddLT",
            sameElse: "L",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "日";
              case "M":
                return e + "月";
              case "w":
              case "W":
                return e + "周";
              default:
                return e;
            }
          },
          relativeTime: {
            future: "%s内",
            past: "%s前",
            s: "几秒",
            ss: "%d 秒",
            m: "1 分钟",
            mm: "%d 分钟",
            h: "1 小时",
            hh: "%d 小时",
            d: "1 天",
            dd: "%d 天",
            M: "1 个月",
            MM: "%d 个月",
            y: "1 年",
            yy: "%d 年",
          },
          week: { dow: 1, doy: 4 },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("zh-hk", {
          months:
            "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
              "_"
            ),
          monthsShort:
            "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY年M月D日",
            LLL: "YYYY年M月D日 HH:mm",
            LLLL: "YYYY年M月D日dddd HH:mm",
            l: "YYYY/M/D",
            ll: "YYYY年M月D日",
            lll: "YYYY年M月D日 HH:mm",
            llll: "YYYY年M月D日dddd HH:mm",
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "凌晨" === a || "早上" === a || "上午" === a
                ? e
                : "中午" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "下午" === a || "晚上" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            var n = 100 * e + a;
            return n < 600
              ? "凌晨"
              : n < 900
              ? "早上"
              : n < 1130
              ? "上午"
              : n < 1230
              ? "中午"
              : n < 1800
              ? "下午"
              : "晚上";
          },
          calendar: {
            sameDay: "[今天]LT",
            nextDay: "[明天]LT",
            nextWeek: "[下]ddddLT",
            lastDay: "[昨天]LT",
            lastWeek: "[上]ddddLT",
            sameElse: "L",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "日";
              case "M":
                return e + "月";
              case "w":
              case "W":
                return e + "週";
              default:
                return e;
            }
          },
          relativeTime: {
            future: "%s內",
            past: "%s前",
            s: "幾秒",
            ss: "%d 秒",
            m: "1 分鐘",
            mm: "%d 分鐘",
            h: "1 小時",
            hh: "%d 小時",
            d: "1 天",
            dd: "%d 天",
            M: "1 個月",
            MM: "%d 個月",
            y: "1 年",
            yy: "%d 年",
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      !(function (e) {
        "use strict";
        e.defineLocale("zh-tw", {
          months:
            "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
              "_"
            ),
          monthsShort:
            "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY年M月D日",
            LLL: "YYYY年M月D日 HH:mm",
            LLLL: "YYYY年M月D日dddd HH:mm",
            l: "YYYY/M/D",
            ll: "YYYY年M月D日",
            lll: "YYYY年M月D日 HH:mm",
            llll: "YYYY年M月D日dddd HH:mm",
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (e, a) {
            return (
              12 === e && (e = 0),
              "凌晨" === a || "早上" === a || "上午" === a
                ? e
                : "中午" === a
                ? e >= 11
                  ? e
                  : e + 12
                : "下午" === a || "晚上" === a
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, a, t) {
            var n = 100 * e + a;
            return n < 600
              ? "凌晨"
              : n < 900
              ? "早上"
              : n < 1130
              ? "上午"
              : n < 1230
              ? "中午"
              : n < 1800
              ? "下午"
              : "晚上";
          },
          calendar: {
            sameDay: "[今天] LT",
            nextDay: "[明天] LT",
            nextWeek: "[下]dddd LT",
            lastDay: "[昨天] LT",
            lastWeek: "[上]dddd LT",
            sameElse: "L",
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function (e, a) {
            switch (a) {
              case "d":
              case "D":
              case "DDD":
                return e + "日";
              case "M":
                return e + "月";
              case "w":
              case "W":
                return e + "週";
              default:
                return e;
            }
          },
          relativeTime: {
            future: "%s內",
            past: "%s前",
            s: "幾秒",
            ss: "%d 秒",
            m: "1 分鐘",
            mm: "%d 分鐘",
            h: "1 小時",
            hh: "%d 小時",
            d: "1 天",
            dd: "%d 天",
            M: "1 個月",
            MM: "%d 個月",
            y: "1 年",
            yy: "%d 年",
          },
        });
      })(t(0));
    },
    function (e, a, t) {
      var n;
      e.exports =
        ((n = t(0)),
        (function (e) {
          function a(n) {
            if (t[n]) return t[n].exports;
            var i = (t[n] = { i: n, l: !1, exports: {} });
            return e[n].call(i.exports, i, i.exports, a), (i.l = !0), i.exports;
          }
          var t = {};
          return (
            (a.m = e),
            (a.c = t),
            (a.i = function (e) {
              return e;
            }),
            (a.d = function (e, t, n) {
              a.o(e, t) ||
                Object.defineProperty(e, t, {
                  configurable: !1,
                  enumerable: !0,
                  get: n,
                });
            }),
            (a.n = function (e) {
              var t =
                e && e.__esModule
                  ? function () {
                      return e.default;
                    }
                  : function () {
                      return e;
                    };
              return a.d(t, "a", t), t;
            }),
            (a.o = function (e, a) {
              return Object.prototype.hasOwnProperty.call(e, a);
            }),
            (a.p = ""),
            a((a.s = 3))
          );
        })([
          function (e, a, t) {
            "use strict";
            var n = t(5)();
            e.exports = function (e) {
              return e !== n && null !== e;
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = t(18)() ? Symbol : t(20);
          },
          function (e, a) {
            e.exports = n;
          },
          function (e, a, t) {
            "use strict";
            function n(e) {
              return e && e.__esModule ? e : { default: e };
            }
            function i(e, a, t) {
              return (
                a in e
                  ? Object.defineProperty(e, a, {
                      value: t,
                      enumerable: !0,
                      configurable: !0,
                      writable: !0,
                    })
                  : (e[a] = t),
                e
              );
            }
            function r(e, a) {
              if (!(e instanceof a))
                throw new TypeError("Cannot call a class as a function");
            }
            function o(e) {
              return e.split("/");
            }
            Object.defineProperty(a, "__esModule", { value: !0 }),
              (a.DateRange = void 0);
            var s = function (e, a) {
                if (Array.isArray(e)) return e;
                if (Symbol.iterator in Object(e))
                  return (function (e, a) {
                    var t = [],
                      n = !0,
                      i = !1,
                      r = void 0;
                    try {
                      for (
                        var o, s = e[Symbol.iterator]();
                        !(n = (o = s.next()).done) &&
                        (t.push(o.value), !a || t.length !== a);
                        n = !0
                      );
                    } catch (e) {
                      (i = !0), (r = e);
                    } finally {
                      try {
                        !n && s.return && s.return();
                      } finally {
                        if (i) throw r;
                      }
                    }
                    return t;
                  })(e, a);
                throw new TypeError(
                  "Invalid attempt to destructure non-iterable instance"
                );
              },
              d =
                "function" == typeof Symbol &&
                "symbol" == typeof Symbol.iterator
                  ? function (e) {
                      return typeof e;
                    }
                  : function (e) {
                      return e &&
                        "function" == typeof Symbol &&
                        e.constructor === Symbol &&
                        e !== Symbol.prototype
                        ? "symbol"
                        : typeof e;
                    },
              u = (function () {
                function e(e, a) {
                  for (var t = 0; t < a.length; t++) {
                    var n = a[t];
                    (n.enumerable = n.enumerable || !1),
                      (n.configurable = !0),
                      "value" in n && (n.writable = !0),
                      Object.defineProperty(e, n.key, n);
                  }
                }
                return function (a, t, n) {
                  return t && e(a.prototype, t), n && e(a, n), a;
                };
              })();
            a.extendMoment = function (e) {
              return (
                (e.range = function (a, t) {
                  return "string" == typeof a && y.hasOwnProperty(a)
                    ? new c(e(this).startOf(a), e(this).endOf(a))
                    : new c(a, t);
                }),
                (e.rangeFromInterval = function (a) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 1,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : e();
                  if ((e.isMoment(n) || (n = e(n)), !n.isValid()))
                    throw new Error("Invalid date.");
                  var i = n.clone().add(t, a),
                    r = [];
                  return r.push(e.min(n, i)), r.push(e.max(n, i)), new c(r);
                }),
                (e.rangeFromISOString = function (a) {
                  var t = o(a),
                    n = e.parseZone(t[0]),
                    i = e.parseZone(t[1]);
                  return new c(n, i);
                }),
                (e.parseZoneRange = e.rangeFromISOString),
                (e.fn.range = e.range),
                (e.range.constructor = c),
                (e.isRange = function (e) {
                  return e instanceof c;
                }),
                (e.fn.within = function (e) {
                  return e.contains(this.toDate());
                }),
                e
              );
            };
            var l = n(t(2)),
              m = n(t(1)),
              y = {
                year: !0,
                quarter: !0,
                month: !0,
                week: !0,
                day: !0,
                hour: !0,
                minute: !0,
                second: !0,
              },
              c = (a.DateRange = (function () {
                function e(a, t) {
                  r(this, e);
                  var n = a,
                    i = t;
                  if (1 === arguments.length || void 0 === t)
                    if (
                      "object" === (void 0 === a ? "undefined" : d(a)) &&
                      2 === a.length
                    ) {
                      var u = s(a, 2);
                      (n = u[0]), (i = u[1]);
                    } else if ("string" == typeof a) {
                      var m = o(a),
                        y = s(m, 2);
                      (n = y[0]), (i = y[1]);
                    }
                  (this.start =
                    n || 0 === n ? (0, l.default)(n) : (0, l.default)(-864e13)),
                    (this.end =
                      i || 0 === i
                        ? (0, l.default)(i)
                        : (0, l.default)(864e13));
                }
                return (
                  u(e, [
                    {
                      key: "adjacent",
                      value: function (e) {
                        var a = this.start.isSame(e.end),
                          t = this.end.isSame(e.start);
                        return (
                          (a && e.start.valueOf() <= this.start.valueOf()) ||
                          (t && e.end.valueOf() >= this.end.valueOf())
                        );
                      },
                    },
                    {
                      key: "add",
                      value: function (e) {
                        var a =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : { adjacent: !1 };
                        return this.overlaps(e, a)
                          ? new this.constructor(
                              l.default.min(this.start, e.start),
                              l.default.max(this.end, e.end)
                            )
                          : null;
                      },
                    },
                    {
                      key: "by",
                      value: function (e) {
                        var a =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { excludeEnd: !1, step: 1 },
                          t = this;
                        return i({}, m.default.iterator, function () {
                          var n = a.step || 1,
                            i = Math.abs(t.start.diff(t.end, e)) / n,
                            r = a.excludeEnd || !1,
                            o = 0;
                          return (
                            a.hasOwnProperty("exclusive") && (r = a.exclusive),
                            {
                              next: function () {
                                var a = t.start.clone().add(o * n, e),
                                  s = r ? !(o < i) : !(o <= i);
                                return o++, { done: s, value: s ? void 0 : a };
                              },
                            }
                          );
                        });
                      },
                    },
                    {
                      key: "byRange",
                      value: function (e) {
                        var a =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { excludeEnd: !1, step: 1 },
                          t = this,
                          n = a.step || 1,
                          r = this.valueOf() / e.valueOf() / n,
                          o = Math.floor(r),
                          s = a.excludeEnd || !1,
                          d = 0;
                        return (
                          a.hasOwnProperty("exclusive") && (s = a.exclusive),
                          i({}, m.default.iterator, function () {
                            return o === 1 / 0
                              ? { done: !0 }
                              : {
                                  next: function () {
                                    var a = (0, l.default)(
                                        t.start.valueOf() + e.valueOf() * d * n
                                      ),
                                      i = o === r && s ? !(d < o) : !(d <= o);
                                    return (
                                      d++, { done: i, value: i ? void 0 : a }
                                    );
                                  },
                                };
                          })
                        );
                      },
                    },
                    {
                      key: "center",
                      value: function () {
                        var e = this.start.valueOf() + this.diff() / 2;
                        return (0, l.default)(e);
                      },
                    },
                    {
                      key: "clone",
                      value: function () {
                        return new this.constructor(
                          this.start.clone(),
                          this.end.clone()
                        );
                      },
                    },
                    {
                      key: "contains",
                      value: function (a) {
                        var t =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { excludeStart: !1, excludeEnd: !1 },
                          n = this.start.valueOf(),
                          i = this.end.valueOf(),
                          r = a.valueOf(),
                          o = a.valueOf(),
                          s = t.excludeStart || !1,
                          d = t.excludeEnd || !1;
                        t.hasOwnProperty("exclusive") && (s = d = t.exclusive),
                          a instanceof e &&
                            ((r = a.start.valueOf()), (o = a.end.valueOf()));
                        var u = n < r || (n <= r && !s),
                          l = i > o || (i >= o && !d);
                        return u && l;
                      },
                    },
                    {
                      key: "diff",
                      value: function (e, a) {
                        return this.end.diff(this.start, e, a);
                      },
                    },
                    {
                      key: "duration",
                      value: function (e, a) {
                        return this.diff(e, a);
                      },
                    },
                    {
                      key: "intersect",
                      value: function (e) {
                        var a = this.start.valueOf(),
                          t = this.end.valueOf(),
                          n = e.start.valueOf(),
                          i = e.end.valueOf(),
                          r = n == i;
                        if (a == t) {
                          if (a == n || a == i) return null;
                          if (a > n && a < i) return this.clone();
                        } else if (r) {
                          var o = n;
                          if (o == a || o == t) return null;
                          if (o > a && o < t) return new this.constructor(o, o);
                        }
                        return a <= n && n < t && t < i
                          ? new this.constructor(n, t)
                          : n < a && a < i && i <= t
                          ? new this.constructor(a, i)
                          : n < a && a <= t && t < i
                          ? this.clone()
                          : a <= n && n <= i && i <= t
                          ? new this.constructor(n, i)
                          : null;
                      },
                    },
                    {
                      key: "isEqual",
                      value: function (e) {
                        return (
                          this.start.isSame(e.start) && this.end.isSame(e.end)
                        );
                      },
                    },
                    {
                      key: "isSame",
                      value: function (e) {
                        return this.isEqual(e);
                      },
                    },
                    {
                      key: "overlaps",
                      value: function (e) {
                        var a =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { adjacent: !1 },
                          t = null !== this.intersect(e);
                        return a.adjacent && !t ? this.adjacent(e) : t;
                      },
                    },
                    {
                      key: "reverseBy",
                      value: function (e) {
                        var a =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { excludeStart: !1, step: 1 },
                          t = this;
                        return i({}, m.default.iterator, function () {
                          var n = a.step || 1,
                            i = Math.abs(t.start.diff(t.end, e)) / n,
                            r = a.excludeStart || !1,
                            o = 0;
                          return (
                            a.hasOwnProperty("exclusive") && (r = a.exclusive),
                            {
                              next: function () {
                                var a = t.end.clone().subtract(o * n, e),
                                  s = r ? !(o < i) : !(o <= i);
                                return o++, { done: s, value: s ? void 0 : a };
                              },
                            }
                          );
                        });
                      },
                    },
                    {
                      key: "reverseByRange",
                      value: function (e) {
                        var a =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : { excludeStart: !1, step: 1 },
                          t = this,
                          n = a.step || 1,
                          r = this.valueOf() / e.valueOf() / n,
                          o = Math.floor(r),
                          s = a.excludeStart || !1,
                          d = 0;
                        return (
                          a.hasOwnProperty("exclusive") && (s = a.exclusive),
                          i({}, m.default.iterator, function () {
                            return o === 1 / 0
                              ? { done: !0 }
                              : {
                                  next: function () {
                                    var a = (0, l.default)(
                                        t.end.valueOf() - e.valueOf() * d * n
                                      ),
                                      i = o === r && s ? !(d < o) : !(d <= o);
                                    return (
                                      d++, { done: i, value: i ? void 0 : a }
                                    );
                                  },
                                };
                          })
                        );
                      },
                    },
                    {
                      key: "snapTo",
                      value: function (e) {
                        var a = this.clone();
                        return (
                          a.start.isSame((0, l.default)(-864e13)) ||
                            (a.start = a.start.startOf(e)),
                          a.end.isSame((0, l.default)(864e13)) ||
                            (a.end = a.end.endOf(e)),
                          a
                        );
                      },
                    },
                    {
                      key: "subtract",
                      value: function (e) {
                        var a = this.start.valueOf(),
                          t = this.end.valueOf(),
                          n = e.start.valueOf(),
                          i = e.end.valueOf();
                        return null === this.intersect(e)
                          ? [this]
                          : n <= a && a < t && t <= i
                          ? []
                          : n <= a && a < i && i < t
                          ? [new this.constructor(i, t)]
                          : a < n && n < t && t <= i
                          ? [new this.constructor(a, n)]
                          : a < n && n < i && i < t
                          ? [
                              new this.constructor(a, n),
                              new this.constructor(i, t),
                            ]
                          : a < n && n < t && i < t
                          ? [
                              new this.constructor(a, n),
                              new this.constructor(n, t),
                            ]
                          : [];
                      },
                    },
                    {
                      key: "toDate",
                      value: function () {
                        return [this.start.toDate(), this.end.toDate()];
                      },
                    },
                    {
                      key: "toString",
                      value: function () {
                        return this.start.format() + "/" + this.end.format();
                      },
                    },
                    {
                      key: "valueOf",
                      value: function () {
                        return this.end.valueOf() - this.start.valueOf();
                      },
                    },
                  ]),
                  e
                );
              })());
          },
          function (e, a, t) {
            "use strict";
            var n = t(6),
              i = t(13),
              r = t(9),
              o = t(15);
            (e.exports = function (e, a) {
              var t, r, s, d, u;
              return (
                arguments.length < 2 || "string" != typeof e
                  ? ((d = a), (a = e), (e = null))
                  : (d = arguments[2]),
                null == e
                  ? ((t = s = !0), (r = !1))
                  : ((t = o.call(e, "c")),
                    (r = o.call(e, "e")),
                    (s = o.call(e, "w"))),
                (u = { value: a, configurable: t, enumerable: r, writable: s }),
                d ? n(i(d), u) : u
              );
            }).gs = function (e, a, t) {
              var s, d, u, l;
              return (
                "string" != typeof e
                  ? ((u = t), (t = a), (a = e), (e = null))
                  : (u = arguments[3]),
                null == a
                  ? (a = void 0)
                  : r(a)
                  ? null == t
                    ? (t = void 0)
                    : r(t) || ((u = t), (t = void 0))
                  : ((u = a), (a = t = void 0)),
                null == e
                  ? ((s = !0), (d = !1))
                  : ((s = o.call(e, "c")), (d = o.call(e, "e"))),
                (l = { get: a, set: t, configurable: s, enumerable: d }),
                u ? n(i(u), l) : l
              );
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = function () {};
          },
          function (e, a, t) {
            "use strict";
            e.exports = t(7)() ? Object.assign : t(8);
          },
          function (e, a, t) {
            "use strict";
            e.exports = function () {
              var e,
                a = Object.assign;
              return (
                "function" == typeof a &&
                (a((e = { foo: "raz" }), { bar: "dwa" }, { trzy: "trzy" }),
                e.foo + e.bar + e.trzy === "razdwatrzy")
              );
            };
          },
          function (e, a, t) {
            "use strict";
            var n = t(10),
              i = t(14),
              r = Math.max;
            e.exports = function (e, a) {
              var t,
                o,
                s,
                d = r(arguments.length, 2);
              for (
                e = Object(i(e)),
                  s = function (n) {
                    try {
                      e[n] = a[n];
                    } catch (e) {
                      t || (t = e);
                    }
                  },
                  o = 1;
                o < d;
                ++o
              )
                (a = arguments[o]), n(a).forEach(s);
              if (void 0 !== t) throw t;
              return e;
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = function (e) {
              return "function" == typeof e;
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = t(11)() ? Object.keys : t(12);
          },
          function (e, a, t) {
            "use strict";
            e.exports = function () {
              try {
                return Object.keys("primitive"), !0;
              } catch (e) {
                return !1;
              }
            };
          },
          function (e, a, t) {
            "use strict";
            var n = t(0),
              i = Object.keys;
            e.exports = function (e) {
              return i(n(e) ? Object(e) : e);
            };
          },
          function (e, a, t) {
            "use strict";
            var n = t(0),
              i = Array.prototype.forEach,
              r = Object.create,
              o = function (e, a) {
                var t;
                for (t in e) a[t] = e[t];
              };
            e.exports = function (e) {
              var a = r(null);
              return (
                i.call(arguments, function (e) {
                  n(e) && o(Object(e), a);
                }),
                a
              );
            };
          },
          function (e, a, t) {
            "use strict";
            var n = t(0);
            e.exports = function (e) {
              if (!n(e)) throw new TypeError("Cannot use null or undefined");
              return e;
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = t(16)() ? String.prototype.contains : t(17);
          },
          function (e, a, t) {
            "use strict";
            var n = "razdwatrzy";
            e.exports = function () {
              return (
                "function" == typeof n.contains &&
                !0 === n.contains("dwa") &&
                !1 === n.contains("foo")
              );
            };
          },
          function (e, a, t) {
            "use strict";
            var n = String.prototype.indexOf;
            e.exports = function (e) {
              return n.call(this, e, arguments[1]) > -1;
            };
          },
          function (e, a, t) {
            "use strict";
            var n = { object: !0, symbol: !0 };
            e.exports = function () {
              var e;
              if ("function" != typeof Symbol) return !1;
              e = Symbol("test symbol");
              try {
                String(e);
              } catch (e) {
                return !1;
              }
              return (
                !!n[typeof Symbol.iterator] &&
                !!n[typeof Symbol.toPrimitive] &&
                !!n[typeof Symbol.toStringTag]
              );
            };
          },
          function (e, a, t) {
            "use strict";
            e.exports = function (e) {
              return (
                !!e &&
                ("symbol" == typeof e ||
                  (!!e.constructor &&
                    "Symbol" === e.constructor.name &&
                    "Symbol" === e[e.constructor.toStringTag]))
              );
            };
          },
          function (e, a, t) {
            "use strict";
            var n,
              i,
              r,
              o,
              s = t(4),
              d = t(21),
              u = Object.create,
              l = Object.defineProperties,
              m = Object.defineProperty,
              y = Object.prototype,
              c = u(null);
            if ("function" == typeof Symbol) {
              n = Symbol;
              try {
                String(n()), (o = !0);
              } catch (e) {}
            }
            var h = (function () {
              var e = u(null);
              return function (a) {
                for (var t, n, i = 0; e[a + (i || "")]; ) ++i;
                return (
                  (e[(a += i || "")] = !0),
                  m(
                    y,
                    (t = "@@" + a),
                    s.gs(null, function (e) {
                      n || ((n = !0), m(this, t, s(e)), (n = !1));
                    })
                  ),
                  t
                );
              };
            })();
            (r = function (e) {
              if (this instanceof r)
                throw new TypeError("Symbol is not a constructor");
              return i(e);
            }),
              (e.exports = i =
                function e(a) {
                  var t;
                  if (this instanceof e)
                    throw new TypeError("Symbol is not a constructor");
                  return o
                    ? n(a)
                    : ((t = u(r.prototype)),
                      (a = void 0 === a ? "" : String(a)),
                      l(t, {
                        __description__: s("", a),
                        __name__: s("", h(a)),
                      }));
                }),
              l(i, {
                for: s(function (e) {
                  return c[e] ? c[e] : (c[e] = i(String(e)));
                }),
                keyFor: s(function (e) {
                  var a;
                  for (a in (d(e), c)) if (c[a] === e) return a;
                }),
                hasInstance: s("", (n && n.hasInstance) || i("hasInstance")),
                isConcatSpreadable: s(
                  "",
                  (n && n.isConcatSpreadable) || i("isConcatSpreadable")
                ),
                iterator: s("", (n && n.iterator) || i("iterator")),
                match: s("", (n && n.match) || i("match")),
                replace: s("", (n && n.replace) || i("replace")),
                search: s("", (n && n.search) || i("search")),
                species: s("", (n && n.species) || i("species")),
                split: s("", (n && n.split) || i("split")),
                toPrimitive: s("", (n && n.toPrimitive) || i("toPrimitive")),
                toStringTag: s("", (n && n.toStringTag) || i("toStringTag")),
                unscopables: s("", (n && n.unscopables) || i("unscopables")),
              }),
              l(r.prototype, {
                constructor: s(i),
                toString: s("", function () {
                  return this.__name__;
                }),
              }),
              l(i.prototype, {
                toString: s(function () {
                  return "Symbol (" + d(this).__description__ + ")";
                }),
                valueOf: s(function () {
                  return d(this);
                }),
              }),
              m(
                i.prototype,
                i.toPrimitive,
                s("", function () {
                  var e = d(this);
                  return "symbol" == typeof e ? e : e.toString();
                })
              ),
              m(i.prototype, i.toStringTag, s("c", "Symbol")),
              m(r.prototype, i.toStringTag, s("c", i.prototype[i.toStringTag])),
              m(r.prototype, i.toPrimitive, s("c", i.prototype[i.toPrimitive]));
          },
          function (e, a, t) {
            "use strict";
            var n = t(19);
            e.exports = function (e) {
              if (!n(e)) throw new TypeError(e + " is not a symbol");
              return e;
            };
          },
        ]));
    },
    function (e, a) {
      var t;
      t = (function () {
        return this;
      })();
      try {
        t = t || new Function("return this")();
      } catch (e) {
        "object" == typeof window && (t = window);
      }
      e.exports = t;
    },
    function (e, a, t) {
      var n = {
        "./af": 3,
        "./af.js": 3,
        "./ar": 4,
        "./ar-dz": 5,
        "./ar-dz.js": 5,
        "./ar-kw": 6,
        "./ar-kw.js": 6,
        "./ar-ly": 7,
        "./ar-ly.js": 7,
        "./ar-ma": 8,
        "./ar-ma.js": 8,
        "./ar-sa": 9,
        "./ar-sa.js": 9,
        "./ar-tn": 10,
        "./ar-tn.js": 10,
        "./ar.js": 4,
        "./az": 11,
        "./az.js": 11,
        "./be": 12,
        "./be.js": 12,
        "./bg": 13,
        "./bg.js": 13,
        "./bm": 14,
        "./bm.js": 14,
        "./bn": 15,
        "./bn.js": 15,
        "./bo": 16,
        "./bo.js": 16,
        "./br": 17,
        "./br.js": 17,
        "./bs": 18,
        "./bs.js": 18,
        "./ca": 19,
        "./ca.js": 19,
        "./cs": 20,
        "./cs.js": 20,
        "./cv": 21,
        "./cv.js": 21,
        "./cy": 22,
        "./cy.js": 22,
        "./da": 23,
        "./da.js": 23,
        "./de": 24,
        "./de-at": 25,
        "./de-at.js": 25,
        "./de-ch": 26,
        "./de-ch.js": 26,
        "./de.js": 24,
        "./dv": 27,
        "./dv.js": 27,
        "./el": 28,
        "./el.js": 28,
        "./en-SG": 29,
        "./en-SG.js": 29,
        "./en-au": 30,
        "./en-au.js": 30,
        "./en-ca": 31,
        "./en-ca.js": 31,
        "./en-gb": 32,
        "./en-gb.js": 32,
        "./en-ie": 33,
        "./en-ie.js": 33,
        "./en-il": 34,
        "./en-il.js": 34,
        "./en-nz": 35,
        "./en-nz.js": 35,
        "./eo": 36,
        "./eo.js": 36,
        "./es": 37,
        "./es-do": 38,
        "./es-do.js": 38,
        "./es-us": 39,
        "./es-us.js": 39,
        "./es.js": 37,
        "./et": 40,
        "./et.js": 40,
        "./eu": 41,
        "./eu.js": 41,
        "./fa": 42,
        "./fa.js": 42,
        "./fi": 43,
        "./fi.js": 43,
        "./fo": 44,
        "./fo.js": 44,
        "./fr": 45,
        "./fr-ca": 46,
        "./fr-ca.js": 46,
        "./fr-ch": 47,
        "./fr-ch.js": 47,
        "./fr.js": 45,
        "./fy": 48,
        "./fy.js": 48,
        "./ga": 49,
        "./ga.js": 49,
        "./gd": 50,
        "./gd.js": 50,
        "./gl": 51,
        "./gl.js": 51,
        "./gom-latn": 52,
        "./gom-latn.js": 52,
        "./gu": 53,
        "./gu.js": 53,
        "./he": 54,
        "./he.js": 54,
        "./hi": 55,
        "./hi.js": 55,
        "./hr": 56,
        "./hr.js": 56,
        "./hu": 57,
        "./hu.js": 57,
        "./hy-am": 58,
        "./hy-am.js": 58,
        "./id": 59,
        "./id.js": 59,
        "./is": 60,
        "./is.js": 60,
        "./it": 61,
        "./it-ch": 62,
        "./it-ch.js": 62,
        "./it.js": 61,
        "./ja": 63,
        "./ja.js": 63,
        "./jv": 64,
        "./jv.js": 64,
        "./ka": 65,
        "./ka.js": 65,
        "./kk": 66,
        "./kk.js": 66,
        "./km": 67,
        "./km.js": 67,
        "./kn": 68,
        "./kn.js": 68,
        "./ko": 69,
        "./ko.js": 69,
        "./ku": 70,
        "./ku.js": 70,
        "./ky": 71,
        "./ky.js": 71,
        "./lb": 72,
        "./lb.js": 72,
        "./lo": 73,
        "./lo.js": 73,
        "./lt": 74,
        "./lt.js": 74,
        "./lv": 75,
        "./lv.js": 75,
        "./me": 76,
        "./me.js": 76,
        "./mi": 77,
        "./mi.js": 77,
        "./mk": 78,
        "./mk.js": 78,
        "./ml": 79,
        "./ml.js": 79,
        "./mn": 80,
        "./mn.js": 80,
        "./mr": 81,
        "./mr.js": 81,
        "./ms": 82,
        "./ms-my": 83,
        "./ms-my.js": 83,
        "./ms.js": 82,
        "./mt": 84,
        "./mt.js": 84,
        "./my": 85,
        "./my.js": 85,
        "./nb": 86,
        "./nb.js": 86,
        "./ne": 87,
        "./ne.js": 87,
        "./nl": 88,
        "./nl-be": 89,
        "./nl-be.js": 89,
        "./nl.js": 88,
        "./nn": 90,
        "./nn.js": 90,
        "./pa-in": 91,
        "./pa-in.js": 91,
        "./pl": 92,
        "./pl.js": 92,
        "./pt": 93,
        "./pt-br": 94,
        "./pt-br.js": 94,
        "./pt.js": 93,
        "./ro": 95,
        "./ro.js": 95,
        "./ru": 96,
        "./ru.js": 96,
        "./sd": 97,
        "./sd.js": 97,
        "./se": 98,
        "./se.js": 98,
        "./si": 99,
        "./si.js": 99,
        "./sk": 100,
        "./sk.js": 100,
        "./sl": 101,
        "./sl.js": 101,
        "./sq": 102,
        "./sq.js": 102,
        "./sr": 103,
        "./sr-cyrl": 104,
        "./sr-cyrl.js": 104,
        "./sr.js": 103,
        "./ss": 105,
        "./ss.js": 105,
        "./sv": 106,
        "./sv.js": 106,
        "./sw": 107,
        "./sw.js": 107,
        "./ta": 108,
        "./ta.js": 108,
        "./te": 109,
        "./te.js": 109,
        "./tet": 110,
        "./tet.js": 110,
        "./tg": 111,
        "./tg.js": 111,
        "./th": 112,
        "./th.js": 112,
        "./tl-ph": 113,
        "./tl-ph.js": 113,
        "./tlh": 114,
        "./tlh.js": 114,
        "./tr": 115,
        "./tr.js": 115,
        "./tzl": 116,
        "./tzl.js": 116,
        "./tzm": 117,
        "./tzm-latn": 118,
        "./tzm-latn.js": 118,
        "./tzm.js": 117,
        "./ug-cn": 119,
        "./ug-cn.js": 119,
        "./uk": 120,
        "./uk.js": 120,
        "./ur": 121,
        "./ur.js": 121,
        "./uz": 122,
        "./uz-latn": 123,
        "./uz-latn.js": 123,
        "./uz.js": 122,
        "./vi": 124,
        "./vi.js": 124,
        "./x-pseudo": 125,
        "./x-pseudo.js": 125,
        "./yo": 126,
        "./yo.js": 126,
        "./zh-cn": 127,
        "./zh-cn.js": 127,
        "./zh-hk": 128,
        "./zh-hk.js": 128,
        "./zh-tw": 129,
        "./zh-tw.js": 129,
      };
      function i(e) {
        var a = r(e);
        return t(a);
      }
      function r(e) {
        if (!t.o(n, e)) {
          var a = new Error("Cannot find module '" + e + "'");
          throw ((a.code = "MODULE_NOT_FOUND"), a);
        }
        return n[e];
      }
      (i.keys = function () {
        return Object.keys(n);
      }),
        (i.resolve = r),
        (e.exports = i),
        (i.id = 132);
    },
    function (e, a, t) {
      (function (e) {
        e.exports = (function (a) {
          if ((null !== e && e.exports, void 0 === a))
            throw Error("Can't find moment");
          var t = {
              create: function (e, a) {
                for (var t in e)
                  if (e.hasOwnProperty(t) && parseInt(t, 10) <= 0)
                    throw Error("Intervals must be greater than zero");
                return { measure: a.toLowerCase(), units: e };
              },
              match: function (e, a, t, n) {
                var i = null;
                for (var r in ((i = n.isBefore(t)
                  ? t.diff(n, e, !0)
                  : n.diff(t, e, !0)),
                "days" == e && (i = parseInt(i)),
                a))
                  if (a.hasOwnProperty(r) && i % (r = parseInt(r, 10)) == 0)
                    return !0;
                return !1;
              },
            },
            n = (function () {
              var e = {
                  daysOfMonth: "date",
                  daysOfWeek: "day",
                  weeksOfMonth: "monthWeek",
                  weeksOfMonthByDay: "monthWeekByDay",
                  weeksOfYear: "week",
                  monthsOfYear: "month",
                },
                t = {
                  daysOfMonth: { low: 1, high: 31 },
                  daysOfWeek: { low: 0, high: 6 },
                  weeksOfMonth: { low: 0, high: 4 },
                  weeksOfMonthByDay: { low: 0, high: 4 },
                  weeksOfYear: { low: 0, high: 52 },
                  monthsOfYear: { low: 0, high: 11 },
                };
              function n(e, t) {
                var n,
                  i,
                  r = {};
                for (n in e)
                  e.hasOwnProperty(n) &&
                    ((i = parseInt(n, 10)),
                    isNaN(i) && (i = n),
                    (r[a().set(t, i).get(t)] = e[n]));
                return r;
              }
              return {
                create: function (e, a) {
                  var i = [];
                  for (var r in ("daysOfWeek" === a && (e = n(e, "days")),
                  "monthsOfYear" === a && (e = n(e, "months")),
                  e))
                    hasOwnProperty.call(e, r) && i.push(r);
                  return (
                    (function (e, a, t) {
                      t.forEach(function (t) {
                        if (t < e || t > a)
                          throw Error(
                            "Value should be in range " + e + " to " + a
                          );
                      });
                    })(t[a].low, t[a].high, i),
                    { measure: a, units: e }
                  );
                },
                match: function (a, t, n) {
                  var i = e[a],
                    r = n[i]();
                  if (t[r]) return !0;
                  if (
                    "date" === i &&
                    r == n.add(1, "months").date(0).format("D") &&
                    r < 31
                  )
                    for (; r <= 31; ) {
                      if (t[r]) return !0;
                      r++;
                    }
                  return !1;
                },
              };
            })(),
            i = (function () {
              var e = {
                  days: "interval",
                  weeks: "interval",
                  months: "interval",
                  years: "interval",
                  daysOfWeek: "calendar",
                  daysOfMonth: "calendar",
                  weeksOfMonth: "calendar",
                  weeksOfMonthByDay: "calendar",
                  weeksOfYear: "calendar",
                  monthsOfYear: "calendar",
                },
                i = {
                  days: "day",
                  weeks: "week",
                  months: "month",
                  years: "year",
                  daysOfWeek: "dayOfWeek",
                  daysOfMonth: "dayOfMonth",
                  weeksOfMonth: "weekOfMonth",
                  weeksOfMonthByDay: "weekOfMonthByDay",
                  weeksOfYear: "weekOfYear",
                  monthsOfYear: "monthOfYear",
                };
              function r() {
                var a,
                  i = e[this.measure];
                if (!(this instanceof u))
                  throw Error(
                    "Private method trigger() was called directly or not called as instance of Recur!"
                  );
                if (
                  void 0 === this.units ||
                  null === this.units ||
                  !this.measure
                )
                  return this;
                if ("calendar" !== i && "interval" !== i)
                  throw Error("Invalid measure provided: " + this.measure);
                if ("interval" === i) {
                  if (!this.start)
                    throw Error(
                      "Must have a start date set to set an interval!"
                    );
                  a = t.create(this.units, this.measure);
                }
                if (
                  ("calendar" === i && (a = n.create(this.units, this.measure)),
                  (this.units = null),
                  (this.measure = null),
                  "weeksOfMonthByDay" === a.measure &&
                    !this.hasRule("daysOfWeek"))
                )
                  throw Error(
                    "weeksOfMonthByDay must be combined with daysOfWeek"
                  );
                for (var r = 0; r < this.rules.length; r++)
                  this.rules[r].measure === a.measure &&
                    this.rules.splice(r, 1);
                return this.rules.push(a), this;
              }
              function o(e, a, t) {
                var n,
                  i,
                  r = [];
                if (!(this instanceof u))
                  throw Error(
                    "Private method trigger() was called directly or not called as instance of Recur!"
                  );
                if (!this.start && !this.from)
                  throw Error(
                    "Cannot get occurrences without start or from date."
                  );
                if ("all" === t && !this.end)
                  throw Error(
                    "Cannot get all occurrences without an end date."
                  );
                if (this.end && this.start > this.end)
                  throw Error("Start date cannot be later than end date.");
                if ("all" !== t && !(e > 0)) return r;
                for (
                  n = (this.from || this.start).clone(),
                    "all" === t &&
                      this.matches(n, !1) &&
                      ((i = a ? n.format(a) : n.clone()), r.push(i));
                  r.length < (null === e ? r.length + 1 : e) &&
                  ("next" === t || "all" === t
                    ? n.add(1, "day")
                    : n.subtract(1, "day"),
                  this.matches(n, "all" !== t) &&
                    ((i = a ? n.format(a) : n.clone()), r.push(i)),
                  !("all" === t && n >= this.end));

                );
                return r;
              }
              function s(e) {
                switch (e) {
                  case "day":
                    return "days";
                  case "week":
                    return "weeks";
                  case "month":
                    return "months";
                  case "year":
                    return "years";
                  case "dayOfWeek":
                    return "daysOfWeek";
                  case "dayOfMonth":
                    return "daysOfMonth";
                  case "weekOfMonth":
                    return "weeksOfMonth";
                  case "weekOfMonthByDay":
                    return "weeksOfMonthByDay";
                  case "weekOfYear":
                    return "weeksOfYear";
                  case "monthOfYear":
                    return "monthsOfYear";
                  default:
                    return e;
                }
              }
              function d(e) {
                return function (a) {
                  return this.every.call(this, a, e), this;
                };
              }
              var u = function (e) {
                e.start && (this.start = a(e.start).dateOnly()),
                  e.end && (this.end = a(e.end).dateOnly()),
                  (this.rules = e.rules || []);
                var t = e.exceptions || [];
                this.exceptions = [];
                for (var n = 0; n < t.length; n++) this.except(t[n]);
                return (
                  (this.units = null),
                  (this.measure = null),
                  (this.from = null),
                  this
                );
              };
              for (var l in ((u.prototype.startDate = function (e) {
                return null === e
                  ? ((this.start = null), this)
                  : e
                  ? ((this.start = a(e).dateOnly()), this)
                  : this.start;
              }),
              (u.prototype.endDate = function (e) {
                return null === e
                  ? ((this.end = null), this)
                  : e
                  ? ((this.end = a(e).dateOnly()), this)
                  : this.end;
              }),
              (u.prototype.fromDate = function (e) {
                return null === e
                  ? ((this.from = null), this)
                  : e
                  ? ((this.from = a(e).dateOnly()), this)
                  : this.from;
              }),
              (u.prototype.save = function () {
                var e = {};
                this.start &&
                  a(this.start).isValid() &&
                  (e.start = this.start.format("L")),
                  this.end &&
                    a(this.end).isValid() &&
                    (e.end = this.end.format("L")),
                  (e.exceptions = []);
                for (var t = 0, n = this.exceptions.length; t < n; t++)
                  e.exceptions.push(this.exceptions[t].format("L"));
                return (e.rules = this.rules), e;
              }),
              (u.prototype.repeats = function () {
                return this.rules.length > 0;
              }),
              (u.prototype.every = function (e, a) {
                return (
                  null != e &&
                    (this.units = (function (e) {
                      var a = {};
                      if ("[object Array]" == Object.prototype.toString.call(e))
                        e.forEach(function (e) {
                          a[e] = !0;
                        });
                      else if (e === Object(e)) a = e;
                      else {
                        if (
                          "[object Number]" !=
                            Object.prototype.toString.call(e) &&
                          "[object String]" != Object.prototype.toString.call(e)
                        )
                          throw Error(
                            "Provide an array, object, string or number when passing units!"
                          );
                        a[e] = !0;
                      }
                      return a;
                    })(e)),
                  null != a && (this.measure = s(a)),
                  r.call(this)
                );
              }),
              (u.prototype.except = function (e) {
                return (e = a(e).dateOnly()), this.exceptions.push(e), this;
              }),
              (u.prototype.forget = function (e) {
                var t,
                  n,
                  i = a(e);
                if (i.isValid()) {
                  for (
                    i = i.dateOnly(), t = 0, n = this.exceptions.length;
                    t < n;
                    t++
                  )
                    if (i.isSame(this.exceptions[t]))
                      return this.exceptions.splice(t, 1), this;
                  return this;
                }
                for (t = 0, n = this.rules.length; t < n; t++)
                  this.rules[t].measure === s(e) && this.rules.splice(t, 1);
              }),
              (u.prototype.hasRule = function (e) {
                var a, t;
                for (a = 0, t = this.rules.length; a < t; a++)
                  if (this.rules[a].measure === s(e)) return !0;
                return !1;
              }),
              (u.prototype.matches = function (i, r) {
                var o = a(i).dateOnly();
                if (!o.isValid())
                  throw Error("Invalid date supplied to match method: " + i);
                return !(
                  (!r &&
                    !(function (e, a, t) {
                      return !((e && t.isBefore(e)) || (a && t.isAfter(a)));
                    })(this.start, this.end, o)) ||
                  (function (e, t) {
                    for (var n = 0, i = e.length; n < i; n++)
                      if (a(e[n]).isSame(t)) return !0;
                    return !1;
                  })(this.exceptions, o) ||
                  !(function (a, i, r) {
                    var o, s, d, u;
                    for (o = 0, s = a.length; o < s; o++)
                      if (((d = a[o]), "interval" === (u = e[d.measure]))) {
                        if (!t.match(d.measure, d.units, r, i)) return !1;
                      } else {
                        if ("calendar" !== u) return !1;
                        if (!n.match(d.measure, d.units, i)) return !1;
                      }
                    return !0;
                  })(this.rules, o, this.start)
                );
              }),
              (u.prototype.next = function (e, a) {
                return o.call(this, e, a, "next");
              }),
              (u.prototype.previous = function (e, a) {
                return o.call(this, e, a, "previous");
              }),
              (u.prototype.all = function (e) {
                return o.call(this, null, e, "all");
              }),
              i))
                e.hasOwnProperty(l) &&
                  (u.prototype[l] = u.prototype[i[l]] = d(l));
              return u;
            })();
          return (
            (a.recur = function (e, t) {
              return e !== Object(e) || a.isMoment(e)
                ? new i({ start: e, end: t })
                : new i(e);
            }),
            (a.fn.recur = function (e, t) {
              return e !== Object(e) || a.isMoment(e)
                ? (t || ((t = e), (e = void 0)),
                  e || (e = this),
                  new i({ start: e, end: t, moment: this }))
                : (void 0 === e.start && (e.start = this), new i(e));
            }),
            (a.fn.monthWeek = function () {
              var e = this.clone().startOf("month").startOf("week");
              return this.clone().startOf("week").diff(e, "weeks");
            }),
            (a.fn.monthWeekByDay = function (e) {
              return Math.floor((this.date() - 1) / 7);
            }),
            (a.fn.dateOnly = function () {
              return this.tz && "function" == typeof a.tz
                ? a.tz(this.format("YYYY-MM-DDT00:00:00.000Z"), "UTC")
                : this.hours(0)
                    .minutes(0)
                    .seconds(0)
                    .milliseconds(0)
                    .add(this.utcOffset(), "minute")
                    .utcOffset(0);
            }),
            a
          );
        })(t(0));
      }).call(this, t(2)(e));
    },
    function (e, a, t) {
      "use strict";
      t.r(a);
      var n = {};
      t.r(n),
        t.d(n, "defaultConfig", function () {
          return Ae;
        }),
        t.d(n, "dates", function () {
          return Se;
        });
      var i = {};
      t.r(i),
        t.d(i, "defaultConfig", function () {
          return Pe;
        }),
        t.d(i, "dates", function () {
          return be;
        });
      var r = {};
      t.r(r),
        t.d(r, "defaultConfig", function () {
          return Ee;
        }),
        t.d(r, "dates", function () {
          return De;
        });
      var o = {};
      t.r(o),
        t.d(o, "defaultConfig", function () {
          return Ye;
        }),
        t.d(o, "dates", function () {
          return we;
        });
      var s = {};
      t.r(s),
        t.d(s, "defaultConfig", function () {
          return Ce;
        }),
        t.d(s, "dates", function () {
          return Re;
        });
      var d = {};
      t.r(d),
        t.d(d, "defaultConfig", function () {
          return Be;
        }),
        t.d(d, "dates", function () {
          return He;
        });
      var u = {};
      t.r(u),
        t.d(u, "defaultConfig", function () {
          return Ie;
        }),
        t.d(u, "dates", function () {
          return ze;
        });
      var l = {};
      t.r(l),
        t.d(l, "defaultConfig", function () {
          return je;
        }),
        t.d(l, "dates", function () {
          return Fe;
        });
      var m = {};
      t.r(m),
        t.d(m, "defaultConfig", function () {
          return We;
        }),
        t.d(m, "dates", function () {
          return Je;
        });
      var y = {};
      t.r(y),
        t.d(y, "defaultConfig", function () {
          return Ve;
        }),
        t.d(y, "dates", function () {
          return xe;
        });
      var c = {};
      t.r(c),
        t.d(c, "defaultConfig", function () {
          return Ne;
        }),
        t.d(c, "dates", function () {
          return Ge;
        });
      var h = {};
      t.r(h),
        t.d(h, "defaultConfig", function () {
          return Ke;
        }),
        t.d(h, "dates", function () {
          return Ue;
        });
      var _ = {};
      t.r(_),
        t.d(_, "defaultConfig", function () {
          return qe;
        }),
        t.d(_, "dates", function () {
          return Ze;
        });
      var M = {};
      t.r(M),
        t.d(M, "defaultConfig", function () {
          return Xe;
        }),
        t.d(M, "dates", function () {
          return $e;
        });
      var p = {};
      t.r(p),
        t.d(p, "defaultConfig", function () {
          return Qe;
        }),
        t.d(p, "dates", function () {
          return ea;
        });
      var f = {};
      t.r(f),
        t.d(f, "defaultConfig", function () {
          return aa;
        }),
        t.d(f, "dates", function () {
          return ta;
        });
      var g = {};
      t.r(g),
        t.d(g, "defaultConfig", function () {
          return oa;
        }),
        t.d(g, "dates", function () {
          return sa;
        });
      var k = {};
      t.r(k),
        t.d(k, "defaultConfig", function () {
          return da;
        }),
        t.d(k, "dates", function () {
          return ua;
        });
      var L = {};
      t.r(L),
        t.d(L, "defaultConfig", function () {
          return la;
        }),
        t.d(L, "dates", function () {
          return ma;
        });
      var O = {};
      t.r(O),
        t.d(O, "defaultConfig", function () {
          return ya;
        }),
        t.d(O, "dates", function () {
          return ca;
        });
      var T = {};
      t.r(T),
        t.d(T, "defaultConfig", function () {
          return ha;
        }),
        t.d(T, "dates", function () {
          return _a;
        });
      var v = {};
      t.r(v),
        t.d(v, "defaultConfig", function () {
          return Ma;
        }),
        t.d(v, "dates", function () {
          return pa;
        });
      var A = {};
      t.r(A),
        t.d(A, "defaultConfig", function () {
          return fa;
        }),
        t.d(A, "dates", function () {
          return ga;
        });
      var S = {};
      t.r(S),
        t.d(S, "defaultConfig", function () {
          return ka;
        }),
        t.d(S, "dates", function () {
          return La;
        });
      var P = {};
      t.r(P),
        t.d(P, "defaultConfig", function () {
          return Oa;
        }),
        t.d(P, "dates", function () {
          return Ta;
        });
      var b = {};
      t.r(b),
        t.d(b, "defaultConfig", function () {
          return va;
        }),
        t.d(b, "dates", function () {
          return Aa;
        });
      var E = {};
      t.r(E),
        t.d(E, "defaultConfig", function () {
          return Sa;
        }),
        t.d(E, "dates", function () {
          return Pa;
        });
      var D = {};
      t.r(D),
        t.d(D, "defaultConfig", function () {
          return ba;
        }),
        t.d(D, "dates", function () {
          return Ea;
        });
      var Y = {};
      t.r(Y),
        t.d(Y, "defaultConfig", function () {
          return Da;
        }),
        t.d(Y, "dates", function () {
          return Ya;
        });
      var w = {};
      t.r(w),
        t.d(w, "defaultConfig", function () {
          return wa;
        }),
        t.d(w, "dates", function () {
          return Ca;
        });
      var C = {};
      t.r(C),
        t.d(C, "defaultConfig", function () {
          return Ra;
        }),
        t.d(C, "dates", function () {
          return Ba;
        });
      var R = {};
      t.r(R),
        t.d(R, "defaultConfig", function () {
          return Ha;
        }),
        t.d(R, "dates", function () {
          return Ia;
        });
      var B = {};
      t.r(B),
        t.d(B, "defaultConfig", function () {
          return za;
        }),
        t.d(B, "dates", function () {
          return ja;
        });
      var H = {};
      t.r(H),
        t.d(H, "defaultConfig", function () {
          return Fa;
        }),
        t.d(H, "dates", function () {
          return Wa;
        });
      var I = {};
      t.r(I),
        t.d(I, "defaultConfig", function () {
          return Ja;
        }),
        t.d(I, "dates", function () {
          return Va;
        });
      var z = {};
      t.r(z),
        t.d(z, "defaultConfig", function () {
          return xa;
        }),
        t.d(z, "dates", function () {
          return Na;
        });
      var j = {};
      t.r(j),
        t.d(j, "defaultConfig", function () {
          return Ga;
        }),
        t.d(j, "dates", function () {
          return Ka;
        });
      var F = {};
      t.r(F),
        t.d(F, "defaultConfig", function () {
          return Ua;
        }),
        t.d(F, "dates", function () {
          return qa;
        });
      var W = {};
      t.r(W),
        t.d(W, "defaultConfig", function () {
          return Za;
        }),
        t.d(W, "dates", function () {
          return Xa;
        });
      var J = {};
      t.r(J),
        t.d(J, "defaultConfig", function () {
          return $a;
        }),
        t.d(J, "dates", function () {
          return Qa;
        });
      var V = {};
      t.r(V),
        t.d(V, "defaultConfig", function () {
          return et;
        }),
        t.d(V, "dates", function () {
          return at;
        });
      var x = {};
      t.r(x),
        t.d(x, "defaultConfig", function () {
          return tt;
        }),
        t.d(x, "dates", function () {
          return nt;
        });
      var N = {};
      t.r(N),
        t.d(N, "defaultConfig", function () {
          return it;
        }),
        t.d(N, "dates", function () {
          return rt;
        });
      var G = {};
      t.r(G),
        t.d(G, "defaultConfig", function () {
          return ot;
        }),
        t.d(G, "dates", function () {
          return st;
        });
      var K = {};
      t.r(K),
        t.d(K, "defaultConfig", function () {
          return dt;
        }),
        t.d(K, "dates", function () {
          return ut;
        });
      var U = {};
      t.r(U),
        t.d(U, "defaultConfig", function () {
          return lt;
        }),
        t.d(U, "dates", function () {
          return mt;
        });
      var q = {};
      t.r(q),
        t.d(q, "defaultConfig", function () {
          return yt;
        }),
        t.d(q, "dates", function () {
          return ct;
        });
      var Z = {};
      t.r(Z),
        t.d(Z, "defaultConfig", function () {
          return ht;
        }),
        t.d(Z, "dates", function () {
          return _t;
        });
      var X = {};
      t.r(X),
        t.d(X, "defaultConfig", function () {
          return Mt;
        }),
        t.d(X, "dates", function () {
          return pt;
        });
      var $ = {};
      t.r($),
        t.d($, "argentina", function () {
          return n;
        }),
        t.d($, "australia", function () {
          return i;
        }),
        t.d($, "austria", function () {
          return r;
        }),
        t.d($, "belgium", function () {
          return o;
        }),
        t.d($, "bolivia", function () {
          return s;
        }),
        t.d($, "bosniaHerzegovina", function () {
          return d;
        }),
        t.d($, "brazil", function () {
          return u;
        }),
        t.d($, "canada", function () {
          return l;
        }),
        t.d($, "chile", function () {
          return m;
        }),
        t.d($, "china", function () {
          return y;
        }),
        t.d($, "croatia", function () {
          return c;
        }),
        t.d($, "czechRepublic", function () {
          return h;
        }),
        t.d($, "denmark", function () {
          return _;
        }),
        t.d($, "england", function () {
          return M;
        }),
        t.d($, "finland", function () {
          return p;
        }),
        t.d($, "france", function () {
          return f;
        }),
        t.d($, "general", function () {
          return g;
        }),
        t.d($, "germany", function () {
          return k;
        }),
        t.d($, "greece", function () {
          return L;
        }),
        t.d($, "hungary", function () {
          return O;
        }),
        t.d($, "india", function () {
          return T;
        }),
        t.d($, "ireland", function () {
          return v;
        }),
        t.d($, "italy", function () {
          return A;
        }),
        t.d($, "japan", function () {
          return S;
        }),
        t.d($, "lebanon", function () {
          return P;
        }),
        t.d($, "lithuania", function () {
          return b;
        }),
        t.d($, "malta", function () {
          return E;
        }),
        t.d($, "mexico", function () {
          return D;
        }),
        t.d($, "netherlands", function () {
          return Y;
        }),
        t.d($, "newZealand", function () {
          return w;
        }),
        t.d($, "norway", function () {
          return C;
        }),
        t.d($, "peru", function () {
          return R;
        }),
        t.d($, "philippines", function () {
          return B;
        }),
        t.d($, "poland", function () {
          return H;
        }),
        t.d($, "portugal", function () {
          return I;
        }),
        t.d($, "puertoRico", function () {
          return z;
        }),
        t.d($, "romania", function () {
          return j;
        }),
        t.d($, "russia", function () {
          return F;
        }),
        t.d($, "scotland", function () {
          return W;
        }),
        t.d($, "slovakia", function () {
          return J;
        }),
        t.d($, "slovenia", function () {
          return V;
        }),
        t.d($, "spain", function () {
          return x;
        }),
        t.d($, "sriLanka", function () {
          return N;
        }),
        t.d($, "sweden", function () {
          return G;
        }),
        t.d($, "switzerland", function () {
          return K;
        }),
        t.d($, "ukraine", function () {
          return U;
        }),
        t.d($, "unitedStates", function () {
          return q;
        }),
        t.d($, "vietnam", function () {
          return Z;
        }),
        t.d($, "wales", function () {
          return X;
        });
      var Q = {};
      t.r(Q),
        t.d(Q, "ashWednesday", function () {
          return Bt;
        }),
        t.d(Q, "sundaysOfLent", function () {
          return Rt;
        }),
        t.d(Q, "daysOfLent", function () {
          return Ct;
        }),
        t.d(Q, "palmSunday", function () {
          return It;
        }),
        t.d(Q, "holyThursday", function () {
          return zt;
        }),
        t.d(Q, "goodFriday", function () {
          return jt;
        }),
        t.d(Q, "holySaturday", function () {
          return Ft;
        }),
        t.d(Q, "holyWeek", function () {
          return Ht;
        }),
        t.d(Q, "easter", function () {
          return Nt;
        }),
        t.d(Q, "sundaysOfEaster", function () {
          return Jt;
        }),
        t.d(Q, "daysOfEaster", function () {
          return Vt;
        }),
        t.d(Q, "octaveOfEaster", function () {
          return Wt;
        }),
        t.d(Q, "divineMercySunday", function () {
          return Gt;
        }),
        t.d(Q, "pentecostSunday", function () {
          return Kt;
        }),
        t.d(Q, "daysOfEarlyOrdinaryTime", function () {
          return Dt;
        }),
        t.d(Q, "daysOfLaterOrdinaryTime", function () {
          return Yt;
        }),
        t.d(Q, "christTheKing", function () {
          return wt;
        }),
        t.d(Q, "firstSundayOfAdvent", function () {
          return Ut;
        }),
        t.d(Q, "sundaysOfAdvent", function () {
          return Zt;
        }),
        t.d(Q, "daysOfAdvent", function () {
          return qt;
        }),
        t.d(Q, "christmas", function () {
          return vt;
        }),
        t.d(Q, "octaveOfChristmas", function () {
          return At;
        }),
        t.d(Q, "christmastide", function () {
          return Et;
        }),
        t.d(Q, "epiphany", function () {
          return Tt;
        }),
        t.d(Q, "daysBeforeEpiphany", function () {
          return Xt;
        }),
        t.d(Q, "daysAfterEpiphany", function () {
          return $t;
        }),
        t.d(Q, "maryMotherOfGod", function () {
          return St;
        }),
        t.d(Q, "josephHusbandOfMary", function () {
          return Qt;
        }),
        t.d(Q, "annunciation", function () {
          return en;
        }),
        t.d(Q, "birthOfJohnTheBaptist", function () {
          return an;
        }),
        t.d(Q, "peterAndPaulApostles", function () {
          return tn;
        }),
        t.d(Q, "assumption", function () {
          return nn;
        }),
        t.d(Q, "allSaints", function () {
          return rn;
        }),
        t.d(Q, "immaculateConception", function () {
          return on;
        }),
        t.d(Q, "ascension", function () {
          return sn;
        }),
        t.d(Q, "trinitySunday", function () {
          return dn;
        }),
        t.d(Q, "corpusChristi", function () {
          return un;
        }),
        t.d(Q, "sacredHeartOfJesus", function () {
          return ln;
        }),
        t.d(Q, "immaculateHeartOfMary", function () {
          return mn;
        }),
        t.d(Q, "holyFamily", function () {
          return yn;
        }),
        t.d(Q, "baptismOfTheLord", function () {
          return Pt;
        }),
        t.d(Q, "presentationOfTheLord", function () {
          return bt;
        }),
        t.d(Q, "transfiguration", function () {
          return cn;
        }),
        t.d(Q, "theExaltationOfTheHolyCross", function () {
          return hn;
        });
      var ee = {};
      t.r(ee),
        t.d(ee, "enCA", function () {
          return gn;
        }),
        t.d(ee, "en", function () {
          return kn;
        }),
        t.d(ee, "fr", function () {
          return Ln;
        }),
        t.d(ee, "it", function () {
          return On;
        }),
        t.d(ee, "pl", function () {
          return Tn;
        }),
        t.d(ee, "sk", function () {
          return vn;
        });
      var ae = {};
      t.r(ae),
        t.d(ae, "setLocale", function () {
          return Pn;
        }),
        t.d(ae, "getLocale", function () {
          return bn;
        }),
        t.d(ae, "localize", function () {
          return En;
        }),
        t.d(ae, "localizeDates", function () {
          return Dn;
        }),
        t.d(ae, "getTypeByDayOfWeek", function () {
          return Yn;
        });
      var te = {};
      t.r(te),
        t.d(te, "advent", function () {
          return Bn;
        }),
        t.d(te, "christmastide", function () {
          return Hn;
        }),
        t.d(te, "earlyOrdinaryTime", function () {
          return In;
        }),
        t.d(te, "lent", function () {
          return jn;
        }),
        t.d(te, "easterTriduum", function () {
          return Fn;
        }),
        t.d(te, "easterOctave", function () {
          return Wn;
        }),
        t.d(te, "eastertide", function () {
          return Jn;
        }),
        t.d(te, "laterOrdinaryTime", function () {
          return zn;
        });
      var ne = {};
      t.r(ne),
        t.d(ne, "dates", function () {
          return Kn;
        });
      var ie = {};
      t.r(ie),
        t.d(ie, "calendarFor", function () {
          return $n;
        }),
        t.d(ie, "queryFor", function () {
          return Qn;
        });
      var re = t(1),
        oe = t.n(re),
        se = t(0),
        de = t.n(se),
        ue = t(130),
        le = { 0: "Year A", 1: "Year B", 2: "Year C" },
        me = {
          RED: { key: "RED", value: "#FF0000" },
          ROSE: { key: "ROSE", value: "#FF007F" },
          PURPLE: { key: "PURPLE", value: "#800080" },
          GREEN: { key: "GREEN", value: "#008000" },
          WHITE: { key: "WHITE", value: "#FFFFFF" },
          GOLD: { key: "GOLD", value: "#FFD700" },
        },
        ye = {
          1: "Week I",
          2: "Week II",
          3: "Week III",
          4: "Week IV",
          5: "Easter",
        },
        ce = {
          ADVENT: "Advent",
          CHRISTMASTIDE: "Christmastide",
          EARLY_ORDINARY_TIME: "Early Ordinary Time",
          LATER_ORDINARY_TIME: "Later Ordinary Time",
          LENT: "Lent",
          HOLY_WEEK: "Holy Week",
          EASTER: "Easter",
        },
        he = {
          PATRON_OF_EUROPE: "PATRON_OF_EUROPE",
          FEAST_OF_THE_LORD: "FEAST_OF_THE_LORD",
          DOCTOR_OF_THE_CHURCH: "DOCTOR_OF_THE_CHURCH",
          MARIAN_FEAST: "MARIAN_FEAST",
          TRIDUUM: "TRIDUUM",
          MARTYR: "MARTYR",
        };
      function _e(e) {
        return (_e =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(e);
      }
      function Me(e, a) {
        if (!(e instanceof a))
          throw new TypeError("Cannot call a class as a function");
      }
      function pe(e, a) {
        return !a || ("object" !== _e(a) && "function" != typeof a) ? fe(e) : a;
      }
      function fe(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function ge(e) {
        var a = "function" == typeof Map ? new Map() : void 0;
        return (ge = function (e) {
          if (
            null === e ||
            ((t = e), -1 === Function.toString.call(t).indexOf("[native code]"))
          )
            return e;
          var t;
          if ("function" != typeof e)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          if (void 0 !== a) {
            if (a.has(e)) return a.get(e);
            a.set(e, n);
          }
          function n() {
            return Le(e, arguments, Te(this).constructor);
          }
          return (
            (n.prototype = Object.create(e.prototype, {
              constructor: {
                value: n,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
            Oe(n, e)
          );
        })(e);
      }
      function ke() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return (
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            ),
            !0
          );
        } catch (e) {
          return !1;
        }
      }
      function Le(e, a, t) {
        return (Le = ke()
          ? Reflect.construct
          : function (e, a, t) {
              var n = [null];
              n.push.apply(n, a);
              var i = new (Function.bind.apply(e, n))();
              return t && Oe(i, t.prototype), i;
            }).apply(null, arguments);
      }
      function Oe(e, a) {
        return (Oe =
          Object.setPrototypeOf ||
          function (e, a) {
            return (e.__proto__ = a), e;
          })(e, a);
      }
      function Te(e) {
        return (Te = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (e) {
              return e.__proto__ || Object.getPrototypeOf(e);
            })(e);
      }
      var ve = new ((function (e) {
          function a() {
            var e, t;
            Me(this, a);
            for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
              i[r] = arguments[r];
            t = pe(this, (e = Te(a)).call.apply(e, [this].concat(i)));
            var o = !0,
              s = !1,
              d = void 0;
            try {
              for (
                var u, l = fe(t)[Symbol.iterator]();
                !(o = (u = l.next()).done);
                o = !0
              ) {
                var m = u.value;
                Object.defineProperty(fe(t), m, { value: m, writable: !1 });
              }
            } catch (e) {
              (s = !0), (d = e);
            } finally {
              try {
                o || null == l.return || l.return();
              } finally {
                if (s) throw d;
              }
            }
            return t;
          }
          return (
            (function (e, a) {
              if ("function" != typeof a && null !== a)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (e.prototype = Object.create(a && a.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                a && Oe(e, a);
            })(a, e),
            a
          );
        })(ge(Array)))(
          "SOLEMNITY",
          "SUNDAY",
          "TRIDUUM",
          "HOLY_WEEK",
          "FEAST",
          "MEMORIAL",
          "OPT_MEMORIAL",
          "COMMEMORATION",
          "FERIA"
        ),
        Ae = {},
        Se = function (e) {
          var a,
            t = [
              {
                key: "blessedLauraVicunaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: {},
              },
              {
                key: "ourLadyQueenOfPeace",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 24 }),
                data: {},
              },
              {
                key: "saintTuribiusOfMogrovejoBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfLujanPatronessOfArgentina",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 4, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintIsidoreTheFarmer",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 15 }),
                data: {},
              },
              {
                key: "saintLuigiOrionePriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: {},
              },
              {
                key: "ourLadyOfItati",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 9 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsAugustineZhaoRongPriestAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 10 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCharbelMakhloufPriestAndHermit",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {},
              },
              {
                key: "saintFrancisSolanusPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRocco",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 16 }),
                data: {},
              },
              {
                key: "blessedCeferinoNamuncura",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {},
              },
              {
                key: "saintRoseOfLima",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfMercy",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintHectorValdivielsoSaezMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 9 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "ourLadyOfThePillar",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 12 }),
                data: {},
              },
              {
                key: "saintsRoqueGonzalezAlfonsoRodriguezOlmedoAndJuanDelCastilloPriestsAndMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 17 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintElizabethOfHungary",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfTheValley",
                type: ve.MEMORIAL,
                moment: ((a = e), Q.divineMercySunday(a).add(6, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Pe = {},
        be = function (e) {
          var a,
            t = [
              {
                key: "saintPatrickBishop",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 2, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 28 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "ourLadyHelpOfChristians",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 4, day: 24 }),
                data: {},
              },
              {
                key: "blessedPeterToRotMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 7 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintMaryOfTheCrossVirgin",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 7, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Ee = {},
        De = function (e) {
          var a = [
            {
              key: "saintJohnNepomucenePriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Ye = {},
        we = function (e) {
          var a = [
            {
              key: "saintBrotherMutienMarieReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 30 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAmandMissionary",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 6 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintGertrudeOfNivellesVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: {},
            },
            {
              key: "saintJulieBilliartVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 8 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintDamienDeVeusterPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintJulianaOfLiegeVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 7 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyMediatrix",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 31 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintLambertBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 17 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintHubertBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintJohnBerchmansReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 26 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Ce = {},
        Re = function (e) {
          var a,
            t = [
              {
                key: "saintPaulMikiAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 6 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintTuribiusOfMogrovejoBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintMarianaDeJesusDeParedesVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 25 }),
                data: {},
              },
              {
                key: "blessedNazariaIgnaciaMarchReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCamillusDeLellisPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 12 }),
                data: {},
              },
              {
                key: "saintFrancisSolanusPriest",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRoseOfLima",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterClaverPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 9 }),
                data: {},
              },
              {
                key: "saintJohnMaciasReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintLouisBertrandPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 9 }),
                data: {},
              },
              {
                key: "saintMiguelFebresCorderoReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 21 }),
                data: {},
              },
              {
                key: "saintAnthonyMaryClaretBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintMartinDePorresReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 3 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsRoqueGonzalezAlfonsoRodriguezOlmedoAndJuanDelCastilloPriestsAndMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 19 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Be = {},
        He = function (e) {
          var a = [
            {
              key: "saintScholasticaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedAloysiusStepinacBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 10 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedOsannaOfCattaroVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 27 }),
              data: {},
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "blessedIvanMerz",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintLeopoldMandicPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedMaryOfJesusCrucifiedPetkovicVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 9 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "ourLadyOfBistrica",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 13 }),
              data: {},
            },
            {
              key: "saintElijahProphet",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 20 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintClementOfOhridAndGorazdBishopsAndCompanions",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 27 }),
              data: {},
            },
            {
              key: "blessedAugustinKazoticBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 3 }),
              data: { titles: [he.MARTYR] },
            },
            {
              key: "saintRoch",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 16 }),
              data: {},
            },
            {
              key: "saintMarkoKrizinPriestAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 8, day: 7 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "blessedGraziaOfCattaro",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 27 }),
              data: {},
            },
            {
              key: "saintNikolaTavelicPriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 14 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
          ];
          return ae.localizeDates(a);
        },
        Ie = {},
        ze = function (e) {
          var a = [
            {
              key: "saintJoseDeAnchietaPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedAlbertinaBerkenbrockVirginAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 15 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintPaulinaOfTheAgonizingHeartOfJesusVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfMountCarmel",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 16 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedInacioDeAzevedoPriestAndCompanionsMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 17 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintRoseOfLima",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedsAndreDeSoveralAndAmbrosioFranciscoFerroPriestsAndMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 3 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.RED] } },
            },
            {
              key: "ourLadyOfAparecidaPatronessOfBrazil",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 9, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAnthonyOfSaintAnneGalvaoFreiGalvaoPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 25 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintsRoqueGonzalezAlfonsoRodriguezOlmedoAndJuanDelCastilloPriestsAndMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 19 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.RED] } },
            },
            {
              key: "ourLadyOfGuadalupe",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 11, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        je = {},
        Fe = function (e) {
          var a = [
            {
              key: "saintAndreBessetteReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 7 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintRaymondOfPenyafortPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 8 }),
              data: {},
            },
            {
              key: "saintMargueriteBourgeoysVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintJosephSpouseOfTheBlessedVirginMaryPrincipalPatronOfCanada",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 2, day: 19 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintKateriTekakwithaVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 17 }),
              data: {},
            },
            {
              key: "blessedMarieAnneBlondinVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 18 }),
              data: {},
            },
            {
              key: "ourLadyOfGoodCounsel",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 26 }),
              data: {},
            },
            {
              key: "saintMarieOfTheIncarnationReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 30 }),
              data: {},
            },
            {
              key: "blessedMarieLeonieParadisVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 4 }),
              data: {},
            },
            {
              key: "saintFrancoisDeLavalBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 6 }),
              data: {},
            },
            {
              key: "blessedCatherineOfSaintAugustineVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 8 }),
              data: {},
            },
            {
              key: "saintEugeneDeMazenodBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 21 }),
              data: {},
            },
            {
              key: "blessedLouisZephirinMoreauBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 24 }),
              data: {},
            },
            {
              key: "blessedsNykytaBudkaAndVasylVelychkowskyBishopsAndMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 27 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintAnnePatronOfQuebecAndSaintJoachimParentsOfTheBlessedVirginMary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 26 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedFredericJanssoonePriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 5 }),
              data: {},
            },
            {
              key: "blessedAndreGrassetPriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 2 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "blessedDinaBelangerVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 4 }),
              data: {},
            },
            {
              key: "blessedEmilieTavernierGamelinReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 24 }),
              data: {},
            },
            {
              key: "saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 8, day: 26 }),
              data: { meta: { liturgicalColor: me.RED } },
            },
            {
              key: "blessedMarieRoseDurocherVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 6 }),
              data: {},
            },
            {
              key: "saintMargueriteDYouvilleReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 16 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintHedwigReligiousOrSaintMargaretMaryAlacoqueVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 20 }),
              data: {},
            },
            {
              key: "ourLadyOfGuadalupe",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 11, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        We = {},
        Je = function (e) {
          var a,
            t = [
              {
                key: "blessedLauraVicunaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: {},
              },
              {
                key: "blessedPiusIxPope",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 7 }),
                data: {},
              },
              {
                key: "ourLadyOfLourdes",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 11 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsPhilipAndJamesApostles",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintTeresaOfLosAndesVirgin",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 13 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr ",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: {},
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAlbertoHurtadoPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRoseOfLima",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfMercy",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 24 }),
                data: {},
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Ve = {},
        xe = function (e) {
          var a,
            t,
            n,
            i = [
              {
                key: "blessedOdoricOfPordenonePriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 14 }),
                data: {},
              },
              {
                key: "saintFrancisFernandezDeCapillasPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 15 }),
                data: {},
              },
              {
                key: "saintLawrenceBaiXiaomanMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 23 }),
                data: {},
              },
              {
                key: "saintAugustineZhaoRongPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 27 }),
                data: {},
              },
              {
                key: "saintLaurenceWangBingAndCompanionsMartyrSaintJosephFreinademetzPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 29 }),
                data: {},
              },
              {
                key: "saintJohnOfTrioraPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 13 }),
                data: {},
              },
              {
                key: "saintMartinWuXueshengAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 17 }),
                data: {},
              },
              {
                key: "saintLucyYiZhenmeiVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 19 }),
                data: {},
              },
              {
                key: "saintPaulLiuHanzouPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 21 }),
                data: {},
              },
              {
                key: "saintsLouisVersigliaBishopAndCallistusCaravarioPriestMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 25 }),
                data: {},
              },
              {
                key: "saintAgnesCaoGuiyingMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 1 }),
                data: {},
              },
              {
                key: "saintJosephZhangDapengMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 12 }),
                data: {},
              },
              {
                key: "blessedMariaAssuntaPallottaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 8 }),
                data: {},
              },
              {
                key: "blessedJohnMartinMoyePriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: {},
              },
              {
                key: "ourLadyOfChina",
                type: ve.MEMORIAL,
                moment:
                  ((a = e),
                  (t = de.a.utc({ year: a, month: 4, day: 1 })),
                  (n = t),
                  n.add(6 - t.day(), "days"),
                  n.add(7, "days"),
                  n),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterLiuMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 14 }),
                data: {},
              },
              {
                key: "saintPeterSanzBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 27 }),
                data: {},
              },
              {
                key: "saintJoachimHoMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 29 }),
                data: {},
              },
              {
                key: "saintsGregoryGrassiFrancisFogollaAndAnthonyFantosatiBishopsAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 20 }),
                data: {},
              },
              {
                key: "saintJosephYuanPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 23 }),
                data: {},
              },
              {
                key: "sevenMartyredNunsFromTheFranciscanMissionariesOfMary",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 8 }),
                data: {},
              },
              {
                key: "saintAugustineZhaoRongPriestAndCompanionsMartyrs",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 9 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintLeoManginPriestAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 20 }),
                data: {},
              },
              {
                key: "saintAlbericCrescitelliPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 21 }),
                data: {},
              },
              {
                key: "saintPaulChenChangpinAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 28 }),
                data: {},
              },
              {
                key: "blessedMauriceTornayPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 11 }),
                data: {},
              },
              {
                key: "saintJohnGabrielPerboyrePriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 11 }),
                data: {},
              },
              {
                key: "saintFrancisDiazPriestAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 27 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintPeterWuMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 7 }),
                data: {},
              },
              {
                key: "saintGabrieltaurinDufresseBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 27 }),
                data: {},
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: (function (e) {
                  return Q.pentecostSunday(e).add(4, "days");
                })(e),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(i);
        },
        Ne = {},
        Ge = function (e) {
          var a = [
            {
              key: "blessedAloysiusStepinacBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 10 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "blessedIvanMerz",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintLeopoldMandicPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintQuirinusOfSescia",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 4 }),
              data: {},
            },
            {
              key: "blessedMaryOfJesusCrucifiedPetkovicVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 9 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "ourLadyOfBistrica",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 13 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedAugustinKazoticBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 3 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMarkoKrizinPriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 7 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintNikolaTavelicPriestAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 14 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Ke = {},
        Ue = function (e) {
          var a,
            t = [
              {
                key: "ourLadyMotherOfChristianUnity",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyMediatrixOfAllGrace",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 8 }),
                data: {},
              },
              {
                key: "saintAdalbertBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 23 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintSigismundMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 30 }),
                data: {},
              },
              {
                key: "saintJohnNepomucenePriestAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintClementMaryHofbauerPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 20 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintZdislava",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintVitusMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 15 }),
                data: {},
              },
              {
                key: "saintJohnNeumannBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 19 }),
                data: {},
              },
              {
                key: "saintProcopiusAbbot",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 4 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 5 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "blessedHroznataMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: {},
              },
              {
                key: "blessedCeslausAndSaintHyacinthPriests",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 17 }),
                data: {},
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintsBenedyktJanMateuszIsaakAndKrystynMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 25 }),
                data: {},
              },
              {
                key: "saintTeresaOfCalcuttaReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 5 }),
                data: {},
              },
              {
                key: "saintMelchiorGrodzieckiPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 7 }),
                data: {},
              },
              {
                key: "blessedCharlesSpinolaPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 10 }),
                data: {},
              },
              {
                key: "saintLudmilaMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRadimBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 12 }),
                data: {},
              },
              {
                key: "blessedKarlOfAustria",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 21 }),
                data: {},
              },
              {
                key: "saintWolfgangBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 31 }),
                data: {},
              },
              {
                key: "saintAgnesOfBohemiaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 13 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintEdmundCampionPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 1 }),
                data: {},
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        qe = {},
        Ze = function (e) {
          var a,
            t = [
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Xe = {},
        $e = function (e) {
          var a,
            t,
            n = [
              {
                key: "saintAelredOfRievaulx",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 12 }),
                data: {},
              },
              {
                key: "saintWulstanBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 19 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintDavidBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 2, day: 1 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPatrickBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 2, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintGeorgeMartyr",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = Q.holyWeek(e),
                    t = Q.octaveOfEaster(e),
                    n = Q.annunciation(e),
                    i = de.a.range(oe.a.head(a), oe.a.last(a)),
                    r = de.a.range(oe.a.head(t), oe.a.last(t)),
                    o = de.a.utc({ year: e, month: 3, day: 23 });
                  if (i.contains(o) || r.contains(o)) {
                    var s = oe.a.last(t).add(1, "days");
                    return s.isSame(n) ? oe.a.last(t).add(2, "days") : s;
                  }
                  return o;
                })(e),
                data: { prioritized: !0 },
              },
              {
                key: "saintAdalbertBishopAndMartyrSaintFidelisOfSigmaringenPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 24 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "theEnglishMartyrs",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "stDunstanArchbishopOfCanterbury",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 19 }),
                data: {},
              },
              {
                key: "saintBedeTheVenerablePriestAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 25 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintAugustineOfCanterburyBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBonifaceBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 5 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintEphraemDeaconDoctorOrSaintColumbaColumCilleAbbot",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 9 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintRichardOfChichesterBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 16 }),
                data: {},
              },
              {
                key: "saintAlbanMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 20 }),
                data: {},
              },
              {
                key: "saintsJohnFisherBishopAndThomasMoreMartyrs",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 5, day: 22 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintEtheldredaAudreyVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 23 }),
                data: {},
              },
              {
                key: "saintOliverPlunketBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 1 }),
                data: {},
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "blessedDominicOfTheMotherOfGodDominicBarberiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {},
              },
              {
                key: "saintsMargaretClitherowAnneLineAndMargaretWardMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 30 }),
                data: {},
              },
              {
                key: "saintAidanBishopAndTheSaintsOfLindisfarne",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 31 }),
                data: {},
              },
              {
                key: "saintGregoryTheGreatPopeAndDoctor",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 3 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintCuthbertBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 4 }),
                data: {},
              },
              {
                key: "saintTheodoreOfCanterburyBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 19 }),
                data: {},
              },
              {
                key: "ourLadyOfWalsingham",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedJohnHenryNewmanPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 9 }),
                data: {},
              },
              {
                key: "saintPaulinusOfYorkBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 10 }),
                data: {},
              },
              {
                key: "peterAndPaulApostles",
                type: ve.SOLEMNITY,
                moment:
                  ((a = e),
                  (t = de.a.utc({ year: a, month: 5, day: 29 })),
                  oe.a.eq(t.day(), 1)
                    ? t.subtract(1, "days")
                    : oe.a.eq(t.day(), 6)
                    ? t.add(1, "days").startOf("day")
                    : t),
                data: { prioritized: !0, meta: { liturgicalColor: me.RED } },
              },
              {
                key: "assumption",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 7, day: 15 });
                  return oe.a.eq(a.day(), 1)
                    ? a.subtract(1, "days")
                    : oe.a.eq(a.day(), 6)
                    ? a.add(1, "days").startOf("day")
                    : a;
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintWilfridBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 12 }),
                data: {},
              },
              {
                key: "saintEdwardTheConfessor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 13 }),
                data: {},
              },
              {
                key: "saintsChadAndCeddBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 26 }),
                data: {},
              },
              {
                key: "saintWinefrideVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 3 }),
                data: {},
              },
              {
                key: "saintWillibrordBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 7 }),
                data: {},
              },
              {
                key: "saintEdmundOfAbingdonBishopOrSaintMargaretOfScotland",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 16 }),
                data: {},
              },
              {
                key: "saintElizabethOfHungary",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 17 }),
                data: {},
              },
              {
                key: "saintAndrewApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 10, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSaints",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 10, day: 1 });
                  return oe.a.eq(a.day(), 6)
                    ? de.a.utc({ year: e, month: 10, day: 2 })
                    : a;
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSouls",
                type: ve.FEAST,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 10, day: 1 });
                  return oe.a.eq(a.day(), 6)
                    ? de.a.utc({ year: e, month: 10, day: 3 })
                    : de.a.utc({ year: e, month: 10, day: 2 });
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintThomasBecketBishopAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 29 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
            ];
          return ae.localizeDates(n);
        },
        Qe = {},
        ea = function (e) {
          var a = [
            {
              key: "saintHenryBishopAndMartyr",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 0, day: 19 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintEricIxMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 18 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedHemmingBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 22 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintUrsulaLedochowskaVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 29 }),
              data: {},
            },
            {
              key: "blessedElisabethHesselbaldVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 4 }),
              data: {},
            },
            {
              key: "saintJosemariaEscrivaDeBalaguerPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 26 }),
              data: {},
            },
            {
              key: "saintCanuteMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintThorlacBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 20 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintOlafIiMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 29 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedNicolasStenoBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 25 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        aa = {
          epiphanyOnJan6: !1,
          ascensionOnSunday: !0,
          corpusChristiOnThursday: !1,
        },
        ta = function (e) {
          var a = [
            {
              key: "saintGenevieveVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 3 }),
              data: {},
            },
            {
              key: "saintRemigiusBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 15 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBernadetteSoubirousVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 18 }),
              data: {},
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintIvoPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 19 }),
              data: {},
            },
            {
              key: "saintJoanOfArcVirginSecondaryPatronessOfFrance",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 30 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintPothinusBishopSaintBlAndinaVirginAndTheirCompanionsMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 2 }),
              data: {},
            },
            {
              key: "saintClotilde",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 4 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCaesariusOfArlesBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 26 }),
              data: {},
            },
            {
              key: "saintThereseOfTheChildJesusVirginSecondaryPatronessOfFrance",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 1 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
          ];
          return ae.localizeDates(a);
        };
      function na(e, a) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(e);
          a &&
            (n = n.filter(function (a) {
              return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            t.push.apply(t, n);
        }
        return t;
      }
      function ia(e, a, t) {
        return (
          a in e
            ? Object.defineProperty(e, a, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[a] = t),
          e
        );
      }
      function ra(e, a) {
        if (null == e) return {};
        var t,
          n,
          i = (function (e, a) {
            if (null == e) return {};
            var t,
              n,
              i = {},
              r = Object.keys(e);
            for (n = 0; n < r.length; n++)
              (t = r[n]), a.indexOf(t) >= 0 || (i[t] = e[t]);
            return i;
          })(e, a);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          for (n = 0; n < r.length; n++)
            (t = r[n]),
              a.indexOf(t) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, t) &&
                  (i[t] = e[t]));
        }
        return i;
      }
      var oa = {
          christmastideEnds: "o",
          epiphanyOnJan6: !1,
          christmastideIncludesTheSeasonOfEpiphany: !0,
          corpusChristiOnThursday: !1,
          ascensionOnSunday: !1,
        },
        sa = function (e) {
          var a,
            t = [
              {
                key: "saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 2 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "theMostHolyNameOfJesus",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 3 }),
                data: {},
              },
              {
                key: "saintRaymondOfPenyafortPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 7 }),
                data: {},
              },
              {
                key: "saintHilaryOfPoitiersBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 13 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintAnthonyOfEgyptAbbot",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsFabianPopeAndSebastianMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 20 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintAgnesVirginAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 21 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintVincentDeaconAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintFrancisDeSalesBishopAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 24 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "conversionOfSaintPaulApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 0, day: 25 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsTimothyAndTitusBishops",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAngelaMericiVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 27 }),
                data: {},
              },
              {
                key: "saintThomasAquinasPriestAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 28 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintJohnBoscoPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 31 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBlaseBishopAndMartyrSaintAnsgarBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 3 }),
                data: {},
              },
              {
                key: "saintAgathaVirginAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 5 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintPaulMikiAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 6 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintJeromeEmilianiSaintJosephineBakhitaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 8 }),
                data: {},
              },
              {
                key: "saintScholasticaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 10 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfLourdes",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 11 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "sevenHolyFoundersOfTheServiteOrder",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 17 }),
                data: {},
              },
              {
                key: "saintPeterDamianBishopAndDoctorOfTheChurch",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 21 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "chairOfSaintPeterApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 22 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPolycarpBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 23 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintCasimir",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 4 }),
                data: {},
              },
              {
                key: "saintsPerpetuaAndFelicityMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 7 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintJohnOfGodReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 8 }),
                data: {},
              },
              {
                key: "saintFrancesOfRomeReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 9 }),
                data: {},
              },
              {
                key: "saintPatrickBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 17 }),
                data: {},
              },
              {
                key: "saintCyrilOfJerusalemBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 18 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintTuribiusOfMogrovejoBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 2, day: 23 }),
                data: {},
              },
              {
                key: "saintFrancisOfPaolaHermit",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 2 }),
                data: {},
              },
              {
                key: "saintIsidoreOfSevilleBishopAndDoctorOfTheChurch",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 4 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintVincentFerrerPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 5 }),
                data: {},
              },
              {
                key: "saintJohnBaptistDeLaSallePriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 7 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintStanislausBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 11 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintMartinIPopeAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 13 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintAnselmOfCanterburyBishopAndDoctorOfTheChurch",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 21 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintGeorgeMartyrSaintAdalbertBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 23 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintFidelisOfSigmaringenPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 24 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintMarkTheEvangelist",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 25 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 28 }),
                data: {},
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintPiusVPope",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 30 }),
                data: {},
              },
              {
                key: "saintJosephTheWorker",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 1 }),
                data: {},
              },
              {
                key: "saintAthanasiusBishopAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 2 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintsPhilipAndJamesApostles",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 3 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsNereusAndAchilleusMartyrsSaintPancrasMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 12 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "ourLadyOfFatima",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 13 }),
                data: {},
              },
              {
                key: "saintMatthiasTheApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 14 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJohnIPopeAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 18 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintBernardineOfSienaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 20 }),
                data: {},
              },
              {
                key: "saintChristopherMagallanesAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 21 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintRitaOfCascia",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 22 }),
                data: {},
              },
              {
                key: "saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 25 }),
                data: {},
              },
              {
                key: "saintPhilipNeriPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAugustineOfCanterburyBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 27 }),
                data: {},
              },
              {
                key: "visitationOfTheBlessedVirginMary",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 31 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJustinMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 1 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintsMarcellinusAndPeterMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 2 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintsCharlesLwangaAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 3 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintBonifaceBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 5 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintNorbertBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 6 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintEphremDeaconAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 9 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintBarnabasTheApostle",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 11 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAnthonyOfPaduaPriestAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 13 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintRomualdAbbot",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 19 }),
                data: {},
              },
              {
                key: "saintAloysiusGonzagaReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 21 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 22 }),
                data: {},
              },
              {
                key: "saintCyrilOfAlexandriaBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 27 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintIrenaeusBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 28 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "firstMartyrsOfTheChurchOfRome",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 30 }),
                data: {},
              },
              {
                key: "saintThomasTheApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 3 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintElizabethOfPortugal",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 4 }),
                data: {},
              },
              {
                key: "saintAnthonyZaccariaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 5 }),
                data: {},
              },
              {
                key: "saintMariaGorettiVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 6 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintsAugustineZhaoRongPriestAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 9 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintHenryBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 13 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintCamillusDeLellisPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: {},
              },
              {
                key: "saintBonaventureBishopAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 15 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: {},
              },
              {
                key: "saintApollinaris",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 20 }),
                data: {},
              },
              {
                key: "saintLawrenceOfBrindisiPriestAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 21 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintMaryMagdalene",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 22 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "maryMotherOfTheChurch",
                type: ve.MEMORIAL,
                moment: ((a = e), Q.pentecostSunday(a).add(1, "days")),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintCharbelMakhloufPriestAndHermit",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 24 }),
                data: {},
              },
              {
                key: "saintJamesApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 25 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsJoachimAndAnne",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintMartha",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 29 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterChrysologusBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 30 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintIgnatiusOfLoyolaPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 31 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 1 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 2 }),
                data: {},
              },
              {
                key: "saintJeanVianneyTheCureOfArsPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "dedicationOfTheBasilicaOfSaintMaryMajor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 5 }),
                data: {},
              },
              {
                key: "saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 7 }),
                data: {},
              },
              {
                key: "saintDominicPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintLawrenceOfRomeDeaconAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 10 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintClareVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 11 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJaneFrancesDeChantalReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 12 }),
                data: {},
              },
              {
                key: "saintsPontianPopeAndHippolytusPriestMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 13 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintMaximilianMaryKolbePriestAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 14 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintStephenOfHungary",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 16 }),
                data: {},
              },
              {
                key: "saintJohnEudesPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 19 }),
                data: {},
              },
              {
                key: "saintBernardOfClairvauxAbbotAndDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 20 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintPiusXPope",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 21 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "queenshipOfBlessedVirginMary",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 22 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRoseOfLima",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 23 }),
                data: {},
              },
              {
                key: "saintBartholomewTheApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintLouisSaintJosephOfCalasanzPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 25 }),
                data: {},
              },
              {
                key: "saintMonica",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAugustineOfHippoBishopAndDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 28 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "theBeheadingOfSaintJohnTheBaptistMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 29 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintGregoryTheGreatPopeAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 3 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "birthOfTheBlessedVirginMary",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPeterClaverPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 9 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "holyNameOfTheBlessedVirginMary",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 12 }),
                data: {},
              },
              {
                key: "saintJohnChrysostomBishopAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 13 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "theExaltationOfTheHolyCross",
                type: ve[4],
                moment: de.a.utc({ year: e, month: 8, day: 14 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "ourLadyOfSorrows",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 15 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsCorneliusPopeAndCyprianBishopMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 16 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintRobertBellarmineBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 17 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintJanuariusBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 19 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 20 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintMatthewApostleAndEvangelist",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 21 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPioOfPietrelcinaPadrePioPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsCosmasAndDamianMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 26 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintVincentDePaulPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 28 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintsMichaelGabrielAndRaphaelArchangels",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 29 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJeromePriestAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 30 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintThereseOfTheChildJesusVirginAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 1 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "guardianAngels",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 2 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFrancisOfAssisi",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBrunoPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 6 }),
                data: {},
              },
              {
                key: "ourLadyOfTheRosary",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 7 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 9 }),
                data: {},
              },
              {
                key: "popeSaintJohnXXIII",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 11 }),
                data: {},
              },
              {
                key: "popeSaintJohnPaulII",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 22 }),
                data: {},
              },
              {
                key: "saintCallistusIPopeAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 14 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintTeresaOfJesusVirginAndDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 15 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 16 }),
                data: {},
              },
              {
                key: "saintIgnatiusOfAntiochBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 17 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintLukeTheEvangelist",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 19 }),
                data: {},
              },
              {
                key: "saintJohnOfCapistranoPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 23 }),
                data: {},
              },
              {
                key: "saintAnthonyMaryClaretBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 24 }),
                data: {},
              },
              {
                key: "saintsSimonAndJudeApostles",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 28 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSouls",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 10, day: 2 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintMartinDePorresReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 3 }),
                data: {},
              },
              {
                key: "saintCharlesBorromeoBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "dedicationOfTheLateranBasilica",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 10, day: 9 }),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintLeoTheGreatPopeAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 10 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintMartinOfToursBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 11 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJosaphatBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 12 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintAlbertTheGreatBishopAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 15 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintMargaretOfScotlandSaintGertrudeTheGreatVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 16 }),
                data: {},
              },
              {
                key: "saintElizabethOfHungary",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 18 }),
                data: {},
              },
              {
                key: "presentationOfTheBlessedVirginMary",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 21 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCeciliaVirginAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 22 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintClementIPopeAndMartyrSaintColumbanReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 23 }),
                data: {},
              },
              {
                key: "saintAndrewDungLacAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 24 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintCatherineOfAlexandriaVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 25 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintAndrewTheApostle",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 10, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFrancisXavierPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 3 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJohnDamascenePriestAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 4 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintNicholasBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 6 }),
                data: {},
              },
              {
                key: "saintAmbroseBishopAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 7 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintJuanDiegoCuauhtlatoatzin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 9 }),
                data: {},
              },
              {
                key: "ourLadyOfLoreto",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 10 }),
                data: {},
              },
              {
                key: "saintDamasusIPope",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 11 }),
                data: {},
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: {},
              },
              {
                key: "saintLucyOfSyracuseVirginAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 13 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintJohnOfTheCrossPriestAndDoctor",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintPeterCanisiusPriestAndDoctor",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 21 }),
                data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
              },
              {
                key: "saintJohnOfKantyPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 23 }),
                data: {},
              },
              {
                key: "saintStephenTheFirstMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 26 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintJohnTheApostleAndEvangelist",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "holyInnocentsMartyrs",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 28 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintThomasBecketBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 29 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintSylvesterIPope",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 31 }),
                data: {},
              },
            ];
          return oe.a.map(t, function (e) {
            var a = e.key,
              t = e.data,
              n = ra(e, ["key", "data"]),
              i = ae.localize({ key: "sanctoral." + a }),
              r = t.meta;
            return (
              oe.a.isUndefined(r) && (t.meta = { titles: [] }),
              (function (e) {
                for (var a = 1; a < arguments.length; a++) {
                  var t = null != arguments[a] ? arguments[a] : {};
                  a % 2
                    ? na(Object(t), !0).forEach(function (a) {
                        ia(e, a, t[a]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(
                        e,
                        Object.getOwnPropertyDescriptors(t)
                      )
                    : na(Object(t)).forEach(function (a) {
                        Object.defineProperty(
                          e,
                          a,
                          Object.getOwnPropertyDescriptor(t, a)
                        );
                      });
                }
                return e;
              })({ name: i, key: a, data: t }, n)
            );
          });
        },
        da = {},
        ua = function (e) {
          var a = [
            {
              key: "saintJohnNeumannBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 5 }),
              data: {},
            },
            {
              key: "saintValentineOfRaetiaBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 7 }),
              data: {},
            },
            {
              key: "saintSeverinusOfNoricumMonk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 8 }),
              data: {},
            },
            {
              key: "saintMeinradMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 21 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "blessedHenrySusoPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 23 }),
              data: {},
            },
            {
              key: "saintRabanusMaurusBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 4 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMatthiasTheApostle",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 24 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintWalburgaAbbess",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 25 }),
              data: {},
            },
            {
              key: "saintFridolinOfSackingenMonk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 6 }),
              data: {},
            },
            {
              key: "saintBrunoBonifaceOfQuerfurtBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 9 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintMatilda",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 14 }),
              data: {},
            },
            {
              key: "saintClementMaryHofbauerPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 15 }),
              data: {},
            },
            {
              key: "saintGertrudeOfNivellesAbbess",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: {},
            },
            {
              key: "saintLudgerBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 26 }),
              data: {},
            },
            {
              key: "saintLeoIxPopeOrBlessedMarcelCalloMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 19 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintConradOfParzhamReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 21 }),
              data: {},
            },
            {
              key: "saintPeterCanisiusPriestAndDoctor",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 27 }),
              data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintFlorianAndHisCompanionsMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 4 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintGotthardBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 5 }),
              data: {},
            },
            {
              key: "saintJohnNepomucenePriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintHermannJosephPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 21 }),
              data: {},
            },
            {
              key: "saintVitusMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 15 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBennoOfMeissenBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 16 }),
              data: {},
            },
            {
              key: "saintHemmaOfGurk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 27 }),
              data: {},
            },
            {
              key: "saintOttoOfBambergBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 30 }),
              data: {},
            },
            {
              key: "visitationOfTheBlessedVirginMary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 2 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintUlrichOfAugsburg",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 4 }),
              data: {},
            },
            {
              key: "saintWillibaldBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 7 }),
              data: {},
            },
            {
              key: "saintKilianBishopAndCompanionsMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 8 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintsCanuteEricAndOlafMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 10 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintsHenryAndCunigunde",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 13 }),
              data: {},
            },
            {
              key: "saintMargaretOfAntiochVirginAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 20 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintChristopherMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 24 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintPaulinusOfTrierBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 31 }),
              data: {},
            },
            {
              key: "saintHildegardOfBingenAbbessAndDoctor",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 17 }),
              data: { meta: { titles: [he.DOCTOR_OF_THE_CHURCH] } },
            },
            {
              key: "saintLambertBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 18 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintMauriceAndCompanionsMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 22 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintsRupertAndVirgiliusOfSalzburgBishops",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 24 }),
              data: {},
            },
            {
              key: "saintNicholasOfFlueHermit",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 25 }),
              data: {},
            },
            {
              key: "saintLeobaAbbess",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 28 }),
              data: {},
            },
            {
              key: "saintGallAbbotAndMissionary",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 16 }),
              data: {},
            },
            {
              key: "saintWendelinAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 20 }),
              data: {},
            },
            {
              key: "saintUrsulaAndCompanionsVirginsAndMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 21 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintWolfgangOfRegensburgBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 31 }),
              data: {},
            },
            {
              key: "saintHubertOfLiegeBishopOrSaintPirminAbbotAndBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 3 }),
              data: {},
            },
            {
              key: "saintLeonardOfNoblacHermit",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 6 }),
              data: {},
            },
            {
              key: "saintWillibrordBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 7 }),
              data: {},
            },
            {
              key: "saintLeopoldIII",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 15 }),
              data: {},
            },
            {
              key: "saintGertrudeTheGreatVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 17 }),
              data: {},
            },
            {
              key: "saintElizabethOfHungary",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 19 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintCorbinianBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 20 }),
              data: {},
            },
            {
              key: "saintsConradAndGebhardOfConstanceBishops",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 26 }),
              data: {},
            },
            {
              key: "saintLuciusOfChurBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 2 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBarbaraVirginAndMartyrOrBlessedAdolphKolpingPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 4 }),
              data: {},
            },
            {
              key: "saintAnnoIiBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 5 }),
              data: {},
            },
            {
              key: "saintOdileOfAlsaceAbbess",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 13 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        la = {},
        ma = function (e) {
          var a = [
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCyrilOfJerusalemBishopAndDoctor",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 18 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintAdalbertBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 22 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintGeorgeMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 23 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintIrene",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 5 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfFatima",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 15 }),
              data: {},
            },
            {
              key: "saintCyrilOfAlexandriaBishopAndDoctor",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 27 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMarina",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 17 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintPantaleon",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 27 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintLydiaOfPhilippi",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintsCosmasAndDamian",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 26 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintDionysiusTheAreopagite",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintDemetrius",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 26 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "presentationOfTheBlessedVirginMary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 21 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBarbaraVirginAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 4 }),
              data: {},
            },
            {
              key: "saintNicholasBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 6 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintSpyridon",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        ya = {},
        ca = function (e) {
          var a = [
            {
              key: "saintMargaretOfHungary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 0, day: 18 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMatthiasTheApostle",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 24 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAdalbertBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 23 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintFlorianMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 4 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "blessedGisela",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 7 }),
              data: {},
            },
            {
              key: "blessedSaraSalkahaziVirginAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 11 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintJohnNepomucenePriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "blessedVilmosAporBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 23 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "ourLadyHelpOfChristians",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 24 }),
              data: {},
            },
            {
              key: "transferOfTheRelicsOfSaintStephen",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 30 }),
              data: {},
            },
            {
              key: "saintAgnesOfBohemiaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 8 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintLadislaus",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 5, day: 27 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "visitationOfTheBlessedVirginMary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 2 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintsAndrewZorardAndBenedictHermits",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 17 }),
              data: {},
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintKingaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 24 }),
              data: {},
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedInnocentXiPope",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 13 }),
              data: {},
            },
            {
              key: "saintStephenOfHungary",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 7, day: 20 }),
              data: {},
            },
            {
              key: "saintTeresaOfCalcuttaReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 5 }),
              data: {},
            },
            {
              key: "saintsMarkoKrizinMelicharGrodeckiAndStephenPongracPriestsAndMartyrs",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 8, day: 7 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintGerardBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 8, day: 24 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfHungary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 9, day: 8 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintMaurusBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 25 }),
              data: {},
            },
            {
              key: "blessedTheodoreRomzhaBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 31 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintEmeric",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 4 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "hungarianSaintsAndBlesseds",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 13 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        ha = {},
        _a = function (e) {
          var a = [
            {
              key: "blessedKuriakoseEliasChavaraPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 3 }),
              data: {},
            },
            {
              key: "blessedJosephVazPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 16 }),
              data: {},
            },
            {
              key: "saintJohnDeBritoPriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 4 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintGonsaloGarciaMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 6 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "blessedMariaTheresaChiramelVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 8 }),
              data: {},
            },
            {
              key: "saintThomasTheApostle",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 6, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAlphonsaOfTheImmaculateConceptionVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 28 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintTeresaOfCalcuttaReligious",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 8, day: 5 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintFrancisXavierPriest",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 11, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Ma = {},
        pa = function (e) {
          var a = [
            {
              key: "saintMunchinBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 3 }),
              data: {},
            },
            {
              key: "saintItaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 15 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintFursaAbbotAndMissionary",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 16 }),
              data: {},
            },
            {
              key: "saintAidanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 30 }),
              data: {},
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 1 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMelBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 7 }),
              data: {},
            },
            {
              key: "saintGobnaitVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 11 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintFintan",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 17 }),
              data: {},
            },
            {
              key: "saintDavidBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 1 }),
              data: {},
            },
            {
              key: "saintKieranBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 5 }),
              data: {},
            },
            {
              key: "saintSenanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 8 }),
              data: {},
            },
            {
              key: "saintAengusOengusBishopAndAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 11 }),
              data: {},
            },
            {
              key: "saintPatrickBishop",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintEndaAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 21 }),
              data: {},
            },
            {
              key: "saintMacartanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 24 }),
              data: {},
            },
            {
              key: "saintCeallachCelsusBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 1 }),
              data: {},
            },
            {
              key: "saintMolaiseLaisrenLaserianBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 18 }),
              data: {},
            },
            {
              key: "saintAsicusBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 27 }),
              data: {},
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintConlethBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 4 }),
              data: {},
            },
            {
              key: "blessedEdmundIgnatiusRiceReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 5 }),
              data: {},
            },
            {
              key: "saintComgallAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 10 }),
              data: {},
            },
            {
              key: "saintCarthageBishopMochuta",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 15 }),
              data: {},
            },
            {
              key: "saintBrendanAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: {},
            },
            {
              key: "saintKevinAbbot",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintJarlathBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 6 }),
              data: {},
            },
            {
              key: "saintColmanOfDromoreBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 7 }),
              data: {},
            },
            {
              key: "saintColumbaAbbotAndMissionary",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 5, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintDavnetVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 14 }),
              data: {},
            },
            {
              key: "blessedIrishMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 20 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintOliverPlunkettBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 1 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintMoninneVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 6 }),
              data: {},
            },
            {
              key: "saintMaelruainMaolruainVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 7 }),
              data: {},
            },
            {
              key: "saintKillianBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 8 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintDeclanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 24 }),
              data: {},
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMuiredachBishopSaintAttractaVirginOrSaintLeliaVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 12 }),
              data: {},
            },
            {
              key: "saintFachtnaBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 13 }),
              data: {},
            },
            {
              key: "ourLadyOfKnock",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 17 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintEugeneEoghanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 23 }),
              data: {},
            },
            {
              key: "saintFiacreMonk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 30 }),
              data: {},
            },
            {
              key: "saintAidanOfLindisfarneBishopAndMissionary",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 31 }),
              data: {},
            },
            {
              key: "saintMacNissiBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 4 }),
              data: {},
            },
            {
              key: "saintCiaranAbbot",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAilbeBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 12 }),
              data: {},
            },
            {
              key: "saintPioOfPietralcina",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintFinbarrBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 25 }),
              data: {},
            },
            {
              key: "blessedColumbaMarmionPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 3 }),
              data: {},
            },
            {
              key: "blessedJohnHenryNewmanPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 9 }),
              data: {},
            },
            {
              key: "saintCaniceAbbot",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 11 }),
              data: {},
            },
            {
              key: "saintGallAbbotAndMissionary",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 16 }),
              data: {},
            },
            {
              key: "saintOtteranMonk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 27 }),
              data: {},
            },
            {
              key: "saintColmanOfKilmacduaghBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 29 }),
              data: {},
            },
            {
              key: "saintMalachyBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "allSaintsOfIreland",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 6 }),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintWillibrordBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 7 }),
              data: {},
            },
            {
              key: "saintLaurenceOTooleBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 14 }),
              data: {},
            },
            {
              key: "saintColumbanAbbotAndMissionary",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintColmanOfCloyneBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 25 }),
              data: {},
            },
            {
              key: "saintFergalBishopAndMissionary",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 27 }),
              data: {},
            },
            {
              key: "saintFinnianOfClonardBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 12 }),
              data: {},
            },
            {
              key: "saintFlannanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 18 }),
              data: {},
            },
            {
              key: "saintFachananOfKilfenoraBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 20 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        fa = {},
        ga = function (e) {
          var a = [
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintNorbertBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 6 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBarnabasTheApostle",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 11 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintMaryMagdalene",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 22 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {},
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintFrancisOfAssisi",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 9, day: 4 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "popeSaintJohnXXIII",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 11 }),
              data: {},
            },
            {
              key: "popeSaintJohnPaulII",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 22 }),
              data: {},
            },
            {
              key: "maryMotherOfTheChurch",
              type: ve.MEMORIAL,
              moment: Q.pentecostSunday(e).add(1, "days"),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        ka = {},
        La = function (e) {
          var a = [
            {
              key: "saintPaulMikiAndCompanionsMartyrs",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 6 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "discoveryOfTheHiddenChristians",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: {},
            },
            {
              key: "blessedPeterKibePriestAndCompanionsMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 1 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "205BlessedMartyrsOfJapan",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintThomasRokuzayemonPriestAndCompanionsMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 28 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintFrancisXavierPriest",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 11, day: 3 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Oa = {},
        Ta = function (e) {
          var a = [
            {
              key: "saintBarbaraVirginAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 4 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintNicholasBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 6 }),
              data: {},
            },
            {
              key: "saintCharbelMakhloufPriestAndHermit",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 24 }),
              data: {},
            },
            {
              key: "saintMaroun",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 9 }),
              data: {},
            },
            {
              key: "saintRafqaRebeccaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 23 }),
              data: {},
            },
            {
              key: "saintGeorgeMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 23 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "ourLadyOfLebanon",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 4, day: 1 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        va = {},
        Aa = function (e) {
          var a = [
            {
              key: "blessedJerzyMatulewiczBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 27 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: { meta: { titles: [he.PATRON_OF_EUROPE] } },
            },
            {
              key: "saintCasimir",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 2, day: 4 }),
              data: {},
            },
            {
              key: "saintBrunoBonifaceOfQuerfurtBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 9 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintAdalbertBishopAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 23 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintAndrewBobolaPriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "ourLadyMotherOfMercy",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 10, day: 16 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: { meta: { titles: [he.PATRON_OF_EUROPE] } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintRocco",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 16 }),
              data: {},
            },
            {
              key: "saintHyacinthPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 17 }),
              data: {},
            },
            {
              key: "birthOfTheBlessedVirginMary",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 8, day: 8 }),
              data: {},
            },
            {
              key: "saintFaustinaKowalskaVirginAndReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 5 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        Sa = {},
        Pa = function (e) {
          var a = [
            {
              key: "saintPubliusBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 22 }),
              data: {},
            },
            {
              key: "shipwreckOfSaintPaulApostle",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 1, day: 10 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedMariaAdeodataPisaniVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 25 }),
              data: {},
            },
            {
              key: "ourLadyOfSorrows",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 15 }),
              data: {},
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  titles: [he.DOCTOR_OF_THE_CHURCH, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintPiusVPope",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 30 }),
              data: {},
            },
            {
              key: "saintGeorgePrecaPriest",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 4, day: 9 }),
              data: {},
            },
            {
              key: "blessedNazjuFalzon",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 1 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {},
            },
            {
              key: "ourLadyOfMountCarmel",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 16 }),
              data: {},
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCatherineOfAlexandriaVirginAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 25 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
          ];
          return ae.localizeDates(a);
        },
        ba = {},
        Ea = function (e) {
          var a,
            t = [
              {
                key: "saintFelipeDeJesusPriestAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintJohnNepomucenePriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "blessedSebastianDeAparicioReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 25 }),
                data: {},
              },
              {
                key: "saintChristopherMagallanesAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 21 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintMariaDeJesusSacramentadoVenegasVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 30 }),
                data: {},
              },
              {
                key: "blessedBartolomeLaurelReligiousAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 16 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "blessedsPedroZunigaAndLuisFloresPriestsAndMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 16 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "blessedJuniperoSerraPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {},
              },
              {
                key: "saintJoseMariaDeYermoPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 19 }),
                data: {},
              },
              {
                key: "saintRafaelGuizarYValenciaBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 24 }),
                data: {},
              },
              {
                key: "blessedMiguelAgustinProPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 23 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintJuanDiego",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 9 }),
                data: {},
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: {},
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Da = {},
        Ya = function (e) {
          var a,
            t = [
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        wa = {},
        Ca = function (e) {
          var a = [
            {
              key: "waitangiDay",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 6 }),
              data: {},
            },
            {
              key: "saintPaulMikiAndCompanionsMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 7 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintPatrickBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: {},
            },
            {
              key: "saintMarkApostle",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 26 }),
              data: {},
            },
            {
              key: "saintLouisGrignonDeMontfortPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 27 }),
              data: {},
            },
            {
              key: "saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 28 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "ourLadyHelpOfChristians",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 24 }),
              data: {},
            },
            {
              key: "saintMarcellinChampagnatPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 6 }),
              data: {},
            },
            {
              key: "saintDominicPriest/SaintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 7 }),
              data: {},
            },
            {
              key: "saintMaryMacKillopVirgin",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 8 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        Ra = {},
        Ba = function (e) {
          var a = [
            {
              key: "saintThorfinnBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 8 }),
              data: {},
            },
            {
              key: "saintHenryBishopAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 19 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintEysteinnBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 26 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: { meta: { titles: [he.PATRON_OF_EUROPE] } },
            },
            {
              key: "saintMagnusMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 3, day: 16 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintEricIxMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 18 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintSunnivaVirginAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 8 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintCanuteMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 10 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: { meta: { titles: [he.PATRON_OF_EUROPE] } },
            },
            {
              key: "saintSwithunBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 15 }),
              data: {},
            },
            {
              key: "saintThorlacBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 20 }),
              data: {},
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintOlafIiMartyr",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 4, day: 29 }),
              data: {
                meta: { liturgicalColor: me.WHITE, titles: [he.MARTYR] },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedNicolasStenoBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 25 }),
              data: {},
            },
          ];
          return ae.localizeDates(a);
        },
        Ha = {},
        Ia = function (e) {
          var a,
            t = [
              {
                key: "findingOfTheHolyCross",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 3 }),
                data: {},
              },
              {
                key: "ourLadyHelpOfChristians",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 24 }),
                data: {},
              },
              {
                key: "saintMarianaDeJesusDeParedesVirgin",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 26 }),
                data: {},
              },
              {
                key: "saintFrancisSolanusPriest",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: {},
              },
              {
                key: "ourLadyOfPeace",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 28 }),
                data: {},
              },
              {
                key: "saintRoseOfLima",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 7, day: 23 }),
                data: {},
              },
              {
                key: "saintJohnMaciasReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 18 }),
                data: {},
              },
              {
                key: "ourLadyOfMercy",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 24 }),
                data: {},
              },
              {
                key: "ourLordOfMiracles",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 28 }),
                data: {},
              },
              {
                key: "saintMartinDePorresReligious",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 10, day: 3 }),
                data: {},
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: {},
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        za = {},
        ja = function (e) {
          var a,
            t,
            n = [
              {
                key: "santoNinoInfantJesus",
                type: ve.FEAST,
                moment:
                  ((a = de.a.utc({ year: e, month: 0, day: 1 })),
                  (t = 22 - (0 == a.day() ? 7 : a.day())),
                  de.a.utc({ year: e, month: 0, day: t })),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPaulMikiAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 6 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintPedroCalungsodMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 2 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintIsidoreTheFarmer",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 15 }),
                data: {},
              },
              {
                key: "saintRoch",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 16 }),
                data: {},
              },
              {
                key: "saintEzekielMorenoBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 19 }),
                data: {},
              },
              {
                key: "saintLorenzoRuizAndCompanionsMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 28 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "immaculateConceptionOfTheBlessedVirginMaryPrincipalPatronessOfThePhilippines",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 11, day: 8 }),
                data: {},
              },
            ];
          return ae.localizeDates(n);
        },
        Fa = {},
        Wa = function (e) {
          var a,
            t = [
              {
                key: "saintJozefSebastianPelczar",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 19 }),
                data: {},
              },
              {
                key: "saintVincentPallottiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: {},
              },
              {
                key: "blessedVincentLewoniukAndCompanionsMartyrsOfPratulin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 23 }),
                data: {},
              },
              {
                key: "blessedJerzyMatulewiczBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 27 }),
                data: {},
              },
              {
                key: "blessedBoleslawaMariaLamentVirginAndSaintAngelaMericiVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 29 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintCasimir",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 2, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAdalbertBishopAndMartyr",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = Q.holyWeek(e),
                    t = Q.octaveOfEaster(e),
                    n = Q.annunciation(e),
                    i = de.a.range(oe.a.head(a), oe.a.last(a)),
                    r = de.a.range(oe.a.head(t), oe.a.last(t)),
                    o = de.a.utc({ year: e, month: 3, day: 23 });
                  if (i.contains(o) || r.contains(o)) {
                    var s = oe.a.last(t).add(1, "days");
                    return s.isSame(n) ? n.add(1, "days") : s;
                  }
                  return o;
                })(e),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "ourLadyQueenOfPoland",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 4, day: 3 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyHelpOfChristians",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFlorianMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintStanislausKazimierczykPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 5 }),
                data: {},
              },
              {
                key: "saintsPhilipAndJamesApostles",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 6 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintStanislausBishopAndMartyr",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 4, day: 8 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "saintAndrewBobolaPriestAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintUrsulaLedochowskaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 29 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJohnSarkanderPriestAndMartyrSaintZdzislawa",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 30 }),
                data: {},
              },
              {
                key: "saintHedwigOfPoland",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedBogumilBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 10 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedAntoniNowowiejskiBishopAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 12 }),
                data: {},
              },
              {
                key: "blessedMichaelKozalBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 14 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedJolantaReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 15 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintAlbertChmielowskiReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintZygmuntGorazdowskiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 26 }),
                data: {},
              },
              {
                key: "saintOttoOfBambergBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 1 }),
                data: {},
              },
              {
                key: "saintMariaGorettiVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 5 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "blessedMariaTeresaLedochowskaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 6 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJohnOfDuklaPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 8 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBrunoBonifaceOfQuerfurtBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsAndrewZorardAndBenedictHermits",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 13 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 14 }),
                data: {},
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintSimonOfLipnicaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 18 }),
                data: {},
              },
              {
                key: "blessedCzeslawPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 20 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintApollinaris",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 21 }),
                data: {},
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintKingaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 24 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCharbelMakhloufPriestAndHermit",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 28 }),
                data: {},
              },
              {
                key: "blessedEdmundBojanowski",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 7 }),
                data: {},
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintHyacinthPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfCzestochowa",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedBronislawaVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 1 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedMariaStellaAndCompanionsVirginsAndMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 4 }),
                data: {},
              },
              {
                key: "saintMelchiorGrodzieckiPriestAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 7 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedAnielaSalawaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 9 }),
                data: {},
              },
              {
                key: "saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 10 }),
                data: {},
              },
              {
                key: "saintZygmuntSzczesnyFelinskiBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 17 }),
                data: {},
              },
              {
                key: "saintStanislausKostkaReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 8, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedWladyslawOfGielniowPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 25 }),
                data: {},
              },
              {
                key: "saintsLawrenceRuizAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 26 }),
                data: {},
              },
              {
                key: "saintWenceslausMartyr",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 8, day: 28 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFaustinaKowalskaVirginAndReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 5 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedVincentKadlubekBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 9 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedMaryAngelaTruszkowskaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 10 }),
                data: {},
              },
              {
                key: "blessedJohnBeyzymPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedHonoratKozminskiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 13 }),
                data: {},
              },
              {
                key: "saintMargaretMaryAlacoque",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 14 }),
                data: {},
              },
              {
                key: "saintHedwigOfSilesia",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 16 }),
                data: {},
              },
              {
                key: "saintJohnOfKantyPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 20 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedJakubStrzemieBishop",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 21 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "popeSaintJohnPaulII",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 22 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJosefBilczewskiBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 23 }),
                data: {},
              },
              {
                key: "dedicationOfAParticularChurch",
                type: ve.SOLEMNITY,
                moment: de()({ year: e, month: 9 })
                  .endOf("month")
                  .startOf("week"),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsBenedyktJanMateuszIsaakAndKrystynMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 13 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "blessedKarolinaKozkownaVirginAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedSalomeVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 19 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintRafalKalinowskiPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 20 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedMaryOfJesusTheGoodShepherdVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 25 }),
                data: {},
              },
              {
                key: "blessedRafalChylinskiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 2 }),
                data: {},
              },
              {
                key: "saintBarbaraVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 4 }),
                data: {},
              },
              {
                key: "maryMotherOfTheChurch",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(1, "days")),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: (function (e) {
                  return Q.pentecostSunday(e).add(4, "days");
                })(e),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Ja = {},
        Va = function (e) {
          var a = [
            {
              key: "blessedGoncaloDeAmarantePriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 11 }),
              data: {},
            },
            {
              key: "saintJohnDeBritoPriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 4 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "theFiveWoundsOfTheLord",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 7 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTheotoniusPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 18 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedJacintaAndFranciscoMarto",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 20 }),
              data: {},
            },
            {
              key: "saintJohnOfGodPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 8 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "blessedJoanOfPortugalVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 12 }),
              data: {},
            },
            {
              key: "ourLadyOfFatima",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 4, day: 13 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "guardianAngelOfPortugal",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAnthonyOfLisbonPriestAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 5, day: 13 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "blessedSanchaAndMafaldaVirginsOrBlessedTheresaOfPortugalReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 20 }),
              data: {},
            },
            {
              key: "saintElizabethOfPortugal",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 4 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "blessedInacioDeAzevedoPriestAndCompanionsMartyrs",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 17 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedBartholomewOfTheMartyrsBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 18 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBeatriceOfSilvaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 1 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriestBlessedJohnNewmanBishop",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 9 }),
              data: {},
            },
            {
              key: "blessedGoncaloDeLagosPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 27 }),
              data: {},
            },
            {
              key: "saintNunoDeSantaMaria",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 6 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintFructuosusSaintMartinOfDumeAndSaintGeraldBishops",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 5 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        xa = {},
        Na = function (e) {
          var a,
            t = [
              {
                key: "mostHolyNameOfJesusOrOurLadyOfBethlehem",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 3 }),
                data: {},
              },
              {
                key: "blessedMariaDoloresRodriguezSopenaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 10 }),
                data: {},
              },
              {
                key: "blessedCarlosManuelRodriguez",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: {},
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintTeresaOfJesusJornetEIbarsVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {},
              },
              {
                key: "saintRoseOfLima",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 30 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedsCarlosSpinolaAndJeronimoDeAngelisPriestsAndMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 10 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintSoledadTorresAcostaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 11 }),
                data: {},
              },
              {
                key: "ourLadyMotherOfDivineProvidencePatronessOfPuertoRico",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 10, day: 19 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLadyOfGuadalupe",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 11, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        Ga = {},
        Ka = function (e) {
          var a = [
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintJohnCassianPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 1, day: 28 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "blessedVladimirGhikaPriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
          ];
          return ae.localizeDates(a);
        },
        Ua = {},
        qa = function (e) {
          var a = [
            {
              key: "blessedGeorgeMatulewiczBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 27 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedBoleslawaMariaLamentVirginAndSaintAngelaMericiVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 29 }),
              data: {},
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintGeorgeMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 6 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintTheodosiusOfTheCavesAbbot",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfPerpetualHelpOrBlessedLeonidFeodorovPriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 27 }),
              data: {},
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintAnthonyOfTheCavesMonk",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 24 }),
              data: {},
            },
            {
              key: "saintOlga",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 24 }),
              data: {},
            },
            {
              key: "saintVladimirTheGreat",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 28 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintsBorisAndGlebMartyrs",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 5 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "ourLadyOfCzestochowa",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 7, day: 26 }),
              data: {},
            },
            {
              key: "ourLadyOfVladimir",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 7 }),
              data: {},
            },
            {
              key: "saintFaustinaKowalskaVirginAndReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 5 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedOleksiyZarytskyiPriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 30 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfTheGateOfDawn",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 16 }),
              data: {},
            },
            {
              key: "saintRafalKalinowskiPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 20 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAndrewTheApostlePatronOfRussia",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 10, day: 30 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBarbaraVirginAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 4 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintNicholasBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 11, day: 6 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        Za = {},
        Xa = function (e) {
          var a = [
            {
              key: "saintKentigern",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 13 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintsCyrilMonkAndMethodiusBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 14 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintJohnOgilvie",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 2, day: 10 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintPatrickBishop",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 2, day: 17 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 3, day: 29 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                },
              },
            },
            {
              key: "saintColumba",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 5, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintBenedictOfNursiaAbbot",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 11 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: {
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 7, day: 9 }),
              data: {
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                },
              },
            },
            {
              key: "saintNinian",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 16 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintMargaretOfScotland",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 16 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAndrewTheApostle",
              type: ve.SOLEMNITY,
              moment: de.a.utc({ year: e, month: 10, day: 30 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        $a = { epiphanyOnJan6: !0 },
        Qa = function (e) {
          var a,
            t = [
              {
                key: "saintAdalbertBishopAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 23 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintGeorgeMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 24 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintFlorianMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 4 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "blessedSaraSalkahaziVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 11 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintJohnNepomucenePriestAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintLadislaus",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 27 }),
                data: {},
              },
              {
                key: "visitationOfTheBlessedVirginMary",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 2 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 5 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintAnthonyZaccariaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 7 }),
                data: {},
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintsAndrewZorardAndBenedictHermits",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 17 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintGorazdAndCompanions",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 27 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "blessedZdenkaSchelingovaVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 30 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintHelena",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintTeresaOfCalcuttaReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 5 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintsMarkoKrizinMelicharGrodeckiAndStephenPongracPriestsAndMartyrs",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 7 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "ourLadyOfSorrows",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 8, day: 15 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFaustinaKowalskaVirginAndReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 5 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintGallAbbotAndMissionary",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 16 }),
                data: {},
              },
              {
                key: "saintMaurusBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 25 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "dedicationOfAParticularChurch",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 9, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSouls",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 2 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintEmeric",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 5 }),
                data: {},
              },
              { key: "saintJohnDamascenePriestAndDoctor", drop: !0 },
              {
                key: "saintJohnDamascenePriestAndDoctorOrSaintBarbaraVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 4 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        et = {},
        at = function (e) {
          var a = [
            {
              key: "saintJohnNepomucenePriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        tt = {},
        nt = function (e) {
          var a,
            t = [
              {
                key: "saintEulogiusOfCordobaBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 9 }),
                data: {},
              },
              {
                key: "saintsFructuosusBishopAndAuguriusAndEulogiusDeaconsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 20 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintVincentDeaconAndMartyr",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 22 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintIldephonsusOfToledoBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 23 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintHermenegildMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 13 }),
                data: { meta: { liturgicalColor: me.RED } },
              },
              {
                key: "saintIsidoreOfSevilleBishopAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 26 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintJohnOfAvilaPriest",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 10 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintIsidoreTheFarmer",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 15 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintPaschalBaylon",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 17 }),
                data: {},
              },
              {
                key: "saintJoaquinaVedruna",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 22 }),
                data: {},
              },
              {
                key: "saintFerdinand",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 30 }),
                data: {},
              },
              {
                key: "saintMariaMicaelaOfTheBlessedSacramentVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 15 }),
                data: {},
              },
              {
                key: "saintPelagiusMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 26 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "ourLadyOfMountCarmel",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 16 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintJamesApostlePatronOfSpain",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 6, day: 25 }),
                data: {},
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintEzequielMorenoBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 19 }),
                data: {},
              },
              {
                key: "saintTeresaOfJesusJornetEIbarsVirgin",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintFrancisBorgiaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 3 }),
                data: {},
              },
              {
                key: "saintThomasOfVillanovaBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 10 }),
                data: {},
              },
              {
                key: "saintSoledadTorresAcostaVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 11 }),
                data: {},
              },
              {
                key: "ourLadyOfThePillar",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 12 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintTeresaOfJesusVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 15 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintPeterOfAlcantaraPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 19 }),
                data: {},
              },
              {
                key: "saintLeanderBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 13 }),
                data: {},
              },
              {
                key: "saintEulaliaOfMeridaVirginAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 10 }),
                data: {},
              },
              {
                key: "saintJohnOfTheCrossDoctorOfTheChurch",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        it = {},
        rt = function (e) {
          var a = [
            {
              key: "blessedJosephVazPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 16 }),
              data: {},
            },
            {
              key: "ourLadyOfLanka",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 1, day: 4 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ourLadyOfMadhu",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 2 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        ot = {},
        st = function (e) {
          var a,
            t = [
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "ourLordJesusChristTheEternalHighPriest",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(4, "days")),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(t);
        },
        dt = {},
        ut = function (e) {
          var a = [
            {
              key: "saintJohnNepomucenePriestAndMartyr",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 16 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintBridgetOfSwedenReligious",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 6, day: 23 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        lt = {},
        mt = function (e) {
          var a,
            t = [
              {
                key: "blessedMarcelinaDarowskaReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 5 }),
                data: {},
              },
              {
                key: "blessedBronislawMarkiewiczPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 0, day: 30 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "maryMotherOfTheChurch",
                type: ve.FEAST,
                moment: ((a = e), Q.pentecostSunday(a).add(1, "days")),
                data: { priorized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintAndrewBobolaPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 16 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintJohnNepomucenePriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 21 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintAlbertChmielowskiReligious",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 17 }),
                data: {},
              },
              {
                key: "saintZygmuntGorazdowskiPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 26 }),
                data: {},
              },
              {
                key: "saintJohnOfDuklaPriest",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 8 }),
                data: {},
              },
              {
                key: "saintHedwigOfPoland",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 18 }),
                data: {},
              },
              {
                key: "saintOlga",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 24 }),
                data: {},
              },
              {
                key: "saintVladimirTheGreat",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 28 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "ourLadyOfCzestochowa",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {},
              },
              {
                key: "blessedWladyslawBladzinskiPriestAndCompanionsMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 9 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintStanislausKostkaReligious",
                type: ve.MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 18 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintJozefBilczewskiBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 23 }),
                data: {},
              },
            ];
          return ae.localizeDates(t);
        },
        yt = {},
        ct = function (e) {
          var a = [
            {
              key: "saintElizabethAnnSetonReligious",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 4 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintJohnNeumannBishop",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 5 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintAndreBessetteReligious",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 6 }),
              data: {},
            },
            {
              key: "saintVincentDeaconAndMartyrOrSaintMarianneCopeVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 0, day: 22 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "saintKatharineDrexelVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 2, day: 3 }),
              data: {},
            },
            {
              key: "saintDamienDeVeusterPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 10 }),
              data: {},
            },
            {
              key: "saintIsidoreTheFarmer",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 4, day: 15 }),
              data: {},
            },
            {
              key: "blessedJuniperoSerraPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 1 }),
              data: {},
            },
            {
              key: "saintKateriTekakwithaVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 14 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintCamillusDeLellisPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 6, day: 18 }),
              data: {},
            },
            {
              key: "saintPeterClaverPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 8, day: 9 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "blessedMarieRoseDurocherVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 6 }),
              data: {},
            },
            {
              key: "saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 19 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
            {
              key: "saintPaulOfTheCrossPriest",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 9, day: 20 }),
              data: {},
            },
            {
              key: "saintFrancesXavierCabriniVirgin",
              type: ve.MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 13 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "saintRosePhilippineDuchesneVirgin",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 18 }),
              data: {},
            },
            {
              key: "blessedMiguelAgustinProPriestAndMartyr",
              type: ve.OPT_MEMORIAL,
              moment: de.a.utc({ year: e, month: 10, day: 23 }),
              data: { meta: { titles: [he.MARTYR] } },
            },
            {
              key: "ourLadyOfGuadalupe",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 11, day: 12 }),
              data: { meta: { liturgicalColor: me.WHITE } },
            },
          ];
          return ae.localizeDates(a);
        },
        ht = {},
        _t = function (e) {
          var a = [
            {
              key: "vietnameseMartyrs",
              type: ve.FEAST,
              moment: de.a.utc({ year: e, month: 10, day: 13 }),
              data: { meta: { liturgicalColor: me.RED, titles: [he.MARTYR] } },
            },
          ];
          return ae.localizeDates(a);
        },
        Mt = {},
        pt = function (e) {
          var a,
            t,
            n = [
              {
                key: "saintTeiloBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 1, day: 9 }),
                data: {},
              },
              {
                key: "saintsCyrilMonkAndMethodiusBishop",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 1, day: 14 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintDavidBishop",
                type: ve.SOLEMNITY,
                moment: de.a.utc({ year: e, month: 2, day: 1 }),
                data: { meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintBeunoAbbot",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 3, day: 20 }),
                data: {},
              },
              {
                key: "saintCatherineOfSienaVirginAndDoctorOfTheChurch",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 3, day: 29 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE, he.DOCTOR_OF_THE_CHURCH],
                  },
                },
              },
              {
                key: "saintAsaphBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 4, day: 5 }),
                data: {},
              },
              {
                key: "saintsAlbanJuliusAndAaronMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 5, day: 20 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintBenedictOfNursiaAbbot",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 11 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintJohnJonesPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 12 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintBridgetOfSwedenReligious",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 6, day: 23 }),
                data: {
                  meta: {
                    liturgicalColor: me.WHITE,
                    titles: [he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintsPhilipEvansAndJohnLloydPriestsAndMartyrs",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 6, day: 25 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintGermanusOfAuxerreBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 3 }),
                data: {},
              },
              {
                key: "saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 7, day: 9 }),
                data: {
                  meta: {
                    liturgicalColor: me.RED,
                    titles: [he.MARTYR, he.PATRON_OF_EUROPE],
                  },
                },
              },
              {
                key: "saintDavidLewisPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 7, day: 26 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintDeiniolBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 8, day: 11 }),
                data: {},
              },
              {
                key: "saintRichardGwynMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 9, day: 16 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "theSixWelshMartyrsAndCompanions",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 9, day: 25 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "saintWinefrideVirgin",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 3 }),
                data: {},
              },
              {
                key: "saintIlltudAbbot",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 6 }),
                data: {},
              },
              {
                key: "allSaints",
                type: ve.SOLEMNITY,
                moment:
                  ((a = e),
                  (t = de.a.utc({ year: a, month: 10, day: 1 })),
                  oe.a.eq(t.day(), 6)
                    ? de.a.utc({ year: a, month: 10, day: 2 })
                    : t),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSouls",
                type: ve.FEAST,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 10, day: 1 });
                  return oe.a.eq(a.day(), 6)
                    ? de.a.utc({ year: e, month: 10, day: 3 })
                    : de.a.utc({ year: e, month: 10, day: 2 });
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "allSaintsOfWales",
                type: ve.FEAST,
                moment: de.a.utc({ year: e, month: 10, day: 6 }),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
              {
                key: "saintDubriciusBishop",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 10, day: 14 }),
                data: { meta: { titles: [he.MARTYR] } },
              },
              {
                key: "saintJohnRobertsPriestAndMartyr",
                type: ve.OPT_MEMORIAL,
                moment: de.a.utc({ year: e, month: 11, day: 10 }),
                data: {
                  meta: { liturgicalColor: me.RED, titles: [he.MARTYR] },
                },
              },
              {
                key: "peterAndPaulApostles",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 5, day: 29 });
                  return oe.a.eq(a.day(), 1)
                    ? a.subtract(1, "days")
                    : oe.a.eq(a.day(), 6)
                    ? a.add(1, "days").startOf("day")
                    : a;
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.RED } },
              },
              {
                key: "assumption",
                type: ve.SOLEMNITY,
                moment: (function (e) {
                  var a = de.a.utc({ year: e, month: 7, day: 15 });
                  return oe.a.eq(a.day(), 1)
                    ? a.subtract(1, "days")
                    : oe.a.eq(a.day(), 6)
                    ? a.add(1, "weeks").startOf("week")
                    : a;
                })(e),
                data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
              },
            ];
          return ae.localizeDates(n);
        };
      function ft(e) {
        return (ft =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              })(e);
      }
      function gt(e, a) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(e);
          a &&
            (n = n.filter(function (a) {
              return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            t.push.apply(t, n);
        }
        return t;
      }
      function kt(e, a) {
        for (var t = 0; t < a.length; t++) {
          var n = a[t];
          (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            "value" in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n);
        }
      }
      function Lt(e, a, t) {
        return (
          a in e
            ? Object.defineProperty(e, a, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[a] = t),
          e
        );
      }
      var Ot = (function () {
          function e(a) {
            !(function (e, a) {
              if (!(e instanceof a))
                throw new TypeError("Cannot call a class as a function");
            })(this, e),
              Lt(this, "year", void 0),
              Lt(this, "country", ""),
              Lt(this, "locale", void 0),
              Lt(this, "christmastideEnds", void 0),
              Lt(this, "epiphanyOnJan6", void 0),
              Lt(this, "christmastideIncludesTheSeasonOfEpiphany", void 0),
              Lt(this, "corpusChristiOnThursday", void 0),
              Lt(this, "ascensionOnSunday", void 0),
              Lt(this, "type", void 0),
              Lt(this, "query", void 0),
              ((a = oe.a.isPlainObject(a) ? a : {}).country =
                "string" == typeof a.country ? a.country : ""),
              "general" !== a.country.toLowerCase() &&
                Object.prototype.hasOwnProperty.call(
                  $,
                  oe.a.camelCase(a.country)
                ) &&
                (this.country = oe.a.camelCase(a.country));
            var t = e.getConfig("general"),
              n = (function (e) {
                for (var a = 1; a < arguments.length; a++) {
                  var t = null != arguments[a] ? arguments[a] : {};
                  a % 2
                    ? gt(Object(t), !0).forEach(function (a) {
                        Lt(e, a, t[a]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(
                        e,
                        Object.getOwnPropertyDescriptors(t)
                      )
                    : gt(Object(t)).forEach(function (a) {
                        Object.defineProperty(
                          e,
                          a,
                          Object.getOwnPropertyDescriptor(t, a)
                        );
                      });
                }
                return e;
              })({}, t, {}, e.getConfig(this.country), {}, a);
            (this.christmastideEnds = e
              .sanitize(n.christmastideEnds, ["t", "o", "e"])
              .default(t.christmastideEnds)),
              (this.epiphanyOnJan6 = e
                .sanitize(n.epiphanyOnJan6, "boolean")
                .default(t.epiphanyOnJan6)),
              (this.christmastideIncludesTheSeasonOfEpiphany = e
                .sanitize(n.christmastideIncludesTheSeasonOfEpiphany, "boolean")
                .default(t.christmastideIncludesTheSeasonOfEpiphany)),
              (this.corpusChristiOnThursday = e
                .sanitize(n.corpusChristiOnThursday, "boolean")
                .default(t.corpusChristiOnThursday)),
              (this.ascensionOnSunday = e
                .sanitize(n.ascensionOnSunday, "boolean")
                .default(t.ascensionOnSunday)),
              (this.locale = e.sanitize(n.locale, "string").default("en")),
              (this.year = e
                .sanitize(parseInt(n.year), "number")
                .default(de.a.utc().year())),
              (this.type = e
                .sanitize(n.type, ["calendar", "liturgical"])
                .default("calendar"));
            var i = oe.a.isPlainObject(n.query) ? n.query : {};
            return (
              (this.query = {}),
              void 0 !== i.day && (this.query.day = i.day),
              void 0 !== i.month && (this.query.month = i.month),
              void 0 !== i.group && (this.query.group = i.group),
              void 0 !== i.title && (this.query.title = i.title),
              this
            );
          }
          var a, t, n;
          return (
            (a = e),
            (n = [
              {
                key: "getConfig",
                value: function (e) {
                  return (e && $[e].defaultConfig) || {};
                },
              },
              {
                key: "sanitize",
                value: function (e, a) {
                  return (ft(e) === a && "string" === a) ||
                    ("number" === a && !isNaN(e))
                    ? {
                        default: function () {
                          return e;
                        },
                      }
                    : ("boolean" === a && (a = [!0, !1]),
                      a.indexOf(e) > -1
                        ? {
                            default: function () {
                              return e;
                            },
                          }
                        : {
                            default: function (e) {
                              return e;
                            },
                          });
                },
              },
            ]),
            (t = null) && kt(a.prototype, t),
            n && kt(a, n),
            e
          );
        })(),
        Tt =
          (t(133),
          function (e) {
            var a =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              t = de.a.utc({ year: e, month: 0, day: 1 }),
              n = de.a.utc({ year: e, month: 0, day: 6 });
            if (!a)
              switch (t.day()) {
                case 6:
                  n = t.add(1, "days");
                  break;
                case 0:
                  n = t.add(7, "days");
                  break;
                default:
                  n = t.add(1, "weeks").startOf("week");
              }
            return n;
          }),
        vt = function (e) {
          return de.a.utc({ year: e, month: 11, day: 25 });
        },
        At = function (e) {
          return de.a
            .utc()
            .recur({ start: vt(e), end: St(e + 1) })
            .every(1)
            .day()
            .all();
        },
        St = function (e) {
          return de.a.utc({ year: e, month: 0, day: 1 });
        },
        Pt = function (e) {
          var a =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            t = Tt(e, a);
          return (t = oe.a.eq(t.dayOfYear(), 6)
            ? t.add(1, "weeks").startOf("week")
            : oe.a.eq(t.day(), 0) &&
              (oe.a.eq(t.dayOfYear(), 7) || oe.a.eq(t.dayOfYear(), 8))
            ? t.add(1, "days")
            : t.add(1, "weeks").startOf("week"));
        },
        bt = function (e) {
          return de.a.utc({ year: e, month: 1, day: 2 });
        },
        Et = function (e, a) {
          var t =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = vt(e),
            i = null;
          switch (a) {
            case "t":
              i = Tt(e + 1, t);
              break;
            case "o":
              i = Pt(e + 1, t);
              break;
            case "e":
              i = bt(e + 1);
              break;
            default:
              i = Pt(e + 1, t);
          }
          return de.a.recur({ start: n, end: i }).every(1).day().all();
        },
        Dt = function (e, a) {
          var t =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = null,
            i = Bt(e);
          return (
            (n = oe.a.eq(a, "t")
              ? Tt(e, t)
              : oe.a.eq(a, "e")
              ? bt(e)
              : Pt(e, t)),
            de.a
              .utc()
              .recur({ start: n, end: i, exceptions: [n, i] })
              .every(1)
              .day()
              .all()
          );
        },
        Yt = function (e) {
          var a = Kt(e),
            t = Ut(e);
          return de.a
            .utc()
            .recur({ start: a, end: t, exceptions: [a, t] })
            .every(1)
            .day()
            .all();
        },
        wt = function (e) {
          return Ut(e).subtract(7, "days").startOf("day");
        },
        Ct = function (e) {
          var a = Bt(e),
            t = zt(e);
          return de.a
            .utc()
            .recur({ start: a, end: t, exceptions: [t] })
            .every(1)
            .day()
            .all();
        },
        Rt = function (e) {
          var a = Bt(e),
            t = zt(e);
          return de.a
            .utc()
            .recur({ start: a, end: t, exceptions: [t] })
            .every(0)
            .daysOfWeek()
            .all();
        },
        Bt = function (e) {
          return Nt(e).subtract(46, "days").startOf("day");
        },
        Ht = function (e) {
          var a = It(e),
            t = Ft(e);
          return de.a.utc().recur({ start: a, end: t }).every(1).day().all();
        },
        It = function (e) {
          return Nt(e).subtract(7, "days").startOf("day");
        },
        zt = function (e) {
          return Nt(e).subtract(3, "days").startOf("day");
        },
        jt = function (e) {
          return Nt(e).subtract(2, "days").startOf("day");
        },
        Ft = function (e) {
          return Nt(e).subtract(1, "days").startOf("day");
        },
        Wt = function (e) {
          var a = Nt(e),
            t = Gt(e);
          return de.a.utc().recur({ start: a, end: t }).every(1).day().all();
        },
        Jt = function (e) {
          var a = Nt(e),
            t = Kt(e);
          return de.a
            .utc()
            .recur({ start: a, end: t })
            .every(0)
            .daysOfWeek()
            .all();
        },
        Vt = function (e) {
          var a = Nt(e),
            t = Kt(e);
          return de.a.utc().recur({ start: a, end: t }).every(1).day().all();
        },
        xt = oe.a.memoize(function (e) {
          var a = e,
            t = Math.floor(a / 100),
            n = a - 19 * Math.floor(a / 19),
            i = Math.floor((t - 17) / 25),
            r = t - Math.floor(t / 4) - Math.floor((t - i) / 3) + 19 * n + 15;
          (r -= 30 * Math.floor(r / 30)),
            (r -=
              Math.floor(r / 28) *
              (1 -
                Math.floor(r / 28) *
                  Math.floor(29 / (r + 1)) *
                  Math.floor((21 - n) / 11)));
          var o = a + Math.floor(a / 4) + r + 2 - t + Math.floor(t / 4),
            s = r - (o -= 7 * Math.floor(o / 7)),
            d = 3 + Math.floor((s + 40) / 44);
          return { year: a, month: d, day: s + 28 - 31 * Math.floor(d / 4) };
        }),
        Nt = function (e) {
          var a = xt(e),
            t = a.month,
            n = a.day;
          return de.a.utc({ year: e, month: t - 1, day: n });
        },
        Gt = function (e) {
          return Nt(e).add(7, "days").startOf("day");
        },
        Kt = function (e) {
          return Nt(e).add(49, "days").startOf("day");
        },
        Ut = function (e) {
          switch (vt(e).day()) {
            case 0:
              return de.a.utc({ year: e, month: 10, day: 27 });
            case 1:
              return de.a.utc({ year: e, month: 11, day: 3 });
            case 2:
              return de.a.utc({ year: e, month: 11, day: 2 });
            case 3:
              return de.a.utc({ year: e, month: 11, day: 1 });
            case 4:
              return de.a.utc({ year: e, month: 10, day: 30 });
            case 5:
              return de.a.utc({ year: e, month: 10, day: 29 });
            case 6:
              return de.a.utc({ year: e, month: 10, day: 28 });
            default:
              return null;
          }
        },
        qt = function (e) {
          var a = Ut(e),
            t = vt(e);
          return de.a
            .utc()
            .recur({ start: a, end: t, exceptions: [t] })
            .every(1)
            .day()
            .all();
        },
        Zt = function (e) {
          var a = Ut(e),
            t = vt(e);
          return de.a
            .utc()
            .recur({ start: a, end: t, exceptions: [t] })
            .every(0)
            .daysOfWeek()
            .all();
        },
        Xt = function (e) {
          var a =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            t = St(e),
            n = Tt(e, a),
            i = de.a
              .utc()
              .recur({ start: t, end: n, exceptions: [t, n] })
              .every(1)
              .day();
          return i.all();
        },
        $t = function (e) {
          var a =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            t = Tt(e, a),
            n = Pt(e, a),
            i = de.a
              .utc()
              .recur({ start: t, end: n, exceptions: [t, n] })
              .every(1)
              .day();
          return i.all();
        },
        Qt = function (e) {
          var a = de.a.utc({ year: e, month: 2, day: 19 });
          oe.a.eq(a.day(), 0) &&
            oe.a.each(Rt(e), function (e) {
              a.isSame(e) && (a = e.add(1, "days"));
            });
          var t = Ht(e);
          return (
            de.a.range(oe.a.head(t), oe.a.last(t)).contains(a) &&
              (a = It(e).subtract(1, "days").startOf("day")),
            a
          );
        },
        en = function (e) {
          var a = de.a.utc({ year: e, month: 2, day: 25 }),
            t = oe.a.find(Rt(e), function (e) {
              return a.isSame(e);
            });
          oe.a.isUndefined(t) || (a = a.add(1, "days"));
          var n = Ht(e);
          de.a.range(oe.a.head(n), oe.a.last(n)).contains(a) &&
            (a = Gt(e).add(1, "days"));
          var i = Wt(e);
          return (
            de.a.range(oe.a.head(i), oe.a.last(i)).contains(a) &&
              (a = Gt(e).add(1, "days")),
            a
          );
        },
        an = function (e) {
          return de.a.utc({ year: e, month: 5, day: 24 });
        },
        tn = function (e) {
          return de.a.utc({ year: e, month: 5, day: 29 });
        },
        nn = function (e) {
          return de.a.utc({ year: e, month: 7, day: 15 });
        },
        rn = function (e) {
          return de.a.utc({ year: e, month: 10, day: 1 });
        },
        on = function (e) {
          var a = de.a.utc({ year: e, month: 11, day: 8 });
          return (
            oe.a.eq(a.day(), 0) &&
              oe.a.each(Zt(e), function (e) {
                a.isSame(e) && (a = e.add(1, "days"));
              }),
            a
          );
        },
        sn = function (e, a) {
          return !oe.a.isUndefined(a) && a
            ? Nt(e).add(42, "days")
            : Nt(e).add(39, "days");
        },
        dn = function (e) {
          return Nt(e).add(56, "days");
        },
        un = function (e) {
          var a =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          return !oe.a.isUndefined(a) && a
            ? Nt(e).add(60, "days")
            : Nt(e).add(63, "days");
        },
        ln = function (e) {
          return Nt(e).add(68, "days");
        },
        mn = function (e) {
          return Nt(e).add(69, "days");
        },
        yn = function (e) {
          var a = vt(e);
          return oe.a.eq(a.day(), 0)
            ? de.a.utc({ year: e, month: 11, day: 30 })
            : a.add(1, "weeks").startOf("week");
        },
        cn = function (e) {
          return de.a.utc({ year: e, month: 7, day: 6 });
        },
        hn = function (e) {
          return de.a.utc({ year: e, month: 8, day: 14 });
        };
      function _n(e, a) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(e);
          a &&
            (n = n.filter(function (a) {
              return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            t.push.apply(t, n);
        }
        return t;
      }
      function Mn(e, a) {
        for (var t = 0; t < a.length; t++) {
          var n = a[t];
          (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            "value" in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n);
        }
      }
      function pn(e, a, t) {
        return (
          a in e
            ? Object.defineProperty(e, a, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[a] = t),
          e
        );
      }
      var fn = (function () {
        function e(a, t) {
          !(function (e, a) {
            if (!(e instanceof a))
              throw new TypeError("Cannot call a class as a function");
          })(this, e),
            pn(this, "key", void 0),
            pn(this, "date", void 0),
            pn(this, "type", void 0),
            pn(this, "name", void 0),
            pn(this, "data", void 0),
            pn(this, "moment", void 0),
            pn(this, "base", void 0),
            pn(this, "_id", void 0),
            pn(this, "_stack", void 0),
            (this.key = a.key),
            (this.date = a.moment.toISOString()),
            (this.type = a.type),
            (this.name = a.name),
            (this.data = a.data || {}),
            (this.data.meta = this.data.meta || {}),
            (this.moment = a.moment),
            (this._id = e._incrementId()),
            (this._stack = a._stack),
            t &&
              this._id !== t._id &&
              ((this.base = t),
              (this.data = (function (e) {
                for (var a = 1; a < arguments.length; a++) {
                  var t = null != arguments[a] ? arguments[a] : {};
                  a % 2
                    ? _n(Object(t), !0).forEach(function (a) {
                        pn(e, a, t[a]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(
                        e,
                        Object.getOwnPropertyDescriptors(t)
                      )
                    : _n(Object(t)).forEach(function (a) {
                        Object.defineProperty(
                          e,
                          a,
                          Object.getOwnPropertyDescriptor(t, a)
                        );
                      });
                }
                return e;
              })(
                {},
                { season: t.data.season, calendar: t.data.calendar },
                {},
                this.data
              )),
              (this.data.meta.psalterWeek =
                this.data.meta.psalterWeek || t.data.meta.psalterWeek)),
            this._adjustTypeInSeasons(),
            this._addLiturgicalCycleMetadata();
        }
        var a, t, n;
        return (
          (a = e),
          (n = [
            {
              key: "_incrementId",
              value: function () {
                return (
                  isNaN(this.latestId) ? (this.latestId = 0) : this.latestId++,
                  this.latestId
                );
              },
            },
          ]),
          (t = [
            {
              key: "_adjustTypeInSeasons",
              value: function () {
                this.base &&
                  this.base.data.season.key === ce.LENT &&
                  ((this.type !== ve.MEMORIAL &&
                    this.type !== ve.OPT_MEMORIAL) ||
                    this.base.type !== ve.FERIA ||
                    (this.type = ve.COMMEMORATION),
                  this.type === ve.FEAST && (this.type = ve.COMMEMORATION));
              },
            },
            {
              key: "_addLiturgicalCycleMetadata",
              value: function () {
                var e = this._getLiturgicalStartYear(),
                  a = Ut(e),
                  t = (e - 1963) % 3,
                  n = 2 === t ? 0 : t + 1;
                this.moment.isSameOrAfter(a)
                  ? (this.data.meta.cycle = { key: n, value: le[n] })
                  : (this.data.meta.cycle = { key: t, value: le[t] });
              },
            },
            {
              key: "_getLiturgicalStartYear",
              value: function () {
                var e = this.moment.year(),
                  a = Ut(e);
                return this.moment.isBefore(a) ? e - 1 : e;
              },
            },
          ]) && Mn(a.prototype, t),
          n && Mn(a, n),
          e
        );
      })();
      pn(fn, "latestId", void 0);
      var gn = {
          sanctoral: {
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Saints John de Brébeuf, Isaac Jogues, Priests, and Companions, Martyrs, Secondary Patrons of Canada",
          },
        },
        kn = {
          advent: {
            season: "Advent",
            feria: "{{day}} of the {{week}} week of Advent",
            sunday: "{{week}} Sunday of Advent",
          },
          christmastide: {
            season: "Christmas",
            day: "{{day}} of Christmastide",
            octave: "{{count}} day in the Octave of Christmas",
            sunday: "{{count}} Sunday of Christmas",
          },
          epiphany: {
            season: "Epiphany",
            before: "{{day}} before Epiphany",
            after: "{{day}} after Epiphany",
          },
          ordinaryTime: {
            season: "Ordinary Time",
            feria: "{{day}} of the {{week}} week of Ordinary Time",
            sunday: "{{week}} Sunday of Ordinary Time",
          },
          lent: {
            season: "Lent",
            feria: "{{day}} of the {{week}} week of Lent",
            sunday: "{{week}} Sunday of Lent",
            day_after_ash_wed: "{{day}} after Ash Wednesday",
          },
          holyWeek: { season: "Holy Week", feria: "{{day}} of Holy Week" },
          eastertide: {
            season: "Eastertide",
            feria: "{{day}} of the {{week}} week of Easter",
            sunday: "{{week}} Sunday of Easter",
            octave: "Easter {{day}}",
          },
          celebrations: {
            allSaints: "All Saints",
            annunciation: "Annunciation",
            ascension: "Ascension of the Lord",
            ashWednesday: "Ash Wednesday",
            assumption: "The Assumption of the Blessed Virgin Mary",
            baptismOfTheLord: "Baptism of the Lord",
            birthOfJohnTheBaptist: "Birth of John the Baptist",
            christmas: "Christmas",
            christTheKing: "Christ the King",
            corpusChristi: "Corpus Christi",
            divineMercySunday: "Divine Mercy Sunday",
            easter: "Easter Sunday",
            epiphany: "Epiphany",
            goodFriday: "Good Friday",
            holyFamily: "Holy Family",
            holySaturday: "Holy Saturday/Easter Vigil",
            holyThursday: "Holy Thursday",
            immaculateConception: "Immaculate Conception",
            immaculateHeartOfMary: "Immaculate Heart of Mary",
            josephHusbandOfMary: "Joseph, Husband of Mary",
            maryMotherOfGod: "Mary, Mother of God",
            palmSunday: "Palm Sunday",
            pentecostSunday: "Pentecost Sunday",
            peterAndPaulApostles: "Saints Peter and Paul, Apostles",
            presentationOfTheLord: "Presentation of the Lord",
            sacredHeartOfJesus: "Sacred Heart of Jesus",
            theExaltationOfTheHolyCross: "The Exaltation of the Holy Cross",
            transfiguration: "Transfiguration",
            trinitySunday: "Trinity Sunday",
          },
          sanctoral: {
            "205BlessedMartyrsOfJapan": "205 Blessed Martyrs of Japan",
            allSaintsOfIreland: "All Saints of Ireland",
            allSaintsOfWales: "All Saints of Wales",
            allSouls: "All Souls",
            birthOfTheBlessedVirginMary: "Birth of the Blessed Virgin Mary",
            blessedAlbertinaBerkenbrockVirginAndMartyr:
              "Blessed Albertina Berkenbrock, Virgin and Martyr",
            blessedAloysiusStepinacBishopAndMartyr:
              "Blessed Aloysius Stepinac, Bishop and Martyr",
            blessedAndreGrassetPriestAndMartyr:
              "Blessed Andre Grasset, Priest and Martyr",
            blessedAnielaSalawaVirgin: "Blessed Aniela Salawa, Virgin",
            blessedAntoniNowowiejskiBishopAndCompanionsMartyrs:
              "Blessed Antoni Nowowiejski, Bishop and Companions, Martyrs",
            blessedAugustinKazoticBishopAndMartyr:
              "Blessed Augustin Kazotic, Bishop and Martyr",
            blessedBartholomewOfTheMartyrsBishop:
              "Blessed Bartholomew of The Martyrs, Bishop",
            blessedBartolomeLaurelReligiousAndMartyr:
              "Blessed Bartolome Laurel, Religious and Martyr",
            blessedBogumilBishop: "Blessed Bogumil, Bishop",
            blessedBoleslawaMariaLamentVirginAndSaintAngelaMericiVirgin:
              "Blessed Boleslawa Maria Lament, Virgin/Saint Angela Merici, Virgin",
            blessedBronislawaVirgin: "Blessed Bronislawa, Virgin",
            blessedBronislawMarkiewiczPriest:
              "Blessed Bronislaw Markiewicz, Priest",
            blessedCarlosManuelRodriguez: "Blessed Carlos Manuel Rodriguez",
            blessedCatherineOfSaintAugustineVirgin:
              "Blessed Catherine of Saint Augustine, Virgin",
            blessedCeferinoNamuncura: "Blessed Ceferino Namuncura",
            blessedCeslausAndSaintHyacinthPriests:
              "Blessed Ceslaus and Saint Hyacinth, Priests",
            blessedCharlesSpinolaPriestAndMartyr:
              "Blessed Charles Spinola, Priest and Martyr",
            blessedColumbaMarmionPriest: "Blessed Columba Marmion, Priest",
            blessedCzeslawPriest: "Blessed Czeslaw, Priest",
            blessedDinaBelangerVirgin: "Blessed Dina Belanger, Virgin",
            blessedDominicOfTheMotherOfGodDominicBarberiPriest:
              "Blessed Dominic of The Mother of God (Dominic Barberi), Priest",
            blessedEdmundBojanowski: "Blessed Edmund Bojanowski",
            blessedEdmundIgnatiusRiceReligious:
              "Blessed Edmund Ignatius Rice, Religious",
            blessedElisabethHesselbaldVirgin:
              "Blessed Elisabeth Hesselbald, Virgin",
            blessedEmilieTavernierGamelinReligious:
              "Blessed Emilie Tavernier Gamelin, Religious",
            blessedFredericJanssoonePriest:
              "Blessed Frederic Janssoone, Priest",
            blessedGeorgeMatulewiczBishop: "Blessed George Matulewicz, Bishop",
            blessedGisela: "Blessed Gisela",
            blessedGoncaloDeAmarantePriest:
              "Blessed Goncalo de Amarante, Priest",
            blessedGoncaloDeLagosPriest: "Blessed Goncalo de Lagos, Priest",
            blessedGraziaOfCattaro: "Blessed Grazia of Cattaro",
            blessedHemmingBishop: "Blessed Hemming, Bishop",
            blessedHenrySusoPriest: "Blessed Henry Suso, Priest",
            blessedHonoratKozminskiPriest: "Blessed Honorat Kozminski, Priest",
            blessedHroznataMartyr: "Blessed Hroznata, Martyr",
            blessedInacioDeAzevedoPriestAndCompanionsMartyrs:
              "Blessed Inacio de Azevedo, Priest, and Companions, Martyrs",
            blessedInnocentXiPope: "Blessed Innocent XI, Pope",
            blessedIrishMartyrs: "Blessed Irish Martyrs",
            blessedIstvanSandorMartyr: "Blessed István Sándor, Martyr",
            blessedIvanMerz: "Blessed Ivan Merz",
            blessedJacintaAndFranciscoMarto:
              "Blessed Jacinta and Francisco Marto",
            blessedJakubStrzemieBishop: "Blessed Jakub Strzemie, Bishop",
            blessedJerzyMatulewiczBishop: "Blessed Jerzy Matulewicz, Bishop",
            blessedJoanOfPortugalVirgin: "Blessed Joan of Portugal, Virgin",
            blessedJohnBeyzymPriest: "Blessed John Beyzym, Priest",
            blessedJohnHenryNewmanPriest: "Blessed John Henry Newman, Priest",
            blessedJohnMartinMoyePriest: "Blessed John Martin Moye, Priest",
            blessedJolantaReligious: "Blessed Jolanta, Religious",
            blessedJosephVazPriest: "Blessed Joseph Vaz, Priest",
            blessedJuniperoSerraPriest: "Blessed Junipero Serra, Priest",
            blessedKarlOfAustria: "Blessed Karl of Austria",
            blessedKarolinaKozkownaVirginAndMartyr:
              "Blessed Karolina Kozkowna, Virgin and Martyr",
            blessedKuriakoseEliasChavaraPriest:
              "Blessed Kuriakose Elias Chavara, Priest",
            blessedLauraVicunaVirgin: "Blessed Laura Vicuna, Virgin",
            blessedLouisZephirinMoreauBishop:
              "Blessed Louis Zephirin Moreau, Bishop",
            blessedMarcelinaDarowskaReligious:
              "Blessed Marcelina Darowska, Religious",
            blessedMariaAdeodataPisaniVirgin:
              "Blessed Maria Adeodata Pisani, Virgin",
            blessedMariaAssuntaPallottaVirgin:
              "Blessed Maria Assunta Pallotta, Virgin",
            blessedMariaDoloresRodriguezSopenaVirgin:
              "Blessed Maria Dolores Rodriguez Sopena, Virgin",
            blessedMariaStellaAndCompanionsVirginsAndMartyrs:
              "Blessed Maria Stella and Companions, Virgins and Martyrs",
            blessedMariaTeresaLedochowskaVirgin:
              "Blessed Maria Teresa Ledochowska, Virgin",
            blessedMariaTheresaChiramelVirgin:
              "Blessed Maria Theresa Chiramel, Virgin",
            blessedMarieAnneBlondinVirgin: "Blessed Marie Anne Blondin, Virgin",
            blessedMarieLeonieParadisVirgin:
              "Blessed Marie Leonie Paradis, Virgin",
            blessedMarieRoseDurocherVirgin:
              "Blessed Marie Rose Durocher, Virgin",
            blessedMaryAngelaTruszkowskaVirgin:
              "Blessed Mary Angela Truszkowska, Virgin",
            blessedMaryOfJesusCrucifiedPetkovicVirgin:
              "Blessed Mary of Jesus Crucified Petkovic, Virgin",
            blessedMaryOfJesusTheGoodShepherdVirgin:
              "Blessed Mary of Jesus The Good Shepherd, Virgin",
            blessedMauriceTornayPriestAndMartyr:
              "Blessed Maurice Tornay, Priest and Martyr",
            blessedMichaelKozalBishopAndMartyr:
              "Blessed Michael Kozal, Bishop and Martyr",
            blessedMiguelAgustinProPriestAndMartyr:
              "Blessed Miguel Agustin Pro, Priest and Martyr",
            blessedNazariaIgnaciaMarchReligious:
              "Blessed Nazaria Ignacia March, Religious",
            blessedNazjuFalzon: "Blessed Nazju Falzon",
            blessedNicolasStenoBishop: "Blessed Nicolas Steno, Bishop",
            blessedOdoricOfPordenonePriest:
              "Blessed Odoric of Pordenone, Priest",
            blessedOleksiyZarytskyiPriestAndMartyr:
              "Blessed Oleksiy Zarytskyi, Priest and Martyr",
            blessedOsannaOfCattaroVirgin: "Blessed Osanna of Cattaro, Virgin",
            blessedPeterKibePriestAndCompanionsMartyrs:
              "Blessed Peter Kibe, Priest and Companions, Martyrs",
            blessedPeterToRotMartyr: "Blessed Peter To Rot, Martyr",
            blessedPiusIxPope: "Blessed Pius IX, Pope",
            blessedRafalChylinskiPriest: "Blessed Rafal Chylinski, Priest",
            blessedSalomeVirgin: "Blessed Salome, Virgin",
            blessedSanchaAndMafaldaVirginsOrBlessedTheresaOfPortugalReligious:
              "Blessed Sancha and Mafalda, Virgins, Or Blessed Theresa of Portugal, Religious",
            blessedsAndreDeSoveralAndAmbrosioFranciscoFerroPriestsAndMartyrs:
              "Blesseds Andre de Soveral and Ambrosio Francisco Ferro, Priests and Martyrs",
            blessedSaraSalkahaziVirginAndMartyr:
              "Blessed Sara Salkahazi, Virgin and Martyr",
            blessedsCarlosSpinolaAndJeronimoDeAngelisPriestsAndMartyrs:
              "Blesseds Carlos Spinola and Jeronimo de Angelis, Priests and Martyrs",
            blessedSebastianDeAparicioReligious:
              "Blessed Sebastian de Aparicio, Religious",
            blessedsNykytaBudkaAndVasylVelychkowskyBishopsAndMartyrs:
              "Blesseds Nykyta Budka and Vasyl Velychkowsky, Bishops and Martyrs",
            blessedsPedroZunigaAndLuisFloresPriestsAndMartyrs:
              "Blesseds Pedro Zuniga And Luis Flores, Priests and Martyrs",
            blessedTheodoreRomzhaBishopAndMartyr:
              "Blessed Theodore Romzha, Bishop and Martyr",
            blessedVilmosAporBishopAndMartyr:
              "Blessed Vilmos Apor, Bishop and Martyr",
            blessedVincentKadlubekBishop: "Blessed Vincent Kadlubek, Bishop",
            blessedVincentLewoniukAndCompanionsMartyrsOfPratulin:
              "Blessed Vincent Lewoniuk and Companions, Martyrs Of Pratulin",
            blessedVladimirGhikaPriestAndMartyr:
              "Blessed Vladimir Ghika, Priest and Martyr",
            blessedWladyslawBladzinskiPriestAndCompanionsMartyrs:
              "Blessed Wladyslaw Bladzinski, Priest and Companions, Martyrs",
            blessedWladyslawOfGielniowPriest:
              "Blessed Wladyslaw Of Gielniow, Priest",
            blessedZdenkaSchelingovaVirginAndMartyr:
              "Blessed Zdenka Schelingova, Virgin and Martyr",
            chairOfSaintPeterApostle: "Chair of Saint Peter, Apostle",
            conversionOfSaintPaulApostle: "Conversion of Saint Paul, Apostle",
            dedicationOfAParticularChurch: "Dedication of a particular Church",
            dedicationOfTheBasilicaOfSaintMaryMajor:
              "Dedication of the Basilica of Saint Mary Major",
            dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles:
              "Dedication of the basilicas of Saints Peter and Paul, Apostles",
            dedicationOfTheLateranBasilica:
              "Dedication of the Lateran Basilica",
            discoveryOfTheHiddenChristians:
              "Discovery of The Hidden Christians",
            findingOfTheHolyCross: "Finding of The Holy Cross",
            firstMartyrsOfTheChurchOfRome:
              "First Martyrs of the Church of Rome",
            guardianAngelOfPortugal: "Guardian Angel of Portugal",
            guardianAngels: "Guardian Angels",
            holyInnocentsMartyrs: "Holy Innocents, Martyrs",
            holyNameOfTheBlessedVirginMary:
              "Holy Name of the Blessed Virgin Mary",
            hungarianSaintsAndBlesseds: "Hungarian Saints and Blesseds",
            immaculateConceptionOfTheBlessedVirginMaryPrincipalPatronessOfThePhilippines:
              "Immaculate Conception of The Blessed Virgin Mary, Principal Patroness Of The Philippines",
            maryMotherOfTheChurch: "Mary, Mother of The Church",
            mostHolyNameOfJesusOrOurLadyOfBethlehem:
              "Most Holy Name of Jesus Or Our Lady of Bethlehem",
            ourLadyHelpOfChristians: "Our Lady, Help of Christians",
            ourLadyMediatrix: "Our Lady, Mediatrix",
            ourLadyMediatrixOfAllGrace: "Our Lady, Mediatrix of All Grace",
            ourLadyMotherOfChristianUnity:
              "Our Lady, Mother of Christian Unity",
            ourLadyMotherOfDivineProvidencePatronessOfPuertoRico:
              "Our Lady, Mother of Divine Providence, Patroness of Puerto Rico",
            ourLadyMotherOfMercy: "Our Lady, Mother of Mercy",
            ourLadyOfAparecidaPatronessOfBrazil:
              "Our Lady of Aparecida (Nossa Senhora Aparecida), Patroness of Brazil",
            ourLadyOfBistrica: "Our Lady of Bistrica",
            ourLadyOfChina: "Our Lady of China",
            ourLadyOfCzestochowa: "Our Lady of Czestochowa",
            ourLadyOfFatima: "Our Lady of Fatima",
            ourLadyOfGoodCounsel: "Our Lady of Good Counsel",
            ourLadyOfGuadalupe: "Our Lady of Guadalupe",
            ourLadyOfHungary: "Our Lady of Hungary",
            ourLadyOfItati: "Our Lady of Itati",
            ourLadyOfKnock: "Our Lady of Knock",
            ourLadyOfLanka: "Our Lady of Lanka",
            ourLadyOfLebanon: "Our Lady of Lebanon",
            ourLadyOfLoreto: "Our Lady of Loreto",
            ourLadyOfLourdes: "Our Lady of Lourdes",
            ourLadyOfLujanPatronessOfArgentina:
              "Our Lady of Luján, Patroness of Argentina",
            ourLadyOfMadhu: "Our Lady of Madhu",
            ourLadyOfMercy: "Our Lady of Mercy",
            ourLadyOfMountCarmel: "Our Lady of Mount Carmel",
            ourLadyOfMountCarmelMotherAndQueenOfChile:
              "Our Lady of Mount Carmel, Mother and Queen of Chile",
            ourLadyOfPeace: "Our Lady of Peace",
            ourLadyOfPerpetualHelpOrBlessedLeonidFeodorovPriestAndMartyr:
              "Our Lady of Perpetual Help Or Blessed Leonid Feodorov, Priest and Martyr",
            ourLadyOfSorrows: "Our Lady of Sorrows",
            ourLadyOfTheGateOfDawn: "Our Lady of The Gate of Dawn",
            ourLadyOfThePillar: "Our Lady of The Pillar",
            ourLadyOfTheRosary: "Our Lady of the Rosary",
            ourLadyOfTheValley: "Our Lady of The Valley",
            ourLadyOfVladimir: "Our Lady of Vladimir",
            ourLadyOfWalsingham: "Our Lady of Walsingham",
            ourLadyQueenOfPeace: "Our Lady, Queen of Peace",
            ourLadyQueenOfPoland: "Our Lady, Queen of Poland",
            ourLordJesusChristTheEternalHighPriest:
              "Our Lord Jesus Christ, The Eternal High Priest",
            ourLordOfMiracles: "Our Lord of Miracles",
            popeSaintJohnPaulII: "Pope Saint John Paul II",
            popeSaintJohnXXIII: "Pope Saint John XXIII",
            presentationOfTheBlessedVirginMary:
              "Presentation of The Blessed Virgin Mary",
            queenshipOfBlessedVirginMary: "Queenship of Blessed Virgin Mary",
            saintAdalbertBishopAndMartyr:
              "Saint Wojciech (Adalbert of Prague), Bishop and Martyr",
            saintAdalbertBishopAndMartyrSaintFidelisOfSigmaringenPriestAndMartyr:
              "Saint Wojciech (Adalbert of Prague), Bishop and Martyr/Saint Fidelis of Sigmaringen, Priest and Martyr",
            saintAelredOfRievaulx: "Saint Aelred of Rievaulx",
            saintAengusOengusBishopAndAbbot:
              "Saint Aengus (Oengus), Bishop and Abbot",
            saintAgathaVirginAndMartyr: "Saint Agatha, Virgin and Martyr",
            saintAgnesCaoGuiyingMartyr: "Saint Agnes Cao Guiying, Martyr",
            saintAgnesOfBohemiaVirgin: "Saint Agnes of Bohemia, Virgin",
            saintAgnesVirginAndMartyr: "Saint Agnes, Virgin and Martyr",
            saintAidanBishop: "Saint Aidan, Bishop",
            saintAidanBishopAndTheSaintsOfLindisfarne:
              "Saint Aidan, Bishop and The Saints of Lindisfarne",
            saintAidanOfLindisfarneBishopAndMissionary:
              "Saint Aidan of Lindisfarne, Bishop and Missionary",
            saintAilbeBishop: "Saint Ailbe, Bishop",
            saintAlbanMartyr: "Saint Alban, Martyr",
            saintAlbericCrescitelliPriestAndMartyr:
              "Saint Alberic Crescitelli, Priest and Martyr",
            saintAlbertChmielowskiReligious:
              "Saint Albert Chmielowski, Religious",
            saintAlbertoHurtadoPriest: "Saint Alberto Hurtado, Priest",
            saintAlbertTheGreatBishopAndDoctor:
              "Saint Albert the Great, Bishop and Doctor",
            saintAloysiusGonzagaReligious: "Saint Aloysius Gonzaga, Religious",
            saintAlphonsaOfTheImmaculateConceptionVirgin:
              "Saint Alphonsa of The Immaculate Conception, Virgin",
            saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch:
              "Saint Alphonsus Maria de Liguori, Bishop and Doctor of the Church",
            saintAmandMissionary: "Saint Amand, Missionary",
            saintAmbroseBishopAndDoctor: "Saint Ambrose, Bishop and Doctor",
            saintAndreBessetteReligious: "Saint Andre Bessette, Religious",
            saintAndrewApostle: "Saint Andrew, Apostle",
            saintAndrewBobolaPriestAndMartyr:
              "Saint Andrew Bobola, Priest and Martyr",
            saintAndrewDungLacAndCompanionsMartyrs:
              "Saint Andrew Dung-Lac and Companions, Martyrs",
            saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs:
              "Saint Andrew Kim Taegon, Priest, and Paul Chong Hasang and Companions, Martyrs",
            saintAndrewTheApostle: "Saint Andrew the Apostle",
            saintAndrewTheApostlePatronOfRussia:
              "Saint Andrew The Apostle, Patron of Russia",
            saintAngelaMericiVirgin: "Saint Angela Merici, Virgin",
            saintAnnePatronOfQuebecAndSaintJoachimParentsOfTheBlessedVirginMary:
              "Saint Anne, Patron of Quebec, and Saint Joachim, Parents of The Blessed Virgin Mary",
            saintAnnoIiBishop: "Saint Anno II, Bishop",
            saintAnselmOfCanterburyBishopAndDoctorOfTheChurch:
              "Saint Anselm of Canterbury, Bishop and Doctor of the Church",
            saintAnthonyMaryClaretBishop: "Saint Anthony Mary Claret, Bishop",
            saintAnthonyOfEgyptAbbot: "Saint Anthony of Egypt, Abbot",
            saintAnthonyOfLisbonPriestAndDoctorOfTheChurch:
              "Saint Anthony of Lisbon, Priest and Doctor of The Church",
            saintAnthonyOfPaduaPriestAndDoctor:
              "Saint Anthony of Padua, Priest and Doctor",
            saintAnthonyOfSaintAnneGalvaoFreiGalvaoPriest:
              "Saint Anthony of Saint Anne Galvao (Frei Galvao), Priest",
            saintAnthonyOfTheCavesMonk: "Saint Anthony of The Caves, Monk",
            saintAnthonyZaccariaPriest: "Saint Anthony Zaccaria, Priest",
            saintApollinaris: "Saint Apollinaris",
            saintAsaphBishop: "Saint Asaph, Bishop",
            saintAsicusBishop: "Saint Asicus, Bishop",
            saintAthanasiusBishopAndDoctor:
              "Saint Athanasius, Bishop and Doctor",
            saintAugustineOfCanterburyBishop:
              "Saint Augustine of Canterbury, Bishop",
            saintAugustineOfHippoBishopAndDoctorOfTheChurch:
              "Saint Augustine of Hippo, Bishop and Doctor of the Church",
            saintAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Saint Augustine Zhao Rong, Priest and Companions, Martyrs",
            saintAugustineZhaoRongPriestAndMartyr:
              "Saint Augustine Zhao Rong, Priest and Martyr",
            saintBarbaraVirginAndMartyr: "Saint Barbara, Virgin and Martyr",
            saintBarbaraVirginAndMartyrOrBlessedAdolphKolpingPriest:
              "Saint Barbara, Virgin and Martyr/Blessed Adolph Kolping, Priest",
            saintBarnabasTheApostle: "Saint Barnabas the Apostle",
            saintBartholomewTheApostle: "Saint Bartholomew the Apostle",
            saintBeatriceOfSilvaVirgin: "Saint Beatrice of Silva, Virgin",
            saintBedeTheVenerablePriestAndDoctor:
              "Saint Bede the Venerable, Priest and Doctor of the Church",
            saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin:
              "Saint Bede the Venerable, Priest and Doctor/Saint Gregory VII, Pope/Saint Mary Magdalene de Pazzi, Virgin",
            saintBenedictOfNursiaAbbot:
              "Saint Benedict of Nursia, Abbot, Patron of Europe",
            saintBennoOfMeissenBishop: "Saint Benno of Meissen, Bishop",
            saintBernadetteSoubirousVirgin:
              "Saint Bernadette Soubirous, Virgin",
            saintBernardineOfSienaPriest: "Saint Bernardine of Siena, Priest",
            saintBernardOfClairvauxAbbotAndDoctorOfTheChurch:
              "Saint Bernard of Clairvaux, Abbot and Doctor of the Church",
            saintBeunoAbbot: "Saint Beuno, Abbot",
            saintBlaseBishopAndMartyrSaintAnsgarBishop:
              "Saint Blase, Bishop Martyr and Saint Ansgar, Bishop",
            saintBonaventureBishopAndDoctor:
              "Saint Bonaventure, Bishop and Doctor",
            saintBonifaceBishopAndMartyr: "Saint Boniface, Bishop and Martyr",
            saintBrendanAbbot: "Saint Brendan, Abbot",
            saintBridgetOfSwedenReligious:
              "Saint Bridget of Sweden, Religious, Patron of Europe",
            saintBrigidVirgin: "Saint Brigid, Virgin",
            saintBrotherMutienMarieReligious:
              "Saint Brother Mutien Marie, Religious",
            saintBrunoBonifaceOfQuerfurtBishopAndMartyr:
              "Saint Bruno Boniface Of Querfurt, Bishop And Martyr",
            saintBrunoPriest: "Saint Bruno, Priest",
            saintCaesariusOfArlesBishop: "Saint Caesarius of Arles, Bishop",
            saintCallistusIPopeAndMartyr: "Saint Callistus I, Pope and Martyr",
            saintCamillusDeLellisPriest: "Saint Camillus de Lellis, Priest",
            saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr:
              "Saint Camillus de Lellis, Priest or Saint Henry, Bishop and Martyr",
            saintCaniceAbbot: "Saint Canice, Abbot",
            saintCanuteMartyr: "Saint Canute, Martyr",
            saintCarthageBishopMochuta: "Saint Carthage, Bishop (Mochuta)",
            saintCasimir: "Saint Casimir",
            saintCatherineOfAlexandriaVirginAndMartyr:
              "Saint Catherine of Alexandria, Virgin and Martyr",
            saintCatherineOfSienaVirginAndDoctorOfTheChurch:
              "Saint Catherine of Siena, Virgin and Doctor of The Church, Patron of Europe",
            saintCeallachCelsusBishop: "Saint Ceallach (Celsus), Bishop",
            saintCeciliaVirginAndMartyr: "Saint Cecilia, Virgin and Martyr",
            saintCharbelMakhloufPriestAndHermit:
              "Saint Charbel Makhlouf, Priest and Hermit",
            saintCharlesBorromeoBishop: "Saint Charles Borromeo, Bishop",
            saintChristopherMagallanesAndCompanionsMartyrs:
              "Saint Christopher Magallanes and Companions, Martyrs",
            saintChristopherMartyr: "Saint Christopher, Martyr",
            saintCiaranAbbot: "Saint Ciaran, Abbot",
            saintClareVirgin: "Saint Clare, Virgin",
            saintClementIPopeAndMartyrSaintColumbanReligious:
              "Saint Clement I, Pope and Martyr/Saint Columban, Religious",
            saintClementMaryHofbauerPriest:
              "Saint Clement Mary Hofbauer, Priest",
            saintClementOfOhridAndGorazdBishopsAndCompanions:
              "Saint Clement of Ohrid and Gorazd, Bishops and Companions",
            saintClotilde: "Saint Clotilde",
            saintColmanOfCloyneBishop: "Saint Colman of Cloyne, Bishop",
            saintColmanOfDromoreBishop: "Saint Colman of Dromore, Bishop",
            saintColmanOfKilmacduaghBishop:
              "Saint Colman of Kilmacduagh, Bishop",
            saintColumba: "Saint Columba",
            saintColumbaAbbotAndMissionary:
              "Saint Columba, Abbot and Missionary",
            saintColumbanAbbotAndMissionary:
              "Saint Columban, Abbot and Missionary",
            saintComgallAbbot: "Saint Comgall, Abbot",
            saintConlethBishop: "Saint Conleth, Bishop",
            saintConradOfParzhamReligious: "Saint Conrad of Parzham, Religious",
            saintCorbinianBishop: "Saint Corbinian, Bishop",
            saintCuthbertBishop: "Saint Cuthbert, Bishop",
            saintCyrilOfAlexandriaBishopAndDoctor:
              "Saint Cyril of Alexandria, Bishop and Doctor",
            saintCyrilOfJerusalemBishopAndDoctor:
              "Saint Cyril of Jerusalem, Bishop and Doctor",
            saintDamasusIPope: "Saint Damasus I, Pope",
            saintDamienDeVeusterPriest: "Saint Damien de Veuster, Priest",
            saintDavidBishop: "Saint David, Bishop",
            saintDavidLewisPriestAndMartyr:
              "Saint David Lewis, Priest and Martyr",
            saintDavnetVirgin: "Saint Davnet, Virgin",
            saintDeclanBishop: "Saint Declan, Bishop",
            saintDeiniolBishop: "Saint Deiniol, Bishop",
            saintDemetrius: "Saint Demetrius",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest:
              "Saint Denis and Companions Martyrs/Saint John Leonardi, Priest",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriestBlessedJohnNewmanBishop:
              "Saint Denis and Companions, Martyrs/Saint John Leonardi, Priest/Blessed John Newman, Bishop",
            saintDionysiusTheAreopagite: "Saint Dionysius The Areopagite",
            saintDominicPriest: "Saint Dominic, Priest",
            "saintDominicPriest/SaintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest":
              "Saint Dominic, Priest/Saint Sixtus II, Pope, and Companions, Martyrs/Saint Cajetan, Priest",
            saintDubriciusBishop: "Saint Dubricius, Bishop",
            saintEdmundCampionPriestAndMartyr:
              "Saint Edmund Campion, Priest and Martyr",
            saintEdmundOfAbingdonBishopOrSaintMargaretOfScotland:
              "Saint Edmund of Abingdon, Bishop Or Saint Margaret of Scotland",
            saintEdwardTheConfessor: "Saint Edward The Confessor",
            saintElijahProphet: "Saint Elijah, prophet",
            saintElizabethAnnSetonReligious:
              "Saint Elizabeth Ann Seton, Religious",
            saintElizabethOfHungary: "Saint Elizabeth of Hungary",
            saintElizabethOfHungarySaintHildaAbbessSaintHughOfLincolnBishop:
              "Saint Elizabeth of Hungary, Religious/Saint Hilda, Abbess/Saint Hugh of Lincoln, Bishop",
            saintElizabethOfPortugal: "Saint Elizabeth of Portugal",
            saintEmeric: "Saint Emeric",
            saintEndaAbbot: "Saint Enda, Abbot",
            saintEphraemDeaconDoctorOrSaintColumbaColumCilleAbbot:
              "Saint Ephraem, Deacon, Doctor or Saint Columba (Colum Cille), Abbot",
            saintEphremDeaconAndDoctor: "Saint Ephrem, Deacon and Doctor",
            saintEricIxMartyr: "Saint Eric IX, Martyr",
            saintEtheldredaAudreyVirgin: "Saint Etheldreda (Audrey), Virgin",
            saintEugeneDeMazenodBishop: "Saint Eugene de Mazenod, Bishop",
            saintEugeneEoghanBishop: "Saint Eugene (Eoghan), Bishop",
            saintEulaliaOfMeridaVirginAndMartyr:
              "Saint Eulalia of Merida, Virgin and Martyr",
            saintEulogiusOfCordobaBishop: "Saint Eulogius of Cordoba, Bishop",
            saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest:
              "Saint Eusebius of Vercelli, Bishop/Saint Peter Julian Eymard, Priest",
            saintEysteinnBishop: "Saint Eysteinn, Bishop",
            saintEzekielMorenoBishop: "Saint Ezekiel Moreno, Bishop",
            saintEzequielMorenoBishop: "Saint Ezequiel Moreno, Bishop",
            saintFachananOfKilfenoraBishop:
              "Saint Fachanan of Kilfenora, Bishop",
            saintFachtnaBishop: "Saint Fachtna, Bishop",
            saintFaustinaKowalskaVirginAndReligious:
              "Saint Faustina Kowalska, Virgin and Religious",
            saintFelipeDeJesusPriestAndMartyr:
              "Saint Felipe de Jesus, Priest And Martyr",
            saintFerdinand: "Saint Ferdinand",
            saintFergalBishopAndMissionary:
              "Saint Fergal, Bishop and Missionary",
            saintFiacreMonk: "Saint Fiacre, Monk",
            saintFidelisOfSigmaringenPriestAndMartyr:
              "Saint Fidelis of Sigmaringen, Priest and Martyr",
            saintFinbarrBishop: "Saint Finbarr, Bishop",
            saintFinnianOfClonardBishop: "Saint Finnian of Clonard, Bishop",
            saintFintan: "Saint Fintan",
            saintFlannanBishop: "Saint Flannan, Bishop",
            saintFlorianAndHisCompanionsMartyrs:
              "Saint Florian and his Companions, Martyrs",
            saintFlorianMartyr: "Saint Florian, Martyr",
            saintFrancesOfRomeReligious: "Saint Frances of Rome, Religious",
            saintFrancesXavierCabriniVirgin:
              "Saint Frances Xavier Cabrini, Virgin",
            saintFrancisBorgiaPriest: "Saint Francis Borgia, Priest",
            saintFrancisDeSalesBishopAndDoctor:
              "Saint Francis de Sales, Bishop and Doctor",
            saintFrancisDiazPriestAndCompanionsMartyrs:
              "Saint Francis Diaz, Priest and Companions, Martyrs",
            saintFrancisFernandezDeCapillasPriestAndMartyr:
              "Saint Francis Fernandez de Capillas, Priest and Martyr",
            saintFrancisOfAssisi: "Saint Francis of Assisi",
            saintFrancisOfPaolaHermit: "Saint Francis of Paola, Hermit",
            saintFrancisSolanusPriest: "Saint Francis Solanus, Priest",
            saintFrancisXavierPriest: "Saint Francis Xavier, Priest",
            saintFrancoisDeLavalBishop: "Saint Francois de Laval, Bishop",
            saintFridolinOfSackingenMonk: "Saint Fridolin of Säckingen, Monk",
            saintFructuosusSaintMartinOfDumeAndSaintGeraldBishops:
              "Saint Fructuosus, Saint Martin of Dume and Saint Gerald, Bishops",
            saintFursaAbbotAndMissionary: "Saint Fursa, Abbot and Missionary",
            saintGabrieltaurinDufresseBishopAndMartyr:
              "Saint Gabriel-Taurin Dufresse, Bishop and Martyr",
            saintGallAbbotAndMissionary: "Saint Gall, Abbot & Missionary",
            saintGenevieveVirgin: "Saint Genevieve, Virgin",
            saintGeorgeMartyr: "Saint George, Martyr",
            saintGeorgeMartyrSaintAdalbertBishopAndMartyr:
              "Saint George, Martyr/Saint Adalbert, Bishop and Martyr",
            saintGeorgePrecaPriest: "Saint George Preca, Priest",
            saintGerardBishop: "Saint Gerard, Bishop",
            saintGermanusOfAuxerreBishop: "Saint Germanus of Auxerre, Bishop",
            saintGertrudeOfNivellesAbbess: "Saint Gertrude of Nivelles, Abbess",
            saintGertrudeOfNivellesVirgin: "Saint Gertrude of Nivelles, Virgin",
            saintGertrudeTheGreatVirgin: "Saint Gertrude The Great, Virgin",
            saintGobnaitVirgin: "Saint Gobnait, Virgin",
            saintGonsaloGarciaMartyr: "Saint Gonsalo Garcia, Martyr",
            saintGorazdAndCompanions: "Saint Gorazd and Companions",
            saintGotthardBishop: "Saint Gotthard, Bishop",
            saintGregoryTheGreatPopeAndDoctor:
              "Saint Gregory the Great, Pope and Doctor of the Church",
            saintHectorValdivielsoSaezMartyr:
              "Saint Héctor Valdivielso Sáez, Martyr",
            saintHedwigOfPoland: "Saint Hedwig of Poland",
            saintHedwigOfSilesia: "Saint Hedwig of Silesia",
            saintHedwigReligiousOrSaintMargaretMaryAlacoqueVirgin:
              "Saint Hedwig, Religious Or Saint Margaret Mary Alacoque, Virgin",
            saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin:
              "Saint Hedwig, Religious/Saint Margaret Mary Alacoque, Virgin",
            saintHelena: "Saint Helena",
            saintHemmaOfGurk: "Saint Hemma of Gurk",
            saintHenryBishopAndMartyr: "Saint Henry, Bishop and Martyr",
            saintHermannJosephPriest: "Saint Hermann Joseph, Priest",
            saintHermenegildMartyr: "Saint Hermenegild, Martyr",
            saintHilaryOfPoitiersBishopAndDoctor:
              "Saint Hilary of Poitiers, Bishop and Doctor",
            saintHildegardOfBingenAbbessAndDoctor:
              "Saint Hildegard of Bingen, Abbess and Doctor",
            saintHubertBishop: "Saint Hubert, Bishop",
            saintHubertOfLiegeBishopOrSaintPirminAbbotAndBishop:
              "Saint Hubert of Liege, Bishop/Saint Pirmin, Abbot and Bishop",
            saintHyacinthPriest: "Saint Hyacinth, Priest",
            saintIgnatiusOfAntiochBishopAndMartyr:
              "Saint Ignatius of Antioch, Bishop and Martyr",
            saintIgnatiusOfLoyolaPriest: "Saint Ignatius of Loyola, Priest",
            saintIldephonsusOfToledoBishop:
              "Saint Ildephonsus of Toledo, Bishop",
            saintIlltudAbbot: "Saint Illtud, Abbot",
            saintIrenaeusBishopAndMartyr: "Saint Irenaeus, Bishop and Martyr",
            saintIrene: "Saint Irene",
            saintIsidoreOfSevilleBishopAndDoctorOfTheChurch:
              "Saint Isidore of Seville, Bishop and Doctor of the Church",
            saintIsidoreTheFarmer: "Saint Isidore the Farmer",
            saintItaVirgin: "Saint Ita, Virgin",
            saintIvoPriest: "Saint Ivo, Priest",
            saintJamesApostle: "Saint James, Apostle",
            saintJamesApostlePatronOfSpain:
              "Saint James, Apostle, Patron of Spain",
            saintJaneFrancesDeChantalReligious:
              "Saint Jane Frances de Chantal, Religious",
            saintJanuariusBishopAndMartyr: "Saint Januarius, Bishop and Martyr",
            saintJarlathBishop: "Saint Jarlath, Bishop",
            saintJeanVianneyTheCureOfArsPriest:
              "Saint Jean Vianney (the Cure of Ars), Priest",
            saintJeromeEmilianiSaintJosephineBakhitaVirgin:
              "Saint Jerome Emiliani and Saint Josephine Bakhita, Virgin",
            saintJeromePriestAndDoctor: "Saint Jerome, Priest and Doctor",
            saintJoachimHoMartyr: "Saint Joachim Ho, Martyr",
            saintJoanOfArcVirginSecondaryPatronessOfFrance:
              "Saint Joan of Arc, Virgin, Secondary Patroness of France",
            saintJoaquinaVedruna: "Saint Joaquina Vedruna",
            saintJohnBaptistDeLaSallePriest:
              "Saint John Baptist de la Salle, Priest",
            saintJohnBerchmansReligious: "Saint John Berchmans, Religious",
            saintJohnBoscoPriest: "Saint John Bosco, Priest",
            saintJohnCassianPriest: "Saint John Cassian, Priest",
            saintJohnChrysostomBishopAndDoctor:
              "Saint John Chrysostom, Bishop and Doctor of the Church",
            saintJohnDamascenePriestAndDoctor:
              "Saint John Damascene, Priest and Doctor",
            saintJohnDamascenePriestAndDoctorOrSaintBarbaraVirginAndMartyr:
              "Saint John Damascene, Priest and Doctor, or Saint Barbara, Virgin and Martyr",
            saintJohnDeBritoPriestAndMartyr:
              "Saint John de Brito, Priest and Martyr",
            saintJohnEudesPriest: "Saint John Eudes, Priest",
            saintJohnGabrielPerboyrePriestAndMartyr:
              "Saint John Gabriel Perboyre, Priest and Martyr",
            saintJohnIPopeAndMartyr: "Saint John I, Pope and Martyr",
            saintJohnJonesPriestAndMartyr:
              "Saint John Jones, Priest and Martyr",
            saintJohnMaciasReligious: "Saint John Macias, Religious",
            saintJohnNepomucenePriestAndMartyr:
              "Saint John Nepomucene, Priest and Martyr",
            saintJohnNeumannBishop: "Saint John Neumann, Bishop",
            saintJohnOfAvilaPriest: "Saint John of Avila, Priest",
            saintJohnOfCapistranoPriest: "Saint John of Capistrano, Priest",
            saintJohnOfDuklaPriest: "Saint John of Dukla, Priest",
            saintJohnOfGodPriest: "Saint John of God, Priest",
            saintJohnOfGodReligious: "Saint John of God, Religious",
            saintJohnOfKantyPriest: "Saint John of Kenty, Priest",
            saintJohnOfTheCrossDoctorOfTheChurch:
              "Saint John of The Cross, Doctor of The Church",
            saintJohnOfTheCrossPriestAndDoctor:
              "Saint John of the Cross, Priest and Doctor",
            saintJohnOfTrioraPriestAndMartyr:
              "Saint John of Triora, Priest and Martyr",
            saintJohnOgilvie: "Saint John Ogilvie",
            saintJohnRobertsPriestAndMartyr:
              "Saint John Roberts, Priest and Martyr",
            saintJohnSarkanderPriestAndMartyrSaintZdzislawa:
              "Saint John Sarkander, Priest and Martyr/Saint Zdzislawa",
            saintJohnTheApostleAndEvangelist:
              "Saint John the Apostle and Evangelist",
            saintJosaphatBishopAndMartyr: "Saint Josaphat, Bishop and Martyr",
            saintJoseDeAnchietaPriest: "Saint Jose de Anchieta, Priest",
            saintJosefBilczewskiBishop: "Saint Josef Bilczewski, Bishop",
            saintJoseMariaDeYermoPriest: "Saint Jose Maria de Yermo, Priest",
            saintJosemariaEscrivaDeBalaguerPriest:
              "Saint Josemaria Escriva de Balaguer, Priest",
            saintJosephSpouseOfTheBlessedVirginMaryPrincipalPatronOfCanada:
              "Saint Joseph, Spouse of The Blessed Virgin Mary, Principal Patron of Canada",
            saintJosephTheWorker: "Saint Joseph the Worker",
            saintJosephYuanPriestAndMartyr:
              "Saint Joseph Yuan, Priest and Martyr",
            saintJosephZhangDapengMartyr: "Saint Joseph Zhang Dapeng, Martyr",
            saintJozefBilczewskiBishop: "Saint Jozef Bilczewski, Bishop",
            saintJozefSebastianPelczar: "Saint Jozef Sebastian Pelczar",
            saintJuanDiego: "Saint Juan Diego",
            saintJuanDiegoCuauhtlatoatzin: "Saint Juan Diego Cuauhtlatoatzin",
            saintJulianaOfLiegeVirgin: "Saint Juliana of Liege, Virgin",
            saintJulieBilliartVirgin: "Saint Julie Billiart, Virgin",
            saintJustinMartyr: "Saint Justin Martyr",
            saintKateriTekakwithaVirgin: "Saint Kateri Tekakwitha, Virgin",
            saintKatharineDrexelVirgin: "Saint Katharine Drexel, Virgin",
            saintKentigern: "Saint Kentigern",
            saintKevinAbbot: "Saint Kevin, Abbot",
            saintKieranBishop: "Saint Kieran, Bishop",
            saintKilianBishopAndCompanionsMartyrs:
              "Saint Kilian, Bishop and Companions, Martyrs",
            saintKillianBishopAndMartyr: "Saint Killian, Bishop and Martyr",
            saintKingaVirgin: "Saint Kinga, Virgin",
            saintLadislaus: "Saint Ladislaus",
            saintLambertBishopAndMartyr:
              "Saint Lambert of Maastricht, Bishop and Martyr",
            saintLaurenceOTooleBishop: "Saint Laurence O'Toole, Bishop",
            saintLaurenceWangBingAndCompanionsMartyrsSaintJosephFreinademetzPriest:
              "Saint Laurence Wang Bing and Companions, Martyrs or Saint Joseph Freinademetz, Priest",
            saintLawrenceBaiXiaomanMartyr: "Saint Lawrence Bai Xiaoman, Martyr",
            saintLawrenceOfBrindisiPriestAndDoctor:
              "Saint Lawrence of Brindisi, Priest and Doctor",
            saintLawrenceOfRomeDeaconAndMartyr:
              "Saint Lawrence of Rome, Deacon and Martyr",
            saintLeanderBishop: "Saint Leander, Bishop",
            saintLeobaAbbess: "Saint Leoba, Abbess",
            saintLeoIxPopeOrBlessedMarcelCalloMartyr:
              "Saint Leo IX, Pope Or Blessed Marcel Callo, Martyr",
            saintLeoManginPriestAndCompanionsMartyrs:
              "Saint Leo Mangin, Priest and Companions, Martyrs",
            saintLeonardOfNoblacHermit: "Saint Leonard of Noblac, Hermit",
            saintLeopoldIII: "Saint Leopold III",
            saintLeopoldMandicPriest: "Saint Leopold Mandic, Priest",
            saintLeoTheGreatPopeAndDoctor:
              "Saint Leo the Great, Pope and Doctor",
            saintLorenzoRuizAndCompanionsMartyrs:
              "Saint Lorenzo Ruiz and Companions, Martyrs",
            saintLouisBertrandPriest: "Saint Louis Bertrand, Priest",
            saintLouisGrignonDeMontfortPriest:
              "Saint Louis Grignon de Montfort, Priest",
            saintLouisSaintJosephOfCalasanzPriest:
              "Saint Louis/Saint Joseph of Calasanz, Priest",
            saintLuciusOfChurBishopAndMartyr:
              "Saint Lucius of Chur, Bishop and Martyr",
            saintLucyOfSyracuseVirginAndMartyr:
              "Saint Lucy of Syracuse, Virgin and Martyr",
            saintLucyYiZhenmeiVirginAndMartyr:
              "Saint Lucy Yi Zhenmei, Virgin and Martyr",
            saintLudgerBishop: "Saint Ludger, Bishop",
            saintLudmilaMartyr: "Saint Ludmila, Martyr",
            saintLuigiOrionePriest: "Saint Luigi Orione, Priest",
            saintLukeTheEvangelist: "Saint Luke the Evangelist",
            saintLydiaOfPhilippi: "Saint Lydia of Philippi",
            saintMacartanBishop: "Saint Macartan, Bishop",
            saintMacNissiBishop: "Saint Mac Nissi, Bishop",
            saintMaelruainMaolruainVirgin:
              "Saint Maelruain (Maolruain), Virgin",
            saintMagnusMartyr: "Saint Magnus, Martyr",
            saintMalachyBishop: "Saint Malachy, Bishop",
            saintMarcellinChampagnatPriest:
              "Saint Marcellin Champagnat, Priest",
            saintMargaretMaryAlacoque: "Saint Msrgaret Mary Alacoque",
            saintMargaretOfAntiochVirginAndMartyr:
              "Saint Margaret of Antioch, Virgin and Martyr",
            saintMargaretOfHungary: "Saint Margaret of Hungary",
            saintMargaretOfScotland: "Saint Margaret of Scotland",
            saintMargaretOfScotlandSaintGertrudeTheGreatVirgin:
              "Saint Margaret of Scotland/Saint Gertrude the Great, Virgin",
            saintMargueriteBourgeoysVirgin:
              "Saint Marguerite Bourgeoys, Virgin",
            saintMargueriteDYouvilleReligious:
              "Saint Marguerite d'Youville, Religious",
            saintMariaDeJesusSacramentadoVenegasVirgin:
              "Saint Maria de Jesus Sacramentado Venegas, Virgin",
            saintMariaGorettiVirginAndMartyr:
              "Saint Maria Goretti, Virgin and Martyr",
            saintMariaMicaelaOfTheBlessedSacramentVirgin:
              "Saint Maria Micaela of The Blessed Sacrament, Virgin",
            saintMarianaDeJesusDeParedesVirgin:
              "Saint Mariana de Jesus de Paredes, Virgin",
            saintMarieOfTheIncarnationReligious:
              "Saint Marie of The Incarnation, Religious",
            saintMarina: "Saint Marina",
            saintMarkApostle: "Saint Mark, Apostle",
            saintMarkoKrizinPriestAndMartyr:
              "Saint Marko Krizin, Priest and Martyr",
            saintMarkTheEvangelist: "Saint Mark the Evangelist",
            saintMaroun: "Saint Maroun",
            saintMartha: "Saint Martha",
            saintMartinDePorresReligious: "Saint Martin de Porres, Religious",
            saintMartinIPopeAndMartyr: "Saint Martin I, Pope and Martyr",
            saintMartinOfToursBishop: "Saint Martin of Tours, Bishop",
            saintMartinWuXueshengAndCompanionsMartyrs:
              "Saint Martin Wu Xuesheng and Companions, Martyrs",
            saintMaryMacKillopVirgin: "Saint Mary MacKillop, Virgin",
            saintMaryMagdalene: "Saint Mary Magdalene",
            saintMaryOfTheCrossVirgin: "Saint Mary of The Cross, Virgin",
            saintMatilda: "Saint Matilda",
            saintMatthewApostleAndEvangelist:
              "Saint Matthew, Apostle and Evangelist",
            saintMatthiasTheApostle: "Saint Matthias the Apostle",
            saintMauriceAndCompanionsMartyrs:
              "Saint Maurice and Companions, Martyrs",
            saintMaurusBishop: "Saint Maurus, Bishop",
            saintMaximilianMaryKolbePriestAndMartyr:
              "Saint Maximilian Mary Kolbe, Priest and Martyr",
            saintMeinradMartyr: "Saint Meinrad, Martyr",
            saintMelBishop: "Saint Mel, Bishop",
            saintMelchiorGrodzieckiPriestAndMartyr:
              "Saint Melchior Grodziecki, Priest and Martyr",
            saintMiguelFebresCorderoReligious:
              "Saint Miguel Febres Cordero, Religious",
            saintMolaiseLaisrenLaserianBishop:
              "Saint Molaise (Laisren, Laserian), Bishop",
            saintMonica: "Saint Monica",
            saintMoninneVirgin: "Saint Moninne, Virgin",
            saintMuiredachBishopSaintAttractaVirginOrSaintLeliaVirgin:
              "Saint Muiredach, Bishop, Saint Attracta, Virgin, Or Saint Lelia, Virgin",
            saintMunchinBishop: "Saint Munchin, Bishop",
            saintNicholasBishop: "Saint Nicholas, Bishop",
            saintNicholasOfFlueHermit: "Saint Nicholas of Flüe, Hermit",
            saintNikolaTavelicPriestAndMartyr:
              "Saint Nikola Tavelic, Priest and Martyr",
            saintNinian: "Saint Ninian",
            saintNorbertBishop: "Saint Norbert, Bishop",
            saintNunoDeSantaMaria: "Saint Nuno de Santa Maria",
            saintOdileOfAlsaceAbbess: "Saint Odile of Alsace, Abbess",
            saintOlafIiMartyr: "Saint Olaf II, Martyr",
            saintOlga: "Saint Olga",
            saintOliverPlunketBishopAndMartyr:
              "Saint Oliver Plunket, Bishop and Martyr",
            saintOliverPlunkettBishopAndMartyr:
              "Saint Oliver Plunkett, Bishop and Martyr",
            saintOtteranMonk: "Saint Otteran, Monk",
            saintOttoOfBambergBishop: "Saint Otto of Bamberg, Bishop",
            saintPantaleon: "Saint Pantaleon",
            saintPaschalBaylon: "Saint Paschal Baylon",
            saintPatrickBishop: "Saint Patrick, Bishop",
            saintPaulChenChangpinAndCompanionsMartyrs:
              "Saint Paul Chen Changpin and Companions, Martyrs",
            saintPaulinaOfTheAgonizingHeartOfJesusVirgin:
              "Saint Paulina of The Agonizing Heart of Jesus, Virgin",
            saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs:
              "Saint Paulinus of Nola, Bishop/Saints John Fisher, Bishop and Thomas More, Martyrs",
            saintPaulinusOfTrierBishop: "Saint Paulinus of Trier, Bishop",
            saintPaulinusOfYorkBishop: "Saint Paulinus of York, Bishop",
            saintPaulLiuHanzouPriestAndMartyr:
              "Saint Paul Liu Hanzou, Priest and Martyr",
            saintPaulMikiAndCompanionsMartyrs:
              "Saint Paul Miki and Companions, Martyrs",
            saintPaulOfTheCrossPriest: "Saint Paul of The Cross, Priest",
            saintPedroCalungsodMartyr: "Saint Pedro Calungsod, Martyr",
            saintPelagiusMartyr: "Saint Pelagius, Martyr",
            saintPeterCanisiusPriestAndDoctor:
              "Saint Peter Canisius, Priest and Doctor",
            saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest:
              "Saint Peter Chanel, Priest and Martyr/Saint Louis Grignon de Montfort, Priest",
            saintPeterChrysologusBishopAndDoctor:
              "Saint Peter Chrysologus, Bishop and Doctor",
            saintPeterClaverPriest: "Saint Peter Claver, Priest",
            saintPeterDamianBishopAndDoctorOfTheChurch:
              "Saint Peter Damian, Bishop and Doctor of the Church",
            saintPeterLiuMartyr: "Saint Peter Liu, Martyr",
            saintPeterOfAlcantaraPriest: "Saint Peter of Alcantara, Priest",
            saintPeterSanzBishopAndMartyr:
              "Saint Peter Sanz, bishop and Martyr",
            saintPeterWuMartyr: "Saint Peter Wu, Martyr",
            saintPhilipNeriPriest: "Saint Philip Neri, Priest",
            saintPioOfPietralcina: "Saint Pio of Pietralcina",
            saintPioOfPietrelcinaPadrePioPriest:
              "Saint Pio of Pietrelcina (Padre Pio), Priest",
            saintPiusVPope: "Saint Pius V, Pope",
            saintPiusXPope: "Saint Pius X, Pope",
            saintPolycarpBishopAndMartyr: "Saint Polycarp, Bishop and Martyr",
            saintPothinusBishopSaintBlAndinaVirginAndTheirCompanionsMartyrs:
              "Saint Pothinus, Bishop, Saint Blandina, Virgin, and Their Companions, Martyrs",
            saintProcopiusAbbot: "Saint Procopius, Abbot",
            saintPubliusBishop: "Saint Publius, Bishop",
            saintQuirinusOfSescia: "Saint Quirinus of Sescia",
            saintRabanusMaurusBishop: "Saint Rabanus Maurus, Bishop",
            saintRadimBishop: "Saint Radim, Bishop",
            saintRafaelGuizarYValenciaBishop:
              "Saint Rafael Guizar y Valencia, Bishop",
            saintRafalKalinowskiPriest: "Saint Rafal Kalinowski, Priest",
            saintRafqaRebeccaVirgin: "Saint Rafqa (Rebecca), Virgin",
            saintRaymondOfPenyafortPriest: "Saint Raymond of Penyafort, Priest",
            saintRemigiusBishop: "Saint Remigius, Bishop",
            saintRichardGwynMartyr: "Saint Richard Gwyn, Martyr",
            saintRichardOfChichesterBishop:
              "Saint Richard of Chichester, Bishop",
            saintRitaOfCascia: "Saint Rita of Cascia",
            saintRobertBellarmineBishopAndDoctor:
              "Saint Robert Bellarmine, Bishop and Doctor of the Church",
            saintRocco: "Saint Rocco",
            saintRoch: "Saint Roch",
            saintRomualdAbbot: "Saint Romuald, Abbot",
            saintRoseOfLima: "Saint Rose of Lima, Virgin",
            saintRosePhilippineDuchesneVirgin:
              "Saint Rose Philippine Duchesne, Virgin",
            saintsAlbanJuliusAndAaronMartyrs:
              "Saints Alban, Julius and Aaron, Martyrs",
            saintsAndrewZorardAndBenedictHermits:
              "Saints Andrew Zorard and Benedict, Hermits",
            saintsAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Saints Augustine Zhao Rong, Priest, and Companions, Martyrs",
            saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors:
              "Saints Basil the Great and Gregory Nazianzen, Bishops and Doctors",
            saintsBenedyktJanMateuszIsaakAndKrystynMartyrs:
              "Saints Benedykt, Jan, Mateusz, Isaak and Krystyn, Martyrs",
            saintsBorisAndGlebMartyrs: "Saints Boris and Gleb, Martyrs",
            saintsCanuteEricAndOlafMartyrs:
              "Saints Canute, Eric and Olaf, Martyrs",
            saintsChadAndCeddBishop: "Saints Chad and Cedd, Bishop",
            saintsCharlesLwangaAndCompanionsMartyrs:
              "Saints Charles Lwanga and Companions, Martyrs",
            saintScholasticaVirgin: "Saint Scholastica, Virgin",
            saintsConradAndGebhardOfConstanceBishops:
              "Saints Conrad and Gebhard of Constance, Bishops",
            saintsCorneliusPopeAndCyprianBishopMartyrs:
              "Saints Cornelius, Pope, and Cyprian, Bishop, Martyrs",
            saintsCosmasAndDamian: "Saints Cosmas and Damian",
            saintsCosmasAndDamianMartyrs: "Saints Cosmas and Damian, Martyrs",
            saintsCyrilMonkAndMethodiusBishop:
              "Saints Cyril, Monk and Methodius, Bishop",
            saintSenanBishop: "Saint Senan, Bishop",
            saintSeverinusOfNoricumMonk: "Saint Severinus of Noricum, Monk",
            saintsFabianPopeAndSebastianMartyrs:
              "Saints Fabian, Pope, and Sebastian, Martyrs",
            saintsFelipeDeJesusPaulMikiAndCompanionsMartyrs:
              "Saints Felipe de Jesus, Paul Miki and Companions, Martyrs",
            saintsFructuosusBishopAndAuguriusAndEulogiusDeaconsMartyrs:
              "Saints Fructuosus, Bishop, and Augurius and Eulogius, Deacons, Martyrs",
            saintsGregoryGrassiFrancisFogollaAndAnthonyFantosatiBishopsAndCompanionsMartyrs:
              "Saints Gregory Grassi, Francis Fogolla and Anthony Fantosati, Bishops and Companions, Martyrs",
            saintsHenryAndCunigunde: "Saints Henry and Cunigunde",
            saintSigismundMartyr: "Saint Sigismund, Martyr",
            saintSimonOfLipnicaPriest: "Saint Simon of Lipnica, Priest",
            saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest:
              "Saint Sixtus II, Pope, and Companions, Martyrs/Saint Cajetan, Priest",
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Saints Jean de Brebeuf and Isaac Jogues, Priests and Companions, Martyrs/Saint Paul of the Cross, Priest",
            saintsJoachimAndAnne: "Saints Joachim and Anne",
            saintsJohnFisherBishopAndThomasMoreMartyrs:
              "Saints John Fisher, Bishop and Thomas More, Martyrs",
            saintsLawrenceRuizAndCompanionsMartyrs:
              "Saints Lawrence Ruiz and Companions, Martyrs",
            saintsLouisVersigliaBishopAndCallistusCaravarioPriestMartyrs:
              "Saints Louis Versiglia, Bishop and Callistus Caravario, Priest, Martyrs",
            saintsMarcellinusAndPeterMartyrs:
              "Saints Marcellinus and Peter, Martyrs",
            saintsMargaretClitherowAnneLineAndMargaretWardMartyrs:
              "Saints Margaret Clitherow, Anne Line and Margaret Ward, Martyrs",
            saintsMarkoKrizinMelicharGrodeckiAndStephenPongracPriestsAndMartyrs:
              "Saints Marko Krizin, Melichar Grodecki and Stephen Pongrac, Priests and Martyrs",
            saintsMichaelGabrielAndRaphaelArchangels:
              "Saints Michael, Gabriel and Raphael, Archangels",
            saintsNereusAndAchilleusMartyrsSaintPancrasMartyr:
              "Saints Nereus and Achilleus, Martyrs/Saint Pancras, Martyr",
            saintSoledadTorresAcostaVirgin:
              "Saint Soledad Torres Acosta, Virgin",
            saintsPedroBautistaPaulMikiAndCompanionsMartyrs:
              "Saints Pedro Bautista, Paul Miki and Companions, Martyrs",
            saintsPerpetuaAndFelicityMartyrs:
              "Saints Perpetua and Felicity, Martyrs",
            saintsPhilipAndJamesApostles: "Saints Philip and James, Apostles",
            saintsPhilipEvansAndJohnLloydPriestsAndMartyrs:
              "Saints Philip Evans and John Lloyd, Priests and Martyrs",
            saintsPontianPopeAndHippolytusPriestMartyrs:
              "Saints Pontian, Pope and Hippolytus, Priest, Martyrs",
            saintSpyridon: "Saint Spyridon",
            saintsRoqueGonzalezAlfonsoRodriguezOlmedoAndJuanDelCastilloPriestsAndMartyrs:
              "Saints Roque Gonzalez, Alfonso Rodriguez Olmedo, and Juan del Castillo, Priests and Martyrs",
            saintsRupertAndVirgiliusOfSalzburgBishops:
              "Saints Rupert and Virgilius of Salzburg, Bishops",
            saintsSimonAndJudeApostles: "Saints Simon and Jude, Apostles",
            saintStanislausBishopAndMartyr:
              "Saint Stanislaus, Bishop and Martyr",
            saintStanislausKazimierczykPriest:
              "Saint Stanislaus Kazimierczyk, Priest",
            saintStanislausKostkaReligious:
              "Saint Stanislaus Kostka, Religious",
            saintStephenOfHungary: "Saint Stephen of Hungary",
            saintStephenTheFirstMartyr: "Saint Stephen, The First Martyr",
            saintsTimothyAndTitusBishops: "Saints Timothy and Titus, Bishops",
            saintSunnivaVirginAndMartyr: "Saint Sunniva, Virgin and Martyr",
            saintSwithunBishop: "Saint Swithun, Bishop",
            saintSylvesterIPope: "Saint Sylvester I, Pope",
            saintTeiloBishop: "Saint Teilo, Bishop",
            saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr:
              "Saint Teresa Benedicta of The Cross (Edith Stein), Virgin and Martyr, Patron of Europe",
            saintTeresaOfCalcuttaReligious:
              "Saint Teresa of Calcutta, Religious",
            saintTeresaOfJesusJornetEIbarsVirgin:
              "Saint Teresa of Jesus Jornet e Ibars, Virgin",
            saintTeresaOfJesusVirginAndDoctorOfTheChurch:
              "Saint Teresa of Jesus, Virgin and Doctor",
            saintTeresaOfLosAndesVirgin: "Saint Teresa of Los Andes, Virgin",
            saintTheodoreOfCanterburyBishop:
              "Saint Theodore of Canterbury, Bishop",
            saintTheodosiusOfTheCavesAbbot:
              "Saint Theodosius of The Caves, Abbot",
            saintTheotoniusPriest: "Saint Theotonius, Priest",
            saintThereseOfTheChildJesusVirginAndDoctor:
              "Saint Therese of the Child Jesus, Virgin and Doctor",
            saintThereseOfTheChildJesusVirginSecondaryPatronessOfFrance:
              "Saint Therese of The Child Jesus, Virgin, Secondary Patroness of France",
            saintThomasAquinasPriestAndDoctor:
              "Saint Thomas Aquinas, Priest and Doctor",
            saintThomasBecketBishopAndMartyr:
              "Saint Thomas Becket, Bishop and Martyr",
            saintThomasOfVillanovaBishop: "Saint Thomas of Villanova, Bishop",
            saintThomasRokuzayemonPriestAndCompanionsMartyrs:
              "Saint Thomas Rokuzayemon, Priest and Companions, Martyrs",
            saintThomasTheApostle: "Saint Thomas the Apostle",
            saintThorfinnBishop: "Saint Thorfinn, Bishop",
            saintThorlacBishop: "Saint Thorlac, Bishop",
            saintTuribiusOfMogrovejoBishop:
              "Saint Turibius of Mogrovejo, Bishop",
            saintUlrichOfAugsburg: "Saint Ulrich of Augsburg",
            saintUrsulaAndCompanionsVirginsAndMartyrs:
              "Saint Ursula and Companions, Virgins and Martyrs",
            saintUrsulaLedochowskaVirgin: "Saint Ursula Ledochowska, Virgin",
            saintValentineOfRaetiaBishop: "Saint Valentine of Raetia, Bishop",
            saintVincentDeaconAndMartyr: "Saint Vincent, Deacon and Martyr",
            saintVincentDeaconAndMartyrOrSaintMarianneCopeVirgin:
              "Saint Vincent, Deacon and Martyr Or Saint Marianne Cope, Virgin",
            saintVincentDePaulPriest: "Saint Vincent de Paul, Priest",
            saintVincentFerrerPriest: "Saint Vincent Ferrer, Priest",
            saintVincentPallottiPriest: "Saint Vincent Pallotti, Priest",
            saintVitusMartyr: "Saint Vitus, Martyr",
            saintVladimirTheGreat: "Saint Vladimir The Great",
            saintWalburgaAbbess: "Saint Walburga, Abbess",
            saintWenceslausMartyr: "Saint Wenceslaus, Martyr",
            saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs:
              "Saint Wenceslaus, Martyr/Saints Lawrence Ruiz and Companions, Martyrs",
            saintWendelinAbbot: "Saint Wendelin, Abbot",
            saintWilfridBishop: "Saint Wilfrid, Bishop",
            saintWillibaldBishop: "Saint Willibald, Bishop",
            saintWillibrordBishop: "Saint Willibrord, Bishop",
            saintWinefrideVirgin: "Saint Winefride, Virgin",
            saintWolfgangBishop: "Saint Wolfgang, Bishop",
            saintWolfgangOfRegensburgBishop:
              "Saint Wolfgang of Regensburg, Bishop",
            saintWulstanBishop: "Saint Wulstan, Bishop",
            saintZdislava: "Saint Zdislava",
            saintZygmuntGorazdowskiPriest: "Saint Zygmunt Gorazdowski, Priest",
            saintZygmuntSzczesnyFelinskiBishop:
              "Saint Zygmunt Szczesny Felinski, Bishop",
            santoNinoInfantJesus: "Santo Nino (Infant Jesus)",
            sevenHolyFoundersOfTheServiteOrder:
              "Seven Holy Founders of the Servite Order",
            sevenMartyredNunsFromTheFranciscanMissionariesOfMary:
              "Seven Martyred Nuns from the Franciscan Missionaries of Mary",
            shipwreckOfSaintPaulApostle: "Shipwreck of Saint Paul, Apostle",
            shroveMonday: "Shrove Monday",
            shroveTuesday: "Shrove Tuesday",
            stDunstanArchbishopOfCanterbury:
              "St Dunstan, Archbishop of Canterbury",
            theBeheadingOfSaintJohnTheBaptistMartyr:
              "The Beheading of Saint John the Baptist, Martyr",
            theEnglishMartyrs: "The English Martyrs",
            theFiveWoundsOfTheLord: "The Five Wounds of The Lord",
            theMostHolyNameOfJesus: "The Most Holy Name of Jesus",
            theSixWelshMartyrsAndCompanions:
              "The Six Welsh Martyrs and Companions",
            transferOfTheRelicsOfSaintStephen:
              "Transfer of The Relics of Saint Stephen",
            vietnameseMartyrs: "Vietnamese Martyrs",
            visitationOfTheBlessedVirginMary:
              "Visitation of the Blessed Virgin Mary",
            waitangiDay: "Waitangi Day",
          },
        },
        Ln = {
          advent: {
            season: "Temps de l’Avent",
            feria: "{{day}} de la {{week}} semaine de l’Avent",
            sunday: "{{week}} Dimanche de l’Avent",
          },
          christmastide: {
            season: "Temps de Noël",
            day: "{{day}} dans le Temps de Noël",
            octave: "{{count}} jour dans l’Octave de Noël",
            sunday: "{{count}} Dimanche de Noël",
          },
          epiphany: {
            season: "Epiphanie",
            before: "{{day}} avant l’Epiphanie",
            after: "{{day}} après l’Epiphanie",
          },
          ordinaryTime: {
            season: "Temps Ordinaire",
            feria: "{{day}} de la {{week}} semaine du Temps Ordinaire",
            sunday: "{{week}} Dimanche du Temps Ordinaire",
          },
          lent: {
            season: "Carême",
            feria: "{{day}} de la {{week}} semaine du Carême",
            sunday: "{{week}} Dimanche du Carême",
            day_after_ash_wed: "{{day}} des Cendres",
          },
          holyWeek: { season: "Semaine Sainte", feria: "{{day}} Saint" },
          eastertide: {
            season: "Temps de Pâques",
            feria: "{{day}} de la {{week}} semaine de Pâques",
            sunday: "{{week}} Dimanche de Pâques",
            octave: "{{day}} de Pâques",
          },
          celebrations: {
            allSaints: "Tous les Saints",
            annunciation: "Annonciation du Seigneur",
            ascension: "Ascension du Seigneur",
            ashWednesday: "Mercredi des Cendres",
            assumption: "Assomption de la Vierge Marie",
            baptismOfTheLord: "Baptême du Seigneur",
            birthOfJohnTheBaptist: "Nativité de Saint Jean le Baptiste",
            christmas: "Nativité du Seigneur",
            christTheKing: "Christ, Roi de l'Univers",
            corpusChristi: "Saint-Sacrement",
            divineMercySunday: "Dimanche de la Divine Miséricorde",
            easter: "Dimanche de Pâques",
            epiphany: "L’Épiphanie du Seigneur",
            goodFriday: "Vendredi Saint",
            holyFamily: "La Sainte Famille",
            holySaturday: "Samedi Saint",
            holyThursday: "Jeudi Saint",
            immaculateConception: "Immaculée Conception de la Vierge Marie",
            immaculateHeartOfMary: "Cœur immaculé de Marie",
            josephHusbandOfMary: "Saint Joseph, Époux de la Vierge Marie",
            maryMotherOfGod: "Marie, Mère de Dieu",
            palmSunday: "Dimanche des Rameaux et de la Passion",
            pentecostSunday: "Pentecôte",
            peterAndPaulApostles: "Saint Pierre et Saint Paul, Apôtres",
            presentationOfTheLord: "Présentation du Seigneur au Temple",
            sacredHeartOfJesus: "Sacré-Cœur de Jésus",
            theExaltationOfTheHolyCross: "La Croix Glorieuse",
            transfiguration: "Transfiguration du Seigneur",
            trinitySunday: "Très Sainte Trinité",
          },
          sanctoral: {
            allSouls: "Commémoration de tous les fidèles défunts",
            birthOfTheBlessedVirginMary: "Nativité de la Vierge Marie",
            blessedAndreGrassetPriestAndMartyr:
              "Bienheureux André Grasset, Prêtre, Canadien martyr de la Révolution française (✝ 1792)",
            blessedCatherineOfSaintAugustineVirgin:
              "Bienheureuse Catherine de Saint-Augustin, Religieuse hospitalière de la Miséricorde (✝ 1668)",
            blessedDinaBelangerVirgin:
              "Bienheureuse Dina Bélanger, Religieuse de la congrégation des Sœurs de Jésus-Marie (✝ 1929)",
            blessedEmilieTavernierGamelinReligious:
              "Bienheureuse Émilie Tavernier-Gamelin, Religieuse, Fondatrice des Sœurs de la Providence de Montréal (✝ 1851)",
            blessedFredericJanssoonePriest:
              "Bienheureux Frédéric Janssoone, Prêtre franciscain (✝ 1916)",
            blessedLouisZephirinMoreauBishop:
              "Bienheureux Louis Zéphyrin Moreau, Évêque (✝ 1901)",
            blessedMarieAnneBlondinVirgin:
              "Bienheureuse Marie-Anne Blondin, Religieuse, Fondatrice des Sœurs de Sainte-Anne (✝ 1890)",
            blessedMarieLeonieParadisVirgin:
              "Bienheureuse Marie-Léonie Paradis, Religieuse, Fondatrice de la Congrégation des Petites Sœurs de la Sainte Famille (✝ 1912)",
            blessedMarieRoseDurocherVirgin:
              "Bienheureuse Marie-Rose Durocher, Religieuse, Fondatrice des Sœurs des Saints Noms de Jésus et de Marie (✝ 1849)",
            blessedsNykytaBudkaAndVasylVelychkowskyBishopsAndMartyrs:
              "Bienheureux Nicétas Budka (✝ 1949) et Vasyl Velychkowsky (✝ 1973), Évêques et Martyrs",
            chairOfSaintPeterApostle: "Chaire de Saint Pierre, Apôtre",
            conversionOfSaintPaulApostle: "Conversion de Saint Paul, Apôtre",
            dedicationOfTheBasilicaOfSaintMaryMajor:
              "Dédicace de la basilique Sainte-Marie Majeure",
            dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles:
              "Dédicace des basiliques de Saint Pierre et Saint Paul, Apôtres, à Rome",
            dedicationOfTheLateranBasilica:
              "Dédicace de la Basilique du Latran",
            firstMartyrsOfTheChurchOfRome:
              "Premiers Saints martyrs de la Sainte Église romaine (✝ 64)",
            guardianAngels: "Saints Anges gardiens",
            holyInnocentsMartyrs: "Saints Innocents, Martyrs (1er s.)",
            holyNameOfTheBlessedVirginMary: "Le Saint Nom de Marie",
            ourLadyMediatrix: "Notre-Dame, Médiatrice",
            ourLadyOfFatima: "Notre-Dame de Fatima",
            ourLadyOfGoodCounsel: "Notre-Dame du Bon Conseil",
            ourLadyOfGuadalupe: "Notre-Dame de Guadalupe",
            ourLadyOfLourdes: "Notre-Dame de Lourdes",
            ourLadyOfMountCarmel: "Notre-Dame du Mont-Carmel",
            ourLadyOfSorrows: "Notre-Dame des Douleurs",
            ourLadyOfTheRosary: "Notre-Dame du Rosaire",
            popeSaintJohnPaulII: "Saint Jean Paul II, Pape (✝ 2005)",
            popeSaintJohnXXIII: "Saint Jean XXIII, Pape (✝ 1963)",
            presentationOfTheBlessedVirginMary:
              "Présentation de la Vierge Marie",
            queenshipOfBlessedVirginMary: "Vierge Marie Reine",
            saintAgathaVirginAndMartyr:
              "Sainte Agathe, Vierge et Martyre en Sicile (✝ 251)",
            saintAgnesVirginAndMartyr:
              "Sainte Agnès, Vierge et Martyre (✝ v. 304)",
            saintAlbertTheGreatBishopAndDoctor:
              "Saint Albert le Grand, Frère prêcheur, Évêque de Ratisbonne, Docteur de l’Eglise (✝ 1280)",
            saintAloysiusGonzagaReligious:
              "Saint Louis de Gonzague, Religieux Jésuite (✝ 1591)",
            saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch:
              "Saint Alphonse-Marie de Liguori, Bishop and Doctor of the Church",
            saintAmandMissionary:
              "Saint Amand d’Elnone, Missionnaire, Evêque de Maastricht (✝ v. 676)",
            saintAmbroseBishopAndDoctor:
              "Saint Ambroise, Évêque de Milan et Docteur de l’Église (✝ 397)",
            saintAndreBessetteReligious:
              "Saint Frère André Bessette, Religieux (✝ 1937)",
            saintAndrewDungLacAndCompanionsMartyrs:
              "Saint André Dung Lac, Prêtre, et ses compagnons, Martyrs (✝ entre 1745 et 1862)",
            saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs:
              "Saint André Kim Taegon, Prêtre, et Paul Chong Ha-sang et ses compagnons, Martyrs en Corée (19ème s.)",
            saintAndrewTheApostle: "Saint André, Apôtre",
            saintAngelaMericiVirgin:
              "Sainte Angèle Mérici, Religieuse, Fondatrice de la Compagnie de Sainte Ursule de Brescia (✝ 1540)",
            saintAnnePatronOfQuebecAndSaintJoachimParentsOfTheBlessedVirginMary:
              "Saints Anne, Patronne du Québec, et Joachim, Parents de la Vierge Marie (1er siècle)",
            saintAnselmOfCanterburyBishopAndDoctorOfTheChurch:
              "Saint Anselme de Cantorbéry, Évêque, docteur de l’Eglise (✝ 1109)",
            saintAnthonyMaryClaretBishop:
              "Saint Antoine-Marie Claret, Évêque (✝ 1870)",
            saintAnthonyOfEgyptAbbot:
              "Saint Antoine le Grand, Ermite en Egypte (✝ 356)",
            saintAnthonyOfPaduaPriestAndDoctor:
              "Saint Antoine, Prêtre et Docteur de l’Église (✝ 1231)",
            saintAnthonyZaccariaPriest:
              "Saint Antoine-Marie Zaccaria, Prêtre (✝ 1539)",
            saintApollinaris: "Saint Apollinaire, Évêque (2ème s.)",
            saintAthanasiusBishopAndDoctor:
              "Saint Athanase, Évêque, Docteur et Père de l’Église (✝ 373)",
            saintAugustineOfCanterburyBishop:
              "Saint Augustin, Évêque de Cantorbéry en Angleterre (✝ 604)",
            saintAugustineOfHippoBishopAndDoctorOfTheChurch:
              "Saint Augustin, Evêque d’Hippone, Docteur de l’Église (✝ 430)",
            saintBarnabasTheApostle: "Saint Barnabé, Apôtre",
            saintBartholomewTheApostle: "Saint Barthélemy, Apôtre",
            saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin:
              "Saint Bède le Vénérable, Prêtre et docteur de l’Église (✝ 735), ou Saint Grégoire VII, Pape (✝ 1085), ou Sainte Marie-Madeleine de Pazzi, Vierge de l’Ordre du Carmel (✝ 1607)",
            saintBenedictOfNursiaAbbot:
              "Saint Benoît de Nursie, Patriarche des moines d’Occident, Fondateur de l’ordre des Bénédictins, Patron de l’Europe (✝ v. 547)",
            saintBernadetteSoubirousVirgin:
              "Sainte Bernadette Soubirous, Vierge (✝ 1879)",
            saintBernardineOfSienaPriest:
              "Saint Bernardin de Sienne, Prêtre (✝ 1444)",
            saintBernardOfClairvauxAbbotAndDoctorOfTheChurch:
              "Saint Bernard de Clairvaux, Abbé, Docteur de l’Église (✝ 1153)",
            saintBlaseBishopAndMartyrSaintAnsgarBishop:
              "Saint Blaise de Sébaste, Évêque et Martyr (✝ 316), ou Saint Anschaire de Brême, Évêque (✝ 865)",
            saintBonaventureBishopAndDoctor:
              "Saint Bonaventure, Évêque d’Albano et Docteur de l’Église (✝ 1274)",
            saintBonifaceBishopAndMartyr:
              "Saint Boniface, Évêque et Martyr (✝ 754)",
            saintBridgetOfSwedenReligious:
              "Sainte Brigitte de Suède, Veuve puis Religieuse, Fondatrice de l’ordre du Saint-Sauveur, Copatronne de l’Europe (✝ 1373)",
            saintBrotherMutienMarieReligious:
              "Saint Mutien Marie Wiaux, Frère des Ecoles Chrétiennes (✝ 1917)",
            saintBrunoPriest:
              "Saint Bruno, Prêtre, Fondateur des Chartreux (✝ 1101)",
            saintCaesariusOfArlesBishop:
              "Saint Césaire d’Arles, Évêque, Père de l’Eglise (✝ 542)",
            saintCallistusIPopeAndMartyr:
              "Saint Calixte Ier, Pape et Martyr (✝ 222)",
            saintCamillusDeLellisPriest:
              "Saint Camille de Lellis, Prêtre (✝ 1614)",
            saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr:
              "Saint Camille de Lellis, Prêtre, ou Saint Henri, Évêque et Martyr",
            saintCasimir: "Saint Casimir (✝ 1484)",
            saintCatherineOfAlexandriaVirginAndMartyr:
              "Sainte Catherine d’Alexandrie, Vierge et Martyre (4ème s.)",
            saintCatherineOfSienaVirginAndDoctorOfTheChurch:
              "Sainte Catherine de Sienne, Vierge et Docteur de l’Eglise, Patronne de l’Europe (✝ 1380)",
            saintCeciliaVirginAndMartyr:
              "Sainte Cécile, Vierge et Martyre à Rome (✝ 230)",
            saintCharbelMakhloufPriestAndHermit:
              "Saint Charbel Makhlouf, Moine Prêtre Maronite (✝ 1898)",
            saintCharlesBorromeoBishop:
              "Saint Charles Borromée, Archevêque de Milan (✝ 1584)",
            saintChristopherMagallanesAndCompanionsMartyrs:
              "Saints Cristóbal Magallanes, Prêtre, et ses 24 compagnons, Martyrs Mexicains (✝ 1927)",
            saintClareVirgin: "Sainte Claire, Vierge",
            saintClementIPopeAndMartyrSaintColumbanReligious:
              "Saint Clément Ier, Pape et Martyr (✝ 97), ou Saint Colomban, Religieux (✝ 615)",
            saintClotilde: "Sainte Clotilde, Reine des Francs (✝ 545)",
            saintCyrilOfAlexandriaBishopAndDoctor:
              "Saint Cyrille, Évêque d’Alexandrie et Docteur de l’Église (✝ 444)",
            saintCyrilOfJerusalemBishopAndDoctor:
              "Saint Cyrille de Jérusalem, Évêque de Jérusalem, Docteur de l’Église (✝ 387)",
            saintDamasusIPope: "Saint Damase Ier, Pape (✝ 384)",
            saintDamienDeVeusterPriest:
              "Saint Père Damien, Prêtre et Missionnaire Picpus (✝ 1889)",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest:
              "Saint Denis, Évêque, et ses compagnons, martyrs à Paris (3ème s.), ou Saint Jean Léonardi, Prêtre (✝ 1609))",
            saintDominicPriest:
              "Saint Dominique de Guzman, Prêtre, Fondateur de l’Ordre des Frères prêcheurs (✝ 1221)",
            saintElizabethOfHungary: "Sainte Élisabeth de Hongrie (✝ 1231)",
            saintElizabethOfPortugal:
              "Sainte Elisabeth du Portugal, Reine (✝ 1336)",
            saintEphremDeaconAndDoctor:
              "Saint Ephrem, Diacre et Docteur de l’Église, (✝ 373)",
            saintEugeneDeMazenodBishop:
              "Saint Eugène de Mazenod, Fondateur des Oblats de Marie-Immaculée, Évêque de Marseille (✝ 1861)",
            saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest:
              "Saint Eusèbe de Verceil, Evêque (✝ 371), ou Saint Pierre-Julien Eymard, Prêtre, Fondateur des Pères du Saint-Sacrement (✝ 1868)",
            saintFidelisOfSigmaringenPriestAndMartyr:
              "Saint Fidèle de Sigmaringen, Prêtre et Martyr (✝ 1622)",
            saintFrancesOfRomeReligious:
              "Sainte Françoise Romaine, Religieuse (✝ 1440)",
            saintFrancisDeSalesBishopAndDoctor:
              "Saint François de Sales, Evêque de Genève et Docteur de l’Église (✝ 1622)",
            saintFrancisOfAssisi:
              "Saint François d’Assise, Fondateur de l’ordre des Frères mineurs (✝ 1226)",
            saintFrancisOfPaolaHermit:
              "Saint François de Paule, Ermite, Fondateur de l’ordre des Minimes (✝ 1507)",
            saintFrancisXavierPriest:
              "Saint François-Xavier, Prêtre, Jésuite Missionnaire (✝ 1552)",
            saintFrancoisDeLavalBishop:
              "Saint François de Laval, Premier évêque de Québec (✝ 1708)",
            saintGenevieveVirgin: "Sainte Geneviève, Vierge à Paris (✝ 500)",
            saintGeorgeMartyrSaintAdalbertBishopAndMartyr:
              "Saint Georges, Martyr (✝ 303) ou Saint Adalbert, Évêque de Prague et Martyr (✝ 997)",
            saintGertrudeOfNivellesVirgin:
              "Sainte Gertrude de Nivelles, Abbesse (✝ 659)",
            saintGregoryTheGreatPopeAndDoctor:
              "Saint Grégoire le Grand, Pape et Docteur de l’Église (✝ 604)",
            saintHedwigReligiousOrSaintMargaretMaryAlacoqueVirgin:
              "Sainte Edwige de Silésie, Veuve puis Religieuse (✝ 1243), ou Sainte Marguerite-Marie Alacoque, Visitandine à Paray-le-Monial (✝ 1690)",
            saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin:
              "Sainte Edwige de Silésie, Veuve puis Religieuse (✝ 1243), ou Sainte Marguerite-Marie Alacoque, Visitandine à Paray-le-Monial (✝ 1690)",
            saintHenryBishopAndMartyr:
              "Saint Henri, Empereur Germanique (✝ 1024)",
            saintHilaryOfPoitiersBishopAndDoctor:
              "Saint Hilaire de Poitiers, Évêque et Docteur de l’Église (✝ 367)",
            saintHubertBishop: "Saint Hubert, Évêque (✝ 727)",
            saintIgnatiusOfAntiochBishopAndMartyr:
              "Saint Ignace d’Antioche, Évêque et Martyr, Père et Docteur de l’Eglise (✝ 115)",
            saintIgnatiusOfLoyolaPriest:
              "Saint Ignace de Loyola, Prêtre, Fondateur de la Compagnie de Jésus (✝ 1556)",
            saintIrenaeusBishopAndMartyr:
              "Saint Irénée, Évêque et Martyr (✝ v. 201)",
            saintIsidoreOfSevilleBishopAndDoctorOfTheChurch:
              "Saint Isidore de Séville, Docteur de l’Eglise, Évêque et Confesseur (✝ 636)",
            saintIvoPriest:
              "Saint Yves Hélory, Prêtre et Juge en Bretagne (✝ 1303)",
            saintJamesApostle: "Saint Jacques le Majeur, Apôtre (✝ 44)",
            saintJaneFrancesDeChantalReligious:
              "Sainte Jeanne-Françoise de Chantal, Religieuse (✝ 1641)",
            saintJanuariusBishopAndMartyr:
              "Saint Janvier, Évêque de Bénévent et Martyr (✝ 305)",
            saintJeanVianneyTheCureOfArsPriest:
              "Saint Jean-Marie Vianney (Curé d’Ars), Prêtre (✝ 1859)",
            saintJeromeEmilianiSaintJosephineBakhitaVirgin:
              "Saint Jérôme Émilien, Fondateur (✝ 1537), ou Sainte Joséphine Bakhita, Vierge et Religieuse (✝ 1947)",
            saintJeromePriestAndDoctor:
              "Saint Jérôme, Père et Docteur de l’Église (✝ 420)",
            saintJoanOfArcVirginSecondaryPatronessOfFrance:
              "Sainte Jeanne d’Arc, Vierge, Patronne Secondaires de la France (✝ 1431)",
            saintJohnBaptistDeLaSallePriest:
              "Saint Jean-Baptiste de La Salle, Prêtre et Fondateur des Frères des Ecoles Chrétiennes (✝ 1719)",
            saintJohnBerchmansReligious:
              "Saint Jean Berchmans, Jésuite Belge (✝ 1621)",
            saintJohnBoscoPriest:
              "Saint Jean Bosco, Prêtre, Fondateur et Éducateur (✝ 1888)",
            saintJohnChrysostomBishopAndDoctor:
              "Saint Jean Chrysostome, Évêque de Constantinople et Docteur de l’Église (✝ 407)",
            saintJohnDamascenePriestAndDoctor:
              "Saint Jean Damascène, Prêtre et Docteur de l’Église (✝ 749)",
            saintJohnEudesPriest: "Saint Jean Eudes, Prêtre (✝ 1680)",
            saintJohnIPopeAndMartyr: "Saint Jean Ier, Pape et Martyr (✝ 526)",
            saintJohnOfCapistranoPriest:
              "Saint Jean de Capistran, Prêtre de l’Ordre des Mineurs (✝ 1456)",
            saintJohnOfGodReligious:
              "Saint Jean de Dieu, Religieux, Fondateur des Frères de la Charité (✝ 1550)",
            saintJohnOfKantyPriest: "Saint Jean de Kenty, Prêtre (✝ 1473)",
            saintJohnOfTheCrossPriestAndDoctor:
              "Saint Jean de la Croix, Prêtre et Docteur de l’Église (✝ 1591)",
            saintJohnTheApostleAndEvangelist:
              "Saint Jean, Apôtre et Évangéliste",
            saintJosaphatBishopAndMartyr:
              "Saint Josaphat Kuntsevych, Évêque Basilien et Martyr (✝ 1623)",
            saintJosephSpouseOfTheBlessedVirginMaryPrincipalPatronOfCanada:
              "Saint Joseph, Époux de la Bienheureuse Vierge Marie, Principal Patron du Canada",
            saintJosephTheWorker: "Saint Joseph, Artisan (1er s.)",
            saintJuanDiegoCuauhtlatoatzin:
              "Saint Juan Diego Cuauhtlatoatzin (✝ 1548)",
            saintJulianaOfLiegeVirgin:
              "Sainte Julienne de Cornillon, Religieuse Augustine (✝ 1258)",
            saintJulieBilliartVirgin:
              "Sainte Julie Billiart, Religieuse, Fondatrice de l’Institut des Sœurs de Notre-Dame (✝ 1816)",
            saintJustinMartyr: "Saint Justin, Martyr (✝ 165)",
            saintKateriTekakwithaVirgin:
              "Sainte Kateri Tekakwitha, Vierge Amérindienne (✝ 1680)",
            saintLambertBishopAndMartyr:
              "Saint Lambert, Évêque et Martyr (✝ 705)",
            saintLawrenceOfBrindisiPriestAndDoctor:
              "Saint Laurent de Brindisi, Prêtre et Docteur de l’Église (✝ 1619)",
            saintLawrenceOfRomeDeaconAndMartyr:
              "Saint Laurent de Rome, Diacre et Martyr (✝ 258)",
            saintLeoTheGreatPopeAndDoctor:
              "Saint Léon le Grand, Pape et Docteur de l’Église",
            saintLouisSaintJosephOfCalasanzPriest:
              "Saint Louis, Roi de France (✝ 1270), ou Saint Joseph de Calasanz, Prêtre (✝ 1648)",
            saintLucyOfSyracuseVirginAndMartyr:
              "Sainte Lucie de Syracuse, Vierge et Martyre en Sicile (✝ v. 305)",
            saintLukeTheEvangelist: "Saint Luc, Évangéliste",
            saintMargaretOfScotlandSaintGertrudeTheGreatVirgin:
              "Sainte Marguerite d’Ecosse (✝ 1093), ou Sainte Gertrude, Vierge Moniale (✝ 1301)",
            saintMargueriteBourgeoysVirgin:
              "Sainte Marguerite Bourgeoys, Religieuse, Fondatrice de la congrégation des Sœurs de Notre-Dame (✝ 1700)",
            saintMargueriteDYouvilleReligious:
              "Sainte Marguerite d’Youville, Religieuse, Fondatrice des Sœurs de la Charité de Montréal (✝ 1771)",
            saintMariaGorettiVirginAndMartyr:
              "Sainte Maria Goretti, Vierge et Martyre (✝ 1902)",
            saintMarieOfTheIncarnationReligious:
              "Sainte Marie de l’Incarnation, Ursuline au Canada (✝ 1672)",
            saintMarkTheEvangelist: "Saint Marc, Évangéliste",
            saintMartha: "Sainte Marthe, Disciple du Christ (1er s.)",
            saintMartinDePorresReligious:
              "Saint Martin de Porrès, Religieux Dominicain à Lima (✝ 1639)",
            saintMartinIPopeAndMartyr:
              "Saint Martin Ier, Pape et Martyr (✝ 656)",
            saintMartinOfToursBishop: "Saint Martin de Tours, Evêque (✝ 397)",
            saintMaryMagdalene:
              "Sainte Marie-Madeleine, Disciple du Christ (1er s.)",
            saintMatthewApostleAndEvangelist:
              "Saint Matthieu, Apôtre et Évangéliste",
            saintMatthiasTheApostle: "Saint Matthias, Apôtre",
            saintMaximilianMaryKolbePriestAndMartyr:
              "Saint Maximilien-Marie Kolbe, Prêtre et Martyr (✝ 1941)",
            saintMonica:
              "Sainte Monique, Mère de Saint Augustin d’Hippone (✝ 387)",
            saintNicholasBishop: "Saint Nicolas, Évêque de Myre (✝ v. 350)",
            saintNorbertBishop: "Saint Norbert, Évêque (✝ 1134)",
            saintPatrickBishop: "Saint Patrick, Évêque (✝ 461)",
            saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs:
              "Saint Paulin, Évêque (✝ 431), ou Saints Jean Fisher, Évêque, et Thomas More, Martyrs (✝ 1535)",
            saintPaulMikiAndCompanionsMartyrs:
              "Saints Paul Miki et ses compagnons, Martyrs au Japon (✝ 1597)",
            saintPeterCanisiusPriestAndDoctor:
              "Saint Pierre Canisius, Prêtre et Docteur de l’Église (✝ 1597)",
            saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest:
              "Saint Pierre Chanel, Prêtre et Martyr (✝ 1841), ou Saint Louis-Marie Grignion de Montfort, Prêtre (✝ 1716)",
            saintPeterChrysologusBishopAndDoctor:
              "Saint Pierre Chrysologue, Évêque de Ravenne et Docteur de l’Église (✝ 451)",
            saintPeterClaverPriest:
              "Saint Pierre Claver, Prêtre Jésuite (✝ 1654)",
            saintPeterDamianBishopAndDoctorOfTheChurch:
              "Saint Pierre Damien, Évêque d’Ostie, Docteur de l’Église (✝ 1072)",
            saintPhilipNeriPriest: "Saint Philippe Néri, Prêtre (✝ 1595)",
            saintPioOfPietrelcinaPadrePioPriest:
              "Saint Pio de Pietrelcina (Padre Pio), Prêtre Capucin (✝ 1968)",
            saintPiusVPope: "Saint Pie V, Pape (✝ 1572)",
            saintPiusXPope: "Saint Pie X, Pape (✝ 1914)",
            saintPolycarpBishopAndMartyr:
              "Saint Polycarpe, Évêque et Martyre (✝ 167)",
            saintPothinusBishopSaintBlAndinaVirginAndTheirCompanionsMartyrs:
              "Saint Pothin, Évêque, Sainte Blandine, Vierge, et leurs 46 compagnons, Martyrs à Lyon (✝ 177)",
            saintRaymondOfPenyafortPriest:
              "Saint Raymond de Peñafort, Prêtre (✝ 1275)",
            saintRemigiusBishop: "Saint Remi, Evêque de Reims (✝ 530)",
            saintRitaOfCascia:
              "Sainte Rita da Cascia, Veuve puis Religieuse (✝ 1456)",
            saintRobertBellarmineBishopAndDoctor:
              "Saint Robert Bellarmin, Jésuite, Évêque et Docteur de l’Eglise (✝ 1621)",
            saintRomualdAbbot:
              "Saint Romuald, Anachorète et Père des moines Camaldules (✝ 1027)",
            saintRoseOfLima: "Sainte Rose de Lima, Vierge (✝ 1617)",
            saintsAndrewZorardAndBenedictHermits:
              "Saints André Svorad († 1009) et Benoît Stojislav († 1012), Ermites",
            saintsAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Saints Augustin Zhao Rong et ses compagnons, Martyrs en Chine (entre 1648 et 1930)",
            saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors:
              "Saints Basile le Grand (✝ 379) et Grégoire de Naziance (✝ 390), Évêques et Docteurs de l’Église",
            saintsCharlesLwangaAndCompanionsMartyrs:
              "Saints Charles Lwanga et ses douze compagnons, Martyrs (✝ 618)",
            saintScholasticaVirgin:
              "Sainte Scolastique, Moniale, Sœur de Saint Benoît (✝ 543)",
            saintsCorneliusPopeAndCyprianBishopMartyrs:
              "Saints Martyrs Corneille, Pape, et Cyprien, Évêque (3ème s.)",
            saintsCosmasAndDamianMartyrs:
              "Saints Côme et Damien, Martyrs (3ème s.)",
            saintsCyrilMonkAndMethodiusBishop:
              "Saints Cyrille, Moine, et Méthode, Évêque, Apôtres des Slaves au 9ème siècle, Copatrons de l’Europe",
            saintsFabianPopeAndSebastianMartyrs:
              "Saint Fabien, Pape et Martyr (✝ 250), et Saint Sébastien, Martyr (✝ v. 284)",
            saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest:
              "Saint Sixte II, Pape, et ses Diacres, Martyrs (✝ 258), ou Saint Gaétan de Thienne, Prêtre (✝ 1547)",
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Saints Jean de Brébeuf, Isaac Jogues, Prêtres Jésuites, et leurs compagnons, Martyrs (17ème siècle), ou Saint Paul de la Croix, Prêtre (✝ 1776)",
            saintsJoachimAndAnne:
              "Saints Anne et Joachim, Mère et Père de la Vierge Marie (1er siècle)",
            saintsJohnDeBrebeufIsaacJoguesPriestsAndCompanionsMartyrsSecondaryPatronsOfCanada:
              "Saints Jean de Brébeuf, Isaac Jogues, Prêtres Jésuites, et leurs compagnons, Martyrs, Seconds Patrons du Canada (17ème siècle)",
            saintsMarcellinusAndPeterMartyrs:
              "Saints Martyrs Marcellin, Prêtre, et Pierre, Exorciste (✝ 304)",
            saintsMichaelGabrielAndRaphaelArchangels:
              "Saints Michel, Gabriel and Raphaël, Archanges",
            saintsNereusAndAchilleusMartyrsSaintPancrasMartyr:
              "Saints Nérée et Achillée, Martyrs à Rome (✝ v. 304), ou Saint Pancrace, Martyr à Rome (✝ v. 304)",
            saintsPerpetuaAndFelicityMartyrs:
              "Saintes Perpétue et Félicité, Martyres à Carthage (✝ 203)",
            saintsPhilipAndJamesApostles:
              "Saint Philippe et Saint Jacques le Mineur, Apôtres",
            saintsPontianPopeAndHippolytusPriestMartyrs:
              "Saints Pontien, Pape, et Hippolyte, Prêtre de Rome, Martyrs (✝ 235)",
            saintsSimonAndJudeApostles:
              "Saint Simon (le Zélote) et Saint Jude (Thaddée), Apôtres",
            saintStanislausBishopAndMartyr:
              "Saint Stanislas, Evêque de Cracovie, Martyr (✝ 1079)",
            saintStephenOfHungary: "Saint Etienne, Roi de Hongrie (✝ 1038)",
            saintStephenTheFirstMartyr:
              "Saint Étienne, Diacre et Premier Martyr (✝ 35)",
            saintsTimothyAndTitusBishops:
              "Saints Timothée et Tite, Évêques, Disciples et compagnons de Saint Paul (1er s.)",
            saintSylvesterIPope: "Saint Sylvestre Ier, Pape (✝ 335)",
            saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr:
              "Sainte Thérèse-Bénédicte de la Croix (Edith Stein), Carmélite, Martyr en Pologne, Copatronne de l’Europe (✝ 1942)",
            saintTeresaOfJesusVirginAndDoctorOfTheChurch:
              "Sainte Thérèse de Jésus (d’Avila), Vierge et Docteur de l’Église (✝ 1582)",
            saintThereseOfTheChildJesusVirginAndDoctor:
              "Sainte Thérèse de l’Enfant-Jésus, Vierge et Docteur de l’Église (✝ 1897)",
            saintThereseOfTheChildJesusVirginSecondaryPatronessOfFrance:
              "Sainte Thérèse de l’Enfant-Jésus, Docteur de l’Église, Seconde Patronne de la France (✝ 1897)",
            saintThomasAquinasPriestAndDoctor:
              "Saint Thomas d’Aquin, Frère prêcheur, Docteur de l’Eglise (✝ 1274)",
            saintThomasBecketBishopAndMartyr:
              "Saint Thomas Becket, Évêque et Martyr (✝ 1170)",
            saintThomasTheApostle: "Saint Thomas, Apôtre",
            saintTuribiusOfMogrovejoBishop:
              "Saint Alphonse Turibe de Mogrovejo, Évêque de Lima (✝ 1606)",
            saintVincentDeaconAndMartyr:
              "Saint Vincent, Diacre et Martyr (✝ 304)",
            saintVincentDePaulPriest:
              "Saint Vincent de Paul, Prêtre, Fondateur de la congrégation de la Mission et des Filles de la Charité (✝ 1660)",
            saintVincentFerrerPriest:
              "Saint Vincent Ferrier, Prêtre de l’Ordre des Prêcheurs (✝ 1419)",
            saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs:
              "Saint Venceslas, Martyr (✝ 929), ou Saints Laurent Ruiz et 15 compagnons, Martyrs à Nagasaki au Japon (✝ v. 1635)",
            sevenHolyFoundersOfTheServiteOrder:
              "Saint Alexis Falconieri et les fondateurs des Servites (✝ 1310)",
            shroveMonday: "Lundi gras",
            shroveTuesday: "Mardi gras",
            theBeheadingOfSaintJohnTheBaptistMartyr:
              "Martyre de Saint Jean-Baptiste",
            theMostHolyNameOfJesus: "Saint Nom de Jésus",
            visitationOfTheBlessedVirginMary: "Visitation de la Vierge Marie",
          },
        },
        On = {
          advent: {
            season: "Avvento",
            feria: "{{day}} della {{week}} settimana di Avvento",
            sunday: "{{week}} Domenica di Avvento",
          },
          christmastide: {
            season: "Natale",
            day: "{{day}} di Natale",
            octave: "{{count}} giorno dell'Ottava di Natale",
            sunday: "{{count}} Domenica di Natale",
          },
          epiphany: {
            season: "Epifania",
            before: "{{day}} prima dell'Epifania",
            after: "{{day}} dopo l'Epifania",
          },
          ordinaryTime: {
            season: "Tempo Ordinario",
            feria: "{{day}} della {{week}} settimana del Tempo Ordinario",
            sunday: "{{week}} Domenica del Tempo Ordinario",
          },
          lent: {
            season: "Quaresima",
            feria: "{{day}} della {{week}} settimana di Quaresima",
            sunday: "{{week}} Domenica di Quaresima",
            day_after_ash_wed: "{{day}} dopo Mercoledí delle Ceneri",
          },
          holyWeek: {
            season: "Settimana Santa",
            feria: "{{day}} della Settimana Santa",
          },
          eastertide: {
            season: "Pasqua",
            feria: "{{day}} della {{week}} settimana di Pasqua",
            sunday: "{{week}} Domenica di Pasqua",
            octave: "{{day}} di Pasqua",
          },
          celebrations: {
            allSaints: "Tutti i Santi",
            annunciation: "Annunciazione del Signore",
            ascension: "Ascensione del Signore",
            ashWednesday: "Mercoledí delle Ceneri",
            assumption: "Assunzione della Beata Vergine Maria",
            baptismOfTheLord: "Battesimo del Signore",
            birthOfJohnTheBaptist: "Nativitá di San Giovanni Battista",
            christmas: "Natale del Signore",
            christTheKing: "Cristo Re dell'universo",
            corpusChristi: "Santissimo Corpo e Sangue di Cristo",
            divineMercySunday: "2º Domenica di Pasqua / Divina Misericordia",
            easter: "Domenica di Pasqua",
            epiphany: "Epifania del Signore",
            goodFriday: "Venerdí Santo",
            holyFamily: "Santa Famiglia di Gesú, Maria e Giuseppe",
            holySaturday: "Sabato Santo / Vigilia di Pasqua",
            holyThursday: "Giovedí Santo",
            immaculateConception:
              "Immacolata Concezione della Beata Vergine Maria",
            immaculateHeartOfMary: "Cuore Immacolato della Beata Vergine Maria",
            josephHusbandOfMary:
              "San Giuseppe, sposo della Beata Vergine Maria",
            maryMotherOfGod: "Maria Santissima Madre di Dio",
            palmSunday: "Domenica delle Palme",
            pentecostSunday: "Domenica di Pentecoste",
            peterAndPaulApostles: "Santi Pietro e Paolo, apostoli",
            presentationOfTheLord: "Presentazione del Signore",
            sacredHeartOfJesus: "Sacratissimo Cuore di Gesù",
            theExaltationOfTheHolyCross: "Esaltazione della Santa Croce",
            transfiguration: "Trasfigurazione del Signore",
            trinitySunday: "Santissima Trinitá",
          },
          sanctoral: {
            allSouls: "Commemorazione di tutti i fedeli defunti",
            birthOfTheBlessedVirginMary: "Nativitá della Beata Vergine Maria",
            chairOfSaintPeterApostle: "Cattedra di San Pietro apostolo",
            conversionOfSaintPaulApostle: "Conversione di San Paolo apostolo",
            dedicationOfTheBasilicaOfSaintMaryMajor:
              "Dedicazione della Basilica di Santa Maria Maggiore",
            dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles:
              "Dedicazione delle Basiliche dei Santi Pietro e Paolo apostoli",
            dedicationOfTheLateranBasilica:
              "Dedicazione della basilica Lateranense",
            firstMartyrsOfTheChurchOfRome:
              "Santi Primi Martiri della Chiesa Romana",
            guardianAngels: "Santi Angeli Custodi",
            holyInnocentsMartyrs: "Santi Innocenti, martiri",
            holyNameOfTheBlessedVirginMary: "Santissimo Nome di Maria",
            maryMotherOfTheChurch: "Beata Vergine Maria Madre della Chiesa",
            ourLadyOfFatima: "Beata Vergine Maria di Fatima",
            ourLadyOfGuadalupe: "Beata Vergine Maria di Guadalupe",
            ourLadyOfLourdes: "Beata Vergine Maria di Lourdes",
            ourLadyOfMountCarmel: "Beata Vergine Maria del Carmelo",
            ourLadyOfSorrows: "Beata Vergine Maria Addolorata",
            ourLadyOfTheRosary: "Beata Vergine Maria del Rosario",
            popeSaintJohnPaulII: "San Giovanni Paolo II, papa",
            popeSaintJohnXXIII: "San Giovanni XXIII, papa",
            presentationOfTheBlessedVirginMary:
              "Presentazione della Beata Vergine Maria",
            queenshipOfBlessedVirginMary: "Beata Vergine Maria regina",
            saintAgathaVirginAndMartyr: "Sant'Agata, vergine e martire",
            saintAgnesVirginAndMartyr: "Sant'Agnese, vergine e martire",
            saintAlbertTheGreatBishopAndDoctor:
              "Sant'Alberto Magno, vescovo e dottore della Chiesa",
            saintAloysiusGonzagaReligious: "San Luigi Gonzaga, religioso",
            saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch:
              "Sant'Alfonso Maria de Liguori, vescovo e dottore della Chiesa",
            saintAmbroseBishopAndDoctor:
              "Sant'Ambrogio, vescovo e dottore della Chiesa",
            saintAndrewDungLacAndCompanionsMartyrs:
              "Santi Andrea Dung-Lac, sacerdote e compagni, martiri",
            saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs:
              "Sant Andrea Kim Taegon, Paolo Chong Hasang e compagni, martiri",
            saintAndrewTheApostle: "Sant'Andrea, apostolo",
            saintAngelaMericiVirgin: "Sant'Angela Merici, vergine",
            saintAnselmOfCanterburyBishopAndDoctorOfTheChurch:
              "Sant'Anselmo, vescovo e dottore della Chiesa",
            saintAnthonyMaryClaretBishop: "Sant'Antonio Marla Claret, vescovo",
            saintAnthonyOfEgyptAbbot: "Sant'Antonio, abate",
            saintAnthonyOfPaduaPriestAndDoctor:
              "Sant'Antonio di Padova, sacerdote e dottore della Chiesa",
            saintAnthonyZaccariaPriest:
              "Sant'Antonio Maria Zaccaria, sacerdote",
            saintApollinaris: "Sant'Apollinare, vescovo e martire",
            saintAthanasiusBishopAndDoctor:
              "Sant'Atanasio, vescovo e dottore della Chiesa",
            saintAugustineOfCanterburyBishop:
              "Sant'Agostino di Canterbury, vescovo",
            saintAugustineOfHippoBishopAndDoctorOfTheChurch:
              "Sant'Agostino, vescovo e dottore della Chiesa",
            saintBarnabasTheApostle: "San Barnaba, apostolo",
            saintBartholomewTheApostle: "San Bartolomeo, apostolo",
            saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin:
              "San Beda Venerabile, sacerdote e dottore della Chiesa / San Gregorio VII, papa / Santa Maria Maddalena de’ Pazzi, vergine",
            saintBenedictOfNursiaAbbot:
              "San Benedetto, abate, patrono d'Europa",
            saintBernardineOfSienaPriest: "San Bernardino da Siena, sacerdote",
            saintBernardOfClairvauxAbbotAndDoctorOfTheChurch:
              "San Bernardo, abate e dottore della Chiesa",
            saintBlaseBishopAndMartyrSaintAnsgarBishop:
              "San Biagio, vescovo e martire / Sant’Ansgario, vescovo",
            saintBonaventureBishopAndDoctor:
              "San Bonaventura, vescovo e dottore della Chiesa",
            saintBonifaceBishopAndMartyr: "San Bonifacio, vescovo e martire",
            saintBridgetOfSwedenReligious:
              "Santa Brigida, religiosa, patrona d'Europa",
            saintBrunoPriest: "San Bruno, sacerdote",
            saintCallistusIPopeAndMartyr: "San Callisto I, papa e martire",
            saintCamillusDeLellisPriest: "San Camillo de Lellis, sacerdote",
            saintCasimir: "San Casimiro",
            saintCatherineOfAlexandriaVirginAndMartyr:
              "Santa Caterina di Alessandria, vergine e martire",
            saintCatherineOfSienaVirginAndDoctorOfTheChurch:
              "Santa Caterina da Siena, vergine e dottore della Chiesa, patrona d'Italia e d'Europa",
            saintCeciliaVirginAndMartyr: "Santa Cecilia, vergine e martire",
            saintCharlesBorromeoBishop: "San Carlo Borromeo, vescovo",
            saintChristopherMagallanesAndCompanionsMartyrs:
              "Santi Cristoforo Magallanes, sacerdote, e compagni, martiri",
            saintClareVirgin: "Santa Chiara, vergine",
            saintClementIPopeAndMartyrSaintColumbanReligious:
              "San Clemente I, papa e martire / San Colombano, abate",
            saintCyrilOfAlexandriaBishopAndDoctor:
              "San Cirillo di Alessandria, vescovo e dottore della Chiesa",
            saintCyrilOfJerusalemBishopAndDoctor:
              "San Cirillo di Gerusalemme, vescovo e dottore della Chiesa",
            saintDamasusIPope: "San Damaso I, papa",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest:
              "San Dionigi, vescovo e compagni, martiri / San Giovanni Leonardi, sacerdote",
            saintDominicPriest: "San Domenico, sacerdote",
            saintElizabethOfHungary: "Sant'Elisabetta di Ungheria, religiosa",
            saintElizabethOfPortugal: "Santa Elisabetta di Portogallo",
            saintEphremDeaconAndDoctor:
              "Sant’Efrem, diacono e dottore della Chiesa",
            saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest:
              "Sant'Eusebio di Vercelli, vescovo / San Pietro Giuliano Eymard, sacerdote",
            saintFidelisOfSigmaringenPriestAndMartyr:
              "San Fedele da Sigmaringen, sacerdote e martire ",
            saintFrancesOfRomeReligious: "Santa Francesca Romana, religiosa",
            saintFrancisDeSalesBishopAndDoctor:
              "San Francesco di Sales, vescovo e dottore della Chiesa",
            saintFrancisOfAssisi: "San Francesco d'Assisi, patrono d'Italia",
            saintFrancisOfPaolaHermit: "San Francesco da Paola, eremita",
            saintFrancisXavierPriest: "San Francesco Saverio, sacerdote",
            saintGeorgeMartyrSaintAdalbertBishopAndMartyr:
              "San Giorgio, martire / Sant'Adalberto, vescovo e martire",
            saintGregoryTheGreatPopeAndDoctor:
              "San Gregorio Magno, papa e dottore della Chiesa",
            saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin:
              "Santa Edvige, religiosa / Santa Margherita Maria Alacoque, vergine",
            saintHenryBishopAndMartyr: "Sant'Enrico",
            saintHilaryOfPoitiersBishopAndDoctor:
              "Sant’Ilario, vescovo e dottore della Chiesa",
            saintIgnatiusOfAntiochBishopAndMartyr:
              "Sant'Ignazio di Antiochia, vescovo e martire",
            saintIgnatiusOfLoyolaPriest: "Sant'Ignazio di Loyola, sacerdote",
            saintIrenaeusBishopAndMartyr: "Sant'Ireneo, vescovo e martire",
            saintIsidoreOfSevilleBishopAndDoctorOfTheChurch:
              "Sant'Isidoro, vescovo e dottore della Chiesa",
            saintJamesApostle: "San Giacomo, apostolo",
            saintJaneFrancesDeChantalReligious:
              "Santa Giovanna Francesca de Chantal, religiosa",
            saintJanuariusBishopAndMartyr: "San Gennaro, vescovo e martire",
            saintJeanVianneyTheCureOfArsPriest:
              "San Giovanni Maria Vianney, sacerdote",
            saintJeromeEmilianiSaintJosephineBakhitaVirgin:
              "San Girolamo Emiliani / Santa Giuseppina Bakhita, vergine",
            saintJeromePriestAndDoctor:
              "San Girolamo, sacerdote e dottore della Chiesa",
            saintJohnBaptistDeLaSallePriest:
              "San Giovanni Battista de La Salle, sacerdote",
            saintJohnBoscoPriest: "San Giovanni Bosco, sacerdote",
            saintJohnChrysostomBishopAndDoctor:
              "San Giovanni Crisostomo, vescovo e dottore della Chiesa",
            saintJohnDamascenePriestAndDoctor:
              "San Giovanni Damasceno, sacerdote e dottore della Chiesa",
            saintJohnEudesPriest: "San Giovanni Eudes, sacerdote",
            saintJohnIPopeAndMartyr: "San Giovanni I, papa e martire",
            saintJohnOfCapistranoPriest:
              "San Giovanni da Capestrano, sacerdote",
            saintJohnOfGodReligious: "San Giovanni di Dio, religioso",
            saintJohnOfKantyPriest: "San Giovanni da Keti, sacerdote",
            saintJohnOfTheCrossPriestAndDoctor:
              "San Giovanni della Croce, sacerdote e dottore della Chiesa",
            saintJohnTheApostleAndEvangelist:
              "San Giovanni, apostolo ed evangelista",
            saintJosaphatBishopAndMartyr: "San Giosafat, vescovo e martire",
            saintJosephTheWorker: "San Giuseppe lavoratore",
            saintJuanDiegoCuauhtlatoatzin: "San Giovanni Diego Cuauhtlatoatzin",
            saintJustinMartyr: "San Giustino, martire",
            saintLawrenceOfBrindisiPriestAndDoctor:
              "San Lorenzo da Brindisi, sacerdote e dottore della Chiesa",
            saintLawrenceOfRomeDeaconAndMartyr:
              "San Lorenzo, diacono e martire",
            saintLeoTheGreatPopeAndDoctor:
              "San Leone Magno, papa e dottore della Chiesa",
            saintLouisSaintJosephOfCalasanzPriest:
              "San Ludovico / San Giuseppe Calasanzio, sacerdote",
            saintLucyOfSyracuseVirginAndMartyr:
              "Santa Lucia, vergine e martire",
            saintLukeTheEvangelist: "San Luca, evangelista",
            saintMargaretOfScotlandSaintGertrudeTheGreatVirgin:
              "Santa Margherita di Scozia / Santa Geltrude, vergine",
            saintMariaGorettiVirginAndMartyr:
              "Santa Maria Goretti, vergine e martire",
            saintMarkTheEvangelist: "San Marco, evangelista",
            saintMartha: "Santa Marta",
            saintMartinDePorresReligious: "San Martino di Porres, religioso",
            saintMartinIPopeAndMartyr: "San Martino I, papa e martire",
            saintMartinOfToursBishop: "San Martino di Tours, vescovo",
            saintMaryMagdalene: "Santa Maria Maddalena",
            saintMatthewApostleAndEvangelist:
              "San Matteo, apostolo ed evangelista",
            saintMatthiasTheApostle: "San Mattia, apostolo",
            saintMaximilianMaryKolbePriestAndMartyr:
              "San Massimiliano Maria Kolbe, sacerdote e martire",
            saintMonica: "Santa Monica",
            saintNicholasBishop: "San Nicola, vescovo",
            saintNorbertBishop: "San Norberto, vescovo",
            saintPatrickBishop: "San Patrizio, vescovo",
            saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs:
              "San Paolino di Nola, vescovo / Santi Giovanni Fisher, vescovo e Tommaso More, martiri",
            saintPaulMikiAndCompanionsMartyrs:
              "San Paolo Miki sacerdote e compagni, martiri",
            saintPeterCanisiusPriestAndDoctor:
              "San Pietro Canisio, sacerdote e dottore della Chiesa",
            saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest:
              "San Pietro Chanel, sacerdote e martire / San Luigi Maria Grignion de Montfort, sacerdote",
            saintPeterChrysologusBishopAndDoctor:
              "San Pietro Crisologo, vescovo e dottore della Chiesa",
            saintPeterClaverPriest: "San Pietro Claver, sacerdote",
            saintPeterDamianBishopAndDoctorOfTheChurch:
              "San Pier Damiani, vescovo e dottore della Chiesa",
            saintPhilipNeriPriest: "San Filippo Neri, sacerdote",
            saintPioOfPietrelcinaPadrePioPriest:
              "San Pio da Pietrelcina, sacerdote",
            saintPiusVPope: "San Pio V, papa",
            saintPiusXPope: "San Pio X, papa",
            saintPolycarpBishopAndMartyr: "San Policarpo, vescovo e martire",
            saintRaymondOfPenyafortPriest:
              "San Raimondo di Peñafort, sacerdote",
            saintRitaOfCascia: "Santa Rita da Cascia, religiosa",
            saintRobertBellarmineBishopAndDoctor:
              "San Roberto Bellarmino, vescovo e dottore della Chiesa",
            saintRomualdAbbot: "San Romualdo, abate",
            saintRoseOfLima: "Santa Rosa da Lima, vergine",
            saintsAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Santi Agostino Zhao Rong, sacerdote, e compagni, martiri",
            saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors:
              "Santi Basilio Magno e Gregorio Nazianzeno, vescovi e dottori della Chiesa",
            saintsCharlesLwangaAndCompanionsMartyrs:
              "San Carlo Lwanga e compagni, martiri",
            saintScholasticaVirgin: "Santa Scolastica, vergine",
            saintsCorneliusPopeAndCyprianBishopMartyrs:
              "Santi Cornelio, papa e Cipriano, vescovo, martiri",
            saintsCosmasAndDamianMartyrs: "Santi Cosma e Damiano, martiri",
            saintsCyrilMonkAndMethodiusBishop:
              "Santi Cirillo, monaco e Metodio, vescovo, patroni d'Europa",
            saintsFabianPopeAndSebastianMartyrs:
              "San Fabiano, papa, e San Sebastiano, martire",
            saintCharbelMakhloufPriestAndHermit:
              "San Charbel Makhluf, sacerdote",
            saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest:
              "San Sisto II, papa e compagni, martiri / San Gaetano, sacerdote",
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Santi Giovanni de Brébeuf e Isacco Jogues, sacerdoti e compagni, martiri / San Paolo della Croce, sacerdote",
            saintsJoachimAndAnne:
              "Santi Gioacchino e Anna, genitori della Beata Vergine Maria",
            saintsMarcellinusAndPeterMartyrs:
              "Santi Marcellino e Pietro, martiri",
            saintsMichaelGabrielAndRaphaelArchangels:
              "Santi Arcangeli Michele, Gabriele e Raffaele",
            saintsNereusAndAchilleusMartyrsSaintPancrasMartyr:
              "Santi Nereo e Achilleo, martiri / San Pancrazio, martire",
            saintsPerpetuaAndFelicityMartyrs:
              "Sante Perpetua e Felicita, martiri",
            saintsPhilipAndJamesApostles: "Santi Filippo e Giacomo, apostoli",
            saintsPontianPopeAndHippolytusPriestMartyrs:
              "Santi Ponziano, papa e Ippolito, sacerdote, martiri",
            saintsSimonAndJudeApostles: "Santi Simone e Giuda, apostoli",
            saintStanislausBishopAndMartyr:
              "Santo Stanislao, vescovo e martire",
            saintStephenOfHungary: "Santo Stefano di Ungheria",
            saintStephenTheFirstMartyr: "Santo Stefano, primo martire",
            saintsTimothyAndTitusBishops: "Santi Timoteo e Tito, vescovi",
            saintSylvesterIPope: "San Silvestro I, papa",
            saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr:
              "Santa Teresa Benedetta della Croce, vergine e martire, patrona d'Europa",
            saintTeresaOfJesusVirginAndDoctorOfTheChurch:
              "Santa Teresa d'Avila, vergine e dottore della Chiesa",
            saintThereseOfTheChildJesusVirginAndDoctor:
              "Santa Teresa di Gesu' Bambino, vergine e dottore della Chiesa",
            saintThomasAquinasPriestAndDoctor:
              "San Tommaso d'Aquino, sacerdote e dottore della Chiesa",
            saintThomasBecketBishopAndMartyr:
              "San Tommaso Becket, vescovo e martire",
            saintThomasTheApostle: "San Tommaso, apostolo",
            saintTuribiusOfMogrovejoBishop: "San Turibio de Mogrovejo, vescovo",
            saintVincentDeaconAndMartyr: "San Vincenzo, diacono e martire",
            saintVincentDePaulPriest: "San Vincenzo de' Paoli, sacerdote",
            saintVincentFerrerPriest: "San Vincenzo Ferrer, sacerdote",
            saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs:
              "San Venceslao, martire / Santi Lorenzo Ruiz e compagni, martiri",
            sevenHolyFoundersOfTheServiteOrder:
              "Santi Sette Fondatori dei Servi della Beata Vergine Maria",
            theBeheadingOfSaintJohnTheBaptistMartyr:
              "Martirio di San Giovanni Battista",
            theMostHolyNameOfJesus: "Santissimo Nome di Gesú",
            visitationOfTheBlessedVirginMary:
              "Visitazione della Beata Vergine Maria",
          },
        },
        Tn = {
          advent: {
            season: "Adwentu",
            feria: "{{day}} {{week}} tygodnia Adwentu",
            sunday: "{{week}} Niedziela Adwentu",
          },
          christmastide: {
            season: "Narodzenia Pańskiego",
            day: "{{day}} boże Narodzenie",
            octave: "{{count}} dzień w oktawie Narodzenia Pańskiego",
            sunday: "{{count}} Niedziela po Narodzeniu Pańskim",
          },
          epiphany: {
            season: "Objawienie Pańskie",
            before: "{{day}} przed Objawieniem Pańskim",
            after: "{{day}} po Objawieniu Pańskim",
          },
          ordinaryTime: {
            season: "Zwykła",
            feria: "{{day}} {{week}} tygodnia zwykłego",
            sunday: "{{week}} Niedziela zwykła",
          },
          lent: {
            season: "Postu",
            feria: "{{day}} {{week}} tygodnia Wielkiego Postu",
            sunday: "{{week}} Niedziela Wielkiego Postu",
            day_after_ash_wed: "{{day}} po Popielcu",
          },
          holyWeek: {
            season: "Wielki Tydzień",
            feria: "{{day}} wielkiego tygodnia",
          },
          eastertide: {
            season: "Wielkanoc",
            feria: "{{day}} {{week}} tygodnia wielkanocnego",
            sunday: "{{week}} Niedziela Wielkanocna",
            octave: "{{day}} w oktawie Wielkanocy",
          },
          celebrations: {
            allSaints: "Wszystkich Świętych",
            annunciation: "Zwiastowanie Pańskie",
            ascension: "Wniebowstąpienie Pańskie",
            ashWednesday: "Środa popielcowa",
            assumption: "Wniebowzięcie Najświętszej Maryi Panny",
            baptismOfTheLord: "Chrzest Pański",
            birthOfJohnTheBaptist: "Narodzenie św. Jana Chrzciciela",
            christmas: "Narodzenie Pańskie",
            christTheKing: "Jezusa Chrystusa Króla Wszechświata",
            corpusChristi: "Najświętszego Ciała i Krwi Chrystusa",
            divineMercySunday:
              "2 Niedziela Wielkanocna czyli Miłosierdzia Bożego",
            easter: "Niedziela Wielkanocna Zmartwychwstania Pańskiego",
            epiphany: "Objawienie Pańskie",
            goodFriday: "Wielki Piątek",
            holyFamily: "Świętej Rodziny Jezusa, Maryi i Józefa",
            holySaturday: "Wielka Sobota",
            holyThursday: "Wielki Czwartek",
            immaculateConception:
              "Niepokalane Poczęcie Najświętszej Maryi Panny",
            immaculateHeartOfMary:
              "Niepokalanego Serca Najświętszej Maryi Panny",
            josephHusbandOfMary:
              "Św. Józefa, Oblubieńca Najświętszej Maryi Panny",
            maryMotherOfGod: "Świętej Bożej Rodzicielki Maryi",
            palmSunday: "Niedziela Palmowa Męki Pańskiej",
            pentecostSunday: "Niedziela Zesłania Ducha Świętego",
            peterAndPaulApostles: "Świętych Apostołów Piotra i Pawła",
            presentationOfTheLord: "Ofiarowanie Pańskie",
            sacredHeartOfJesus: "Najświętszego Serca Pana Jezusa",
            theExaltationOfTheHolyCross: "Podwyższenie Krzyża Świętego",
            transfiguration: "Przemienienie Pańskie",
            trinitySunday: "Niedziela Najświętszej Trójcy",
          },
          sanctoral: {
            allSouls: "Wspomnienie wszystkich wiernych zmarłych",
            birthOfTheBlessedVirginMary: "Narodzenie Najświętszej Maryi Panny",
            blessedAnielaSalawaVirgin: "Bł. Anieli Salawy, dziewicy",
            blessedAntoniNowowiejskiBishopAndCompanionsMartyrs:
              "Błogosławionych męczenników Antoniego Juliana Nowowiejskiego, biskupa, i Towarzyszy",
            blessedBogumilBishop: "Bł. Bogumiła, biskupa",
            blessedBoleslawaMariaLamentVirginAndSaintAngelaMericiVirgin:
              "Bł. Bolesławy Marii Lament, dziewicy",
            blessedBronislawaVirgin: "Bł. Bronisławy, dziewicy",
            blessedCzeslawPriest: "Bł. Czesława, prezbitera",
            blessedEdmundBojanowski: "Bł. Edmunda Bojanowskiego",
            blessedHonoratKozminskiPriest:
              "Bł. Honorata Koźmińskiego, prezbitera",
            blessedJakubStrzemieBishop: "Bł. Jakuba Strzemię, biskupa",
            blessedJerzyMatulewiczBishop: "Bł. Jerzego Matulewicza, biskupa",
            blessedJohnBeyzymPriest: "Bł. Jana Beyzyma, prezbitera",
            blessedJohnMartinMoyePriest: "Bł. Jana Marcina Moyego, Kapłana",
            blessedJolantaReligious: "Bł. Jolanty, zakonnicy",
            blessedKarolinaKozkownaVirginAndMartyr:
              "Bł. Karoliny Kózkówny, dziewicy i męczennicy",
            blessedMariaAssuntaPallottaVirgin:
              "Bł. Marii Assunty Pallotty, Dziewicy",
            blessedMariaStellaAndCompanionsVirginsAndMartyrs:
              "Błogosławionych dziewic i męczennic Marii Stelli i Towarzyszek",
            blessedMariaTeresaLedochowskaVirgin:
              "Bł. Marii Teresy Ledóchowskiej, dziewicy",
            blessedMaryAngelaTruszkowskaVirgin:
              "Bł. Marii Angeli Truszkowskiej, dziewicy",
            blessedMaryOfJesusTheGoodShepherdVirgin:
              "Bł. Marii od Pana Jezusa Dobrego Pasterza (Franciszki Siedliskiej), zakonnicy",
            blessedMauriceTornayPriestAndMartyr:
              "Bł. Maurycego Tornaya, Kapłana i Męczennika",
            blessedMichaelKozalBishopAndMartyr:
              "Bł. Michała Kozala, biskupa i męczennika",
            blessedOdoricOfPordenonePriest: "Bł. Odoryka z Pordenone, Kapłana",
            blessedRafalChylinskiPriest: "Bł. Rafała Chylińskiego, prezbitera",
            blessedSalomeVirgin: "Bł. Salomei, zakonnicy",
            blessedVincentKadlubekBishop: "Bł. Wincentego Kadłubka, biskupa",
            blessedVincentLewoniukAndCompanionsMartyrsOfPratulin:
              "Błogosławionych męczenników Wincentego Lewoniuka i Towarzyszy",
            blessedWladyslawOfGielniowPriest:
              "Bł. Władysława z Gielniowa, prezbitera",
            chairOfSaintPeterApostle: "Katedry św. Piotra, Apostoła",
            conversionOfSaintPaulApostle: "Nawrócenie św. Pawła, Apostoła",
            dedicationOfTheBasilicaOfSaintMaryMajor:
              "Rocznica poświęcenia rzymskiej Bazyliki Najświętszej Maryi Panny",
            dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles:
              "Rocznica poświęcenia rzymskich bazylik świętych apostołów Piotra i Pawła",
            dedicationOfTheLateranBasilica:
              "Rocznica poświęcenia Bazyliki Laterańskiej",
            firstMartyrsOfTheChurchOfRome:
              "Świętych Pierwszych Męczenników Św. Kościoła Rzymskiego",
            guardianAngels: "Świętych Aniołów Stróżów",
            holyInnocentsMartyrs: "Św. Młodzianków, męczenników",
            holyNameOfTheBlessedVirginMary: "Najświętszego Imienia Maryi",
            maryMotherOfTheChurch: "Najświętszej Maryi Panny, Matki Kościoła",
            ourLadyOfChina: "Najświętszej Maryi Panny z Chin",
            ourLadyOfCzestochowa: "Najświętszej Maryi Panny Częstochowskiej",
            ourLadyOfFatima: "Najświętszej Maryi Panny z Fatimy",
            ourLadyOfGuadalupe: "Najświętszej Maryi Panny z Guadalupe",
            ourLadyOfLoreto: "Najświętszej Maryi Panny Loretańskiej",
            ourLadyOfLourdes: "Najświętszej Maryi Panny z Lourdes",
            ourLadyOfMountCarmel: "Najświętszej Maryi Panny z Góry Karmel",
            ourLadyOfSorrows: "Najświętszej Maryi Panny Bolesnej",
            ourLadyOfTheRosary: "Najświętszej Maryi Panny Różańcowej",
            ourLordJesusChristTheEternalHighPriest:
              "Jezusa Chrystusa, Najwyższego i Wiecznego Kapłana",
            popeSaintJohnPaulII: "Św. Jana Pawła II, papieża",
            popeSaintJohnXXIII: "Św. Jana XXIII, papieża",
            presentationOfTheBlessedVirginMary:
              "Ofiarowanie Najświętszej Maryi Panny",
            queenshipOfBlessedVirginMary: "Najświętszej Maryi Panny, Królowej",
            saintAdalbertBishopAndMartyr:
              "Św. Wojciecha, biskupa i męczennika, głównego patrona Polski",
            saintAgathaVirginAndMartyr: "Św. Agaty, dziewicy i męczennicy",
            saintAgnesCaoGuiyingMartyr: "Św. Agnieszki Cao Guiying, Męczennicy",
            saintAgnesVirginAndMartyr: "Św. Agnieszki, dziewicy i męczennicy",
            saintAlbericCrescitelliPriestAndMartyr:
              "Św. Alberyka Crescitellego, Kapłana i Męczennika",
            saintAlbertChmielowskiReligious:
              "Św. Brata Alberta Chmielowskiego, zakonnika",
            saintAlbertTheGreatBishopAndDoctor:
              "Św. Alberta Wielkiego, biskupa i doktora Kościoła",
            saintAloysiusGonzagaReligious: "Św. Alojzego Gonzagi, zakonnika",
            saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch:
              "Św. Alfonsa Marii Liguoriego, biskupa i doktora Kościoła",
            saintAmbroseBishopAndDoctor:
              "Św. Ambrożego, biskupa i doktora Kościoła",
            saintAndrewBobolaPriestAndMartyr:
              "Św. Andrzeja Boboli, prezbitera i męczennika",
            saintAndrewDungLacAndCompanionsMartyrs:
              "Świętych męczenników Andrzeja Dung-Lac, prezbitera, i Towarzyszy",
            saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs:
              "Świętych męczenników Andrzeja Kim Taegon, prezbitera, Pawła Chong Hasang i Towarzyszy",
            saintAndrewTheApostle: "Św. Andrzeja, Apostoła",
            saintAngelaMericiVirgin: "Św. Anieli Merici, dziewicy",
            saintAnselmOfCanterburyBishopAndDoctorOfTheChurch:
              "Św. Anzelma, biskupa i doktora Kościoła",
            saintAnthonyMaryClaretBishop:
              "Św. Antoniego Marii Clareta, biskupa",
            saintAnthonyOfEgyptAbbot: "Św. Antoniego, opata",
            saintAnthonyOfPaduaPriestAndDoctor:
              "Św. Antoniego z Padwy, prezbitera i doktora Kościoła",
            saintAnthonyZaccariaPriest:
              "Św. Antoniego Marii Zaccarii, prezbitera",
            saintApollinaris: "Św. Apolinarego, biskupa i męczennika",
            saintAthanasiusBishopAndDoctor:
              "Św. Atanazego, biskupa i doktora Kościoła",
            saintAugustineOfCanterburyBishop:
              "Św. Augustyna z Canterbury, biskupa",
            saintAugustineOfHippoBishopAndDoctorOfTheChurch:
              "Św. Augustyna, biskupa i doktora Kościoła",
            saintAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Świętych męczenników Augustyna Zhao Rong, Kapłana i Towarzyszy",
            saintAugustineZhaoRongPriestAndMartyr:
              "Św. Augustyna Zhao Rong, Kapłana i Męczennika",
            saintBarbaraVirginAndMartyr: "Św. Barbary, dziewicy i męczennicy",
            saintBarnabasTheApostle: "Św. Barnaby, Apostoła",
            saintBartholomewTheApostle: "Św. Bartłomieja, Apostoła",
            saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin:
              "Św. Bedy Czcigodnego, prezbitera i doktora Kościoła/Św. Grzegorza VII, papieża/Św. Marii Magdaleny de Pazzi, dziewicy",
            saintBenedictOfNursiaAbbot: "Św. Benedykta, opata, patrona Europy",
            saintBernardineOfSienaPriest: "Św. Bernardyna ze Sieny, prezbitera",
            saintBernardOfClairvauxAbbotAndDoctorOfTheChurch:
              "Św. Bernarda, opata i doktora Kościoła",
            saintBlaseBishopAndMartyrSaintAnsgarBishop:
              "Św. Błażeja, biskupa i męczennika/Św. Ansgara, biskupa",
            saintBonaventureBishopAndDoctor:
              "Św. Bonawentury, biskupa i doktora Kościoła",
            saintBonifaceBishopAndMartyr:
              "Św. Bonifacego, biskupa i męczennika",
            saintBridgetOfSwedenReligious:
              "Św. Brygidy, zakonnicy, patronki Europy",
            saintBrunoBonifaceOfQuerfurtBishopAndMartyr:
              "Św. Brunona Bonifacego z Kwerfurtu, biskupa i męczennika",
            saintBrunoPriest: "Św. Brunona, prezbitera",
            saintCallistusIPopeAndMartyr:
              "Św. Kaliksta I, papieża i męczennika",
            saintCamillusDeLellisPriest: "Św. Kamila de Lellis, prezbitera",
            saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr:
              "Św. Kamila de Lellis, prezbitera/Św. Henryka",
            saintCasimir: "Św. Kazimierza",
            saintCatherineOfAlexandriaVirginAndMartyr:
              "Św. Katarzyny Aleksandryjskiej, dziewicy i męczennicy",
            saintCatherineOfSienaVirginAndDoctorOfTheChurch:
              "Św. Katarzyny Sieneńskiej, dziewicy i doktora Kościoła, patronki Europye",
            saintCeciliaVirginAndMartyr: "Św. Cecylii, dziewicy i męczennicy",
            saintCharbelMakhloufPriestAndHermit:
              "Św. Sarbeliusza Makluf, prezbitera",
            saintCharlesBorromeoBishop: "Św. Karola Boromeusza, biskupa",
            saintChristopherMagallanesAndCompanionsMartyrs:
              "Świętych męczenników Krzysztofa Magallanesa, prezbitera, i Towarzyszy",
            saintClareVirgin: "Św. Klary, dziewicy",
            saintClementIPopeAndMartyrSaintColumbanReligious:
              "Św. Klemensa I, papieża i męczennika/Św. Kolumbana, zakonnika",
            saintCyrilOfAlexandriaBishopAndDoctor:
              "Św. Cyryla Aleksandryjskiego, biskupa i doktora Kościoła",
            saintCyrilOfJerusalemBishopAndDoctor:
              "Św. Cyryla Jerozolimskiego, biskupa i doktora Kościoła",
            saintDamasusIPope: "Św. Damazego I, papieża",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest:
              "Świętych męczenników Dionizego, biskupa, i Towarzyszy/Św. Jana Leonardiego, prezbitera",
            saintDominicPriest: "Św. Dominika, prezbitera",
            saintElizabethOfHungary: "Św. Elżbiety Węgierskiej, zakonnicy",
            saintElizabethOfPortugal: "Św. Elżbiety Portugalskiej",
            saintEphremDeaconAndDoctor:
              "Św. Efrema, diakona i doktora Kościoła",
            saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest:
              "Św. Euzebiusza z Vercelii, biskupa/Św. Piotra Juliani Eymarda, prezbitera",
            saintFaustinaKowalskaVirginAndReligious:
              "Św. Faustyny Kowalskiej, dziewicy",
            saintFidelisOfSigmaringenPriestAndMartyr:
              "Św. Fidelisa z Sigmaringen, prezbitera i męczennika",
            saintFlorianMartyr: "Św. Floriana, męczennika",
            saintFrancesOfRomeReligious: "Św. Franciszki Rzymianki, zakonnicy",
            saintFrancisDeSalesBishopAndDoctor:
              "Św. Franciszka Salezego, biskupa i doktora Kościoła",
            saintFrancisDiazPriestAndCompanionsMartyrs:
              "Świętych męczenników Franciszka Diaza, Kapłana i Towarzyszy",
            saintFrancisFernandezDeCapillasPriestAndMartyr:
              "Św. Franciszka Fernandeza de Capillas, Kapłana i Męczennika",
            saintFrancisOfAssisi: "Św. Franciszka z Asyżu",
            saintFrancisOfPaolaHermit: "Św. Franciszka z Paoli, pustelnika",
            saintFrancisXavierPriest: "Św. Franciszka Ksawerego, prezbitera",
            saintGabrieltaurinDufresseBishopAndMartyr:
              "Św. Gabriel-Taurina Dufresse, Biskupa i Męczennika",
            saintGeorgeMartyrSaintAdalbertBishopAndMartyr:
              "Św. Grzegorza, męczennika/Św. Wojciecha, biskupa i męczennika",
            saintGregoryTheGreatPopeAndDoctor:
              "Św. Grzegorza Wielkiego, papieża i doktora Kościoła",
            saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin:
              "Św. Jadwigi Śląskiej/Św. Małgorzaty Marii Alacoque, dziewicy",
            saintHenryBishopAndMartyr: "Św. Henryka, cesarza",
            saintHilaryOfPoitiersBishopAndDoctor:
              "Św. Hilarego, biskupa i doktora Kościoła",
            saintHyacinthPriest: "Św. Jacka, prezbitera",
            saintIgnatiusOfAntiochBishopAndMartyr:
              "Św. Ignacego Antiocheńskiego, biskupa i męczennika",
            saintIgnatiusOfLoyolaPriest: "Św. Ignacego z Loyoli, prezbitera",
            saintIrenaeusBishopAndMartyr: "Św. Ireneusza, biskupa i męczennika",
            saintIsidoreOfSevilleBishopAndDoctorOfTheChurch:
              "Św. Izydora, biskupa i doktora Kościoła",
            saintJamesApostle: "Św. Jakuba, Apostoła",
            saintJaneFrancesDeChantalReligious:
              "Św. Joanny Franciszki de Chantal, zakonnicy",
            saintJanuariusBishopAndMartyr:
              "Św. Januarego, biskupa i męczennika",
            saintJeanVianneyTheCureOfArsPriest:
              "Św. Jana Marii Vianneya, prezbitera",
            saintJeromeEmilianiSaintJosephineBakhitaVirgin:
              "Św. Hieronima Emilianiego/Św. Józefiny Bakhity, dziewicy",
            saintJeromePriestAndDoctor:
              "Św. Hieronima, prezbitera i doktora Kościoła",
            saintJoachimHoMartyr: "Św. Joachima Ho, Męczennika",
            saintJohnBaptistDeLaSallePriest:
              "Św. Jana Chrzciciela de la Salle, prezbitera",
            saintJohnBoscoPriest: "Św. Jana Bosko, prezbitera",
            saintJohnChrysostomBishopAndDoctor:
              "Św. Jana Chryzostoma, biskupa i doktora Kościoła",
            saintJohnDamascenePriestAndDoctor:
              "Św. Jana Damasceńskiego, prezbitera i doktora Kościoła",
            saintJohnEudesPriest: "Św. Jana Eudesa, prezbitera",
            saintJohnGabrielPerboyrePriestAndMartyr:
              "Św. Jana Gabriela Perboyre'a, Kapłana i Męczennika",
            saintJohnIPopeAndMartyr: "Św. Jana I, papieża i męczennika",
            saintJohnOfCapistranoPriest: "Św. Jana Kapistrana, prezbitera",
            saintJohnOfDuklaPriest: "Św. Jana z Dukli, prezbitera",
            saintJohnOfGodReligious: "Św. Jana Bożego, zakonnika",
            saintJohnOfKantyPriest: "Św. Jana Kantego, prezbitera",
            saintJohnOfTheCrossPriestAndDoctor:
              "Św. Jana od Krzyża, prezbitera i doktora Kościoła",
            saintJohnOfTrioraPriestAndMartyr:
              "Św. Jana z Triory, Kapłana i Męczennika",
            saintJohnSarkanderPriestAndMartyrSaintZdzislawa:
              "Św. Jana Sarkandra, prezbitera i męczennika/Św. Zdzisławy",
            saintJohnTheApostleAndEvangelist:
              "Św. Jana, Apostoła i Ewangelisty",
            saintJosaphatBishopAndMartyr: "Św. Jozafata, biskupa i męczennika",
            saintJosefBilczewskiBishop: "Św. Józefa Bilczewskiego, biskupa",
            saintJosephTheWorker: "Św. Józefa, rzemieślnika",
            saintJosephYuanPriestAndMartyr:
              "Św. Józefa Yuana, Kapłana i Męczennika",
            saintJosephZhangDapengMartyr:
              "Św. Józefa Zhang Dapenga, Męczennika",
            saintJuanDiegoCuauhtlatoatzin: "Św. Jana Diego Cuahtlatoatzin",
            saintJustinMartyr: "Św. Justyna, męczennika",
            saintKingaVirgin: "Św. Kingi, dziewicy",
            saintLaurenceWangBingAndCompanionsMartyrsSaintJosephFreinademetzPriest:
              "Świętych męczenników Wawrzyńca Wang Binga i Towarzyszy albo Św. Józefa Freinademetza, Kapłana",
            saintLawrenceBaiXiaomanMartyr:
              "Św. Wawrzyńa Bai Xiaomana, Męczennika",
            saintLawrenceOfBrindisiPriestAndDoctor:
              "Św. Wawrzyńca z Brindisi, prezbitera i doktora Kościoła",
            saintLawrenceOfRomeDeaconAndMartyr:
              "Św. Wawrzyńca, diakona i męczennika",
            saintLeoManginPriestAndCompanionsMartyrs:
              "Świętych męczenników Leona Mangina, Kapłana i Towarzyszy",
            saintLeoTheGreatPopeAndDoctor:
              "Św. Leona Wielkiego, papieża i doktora Kościoła",
            saintLouisSaintJosephOfCalasanzPriest:
              "Św. Ludwika/Św. Józefa Kalasantego, prezbitera",
            saintLucyOfSyracuseVirginAndMartyr:
              "Św. Łucji, dziewicy i męczennicy",
            saintLucyYiZhenmeiVirginAndMartyr:
              "Św. Łucji Yi Zhenmei, Dziewicy i Męcznnicy",
            saintLukeTheEvangelist: "Św. Łukasza, Ewangelisty",
            saintMargaretOfScotlandSaintGertrudeTheGreatVirgin:
              "Św. Małgorzaty Szkockiej/Św. Gertrudy, dziewicy",
            saintMariaGorettiVirginAndMartyr:
              "Św. Marii Goretti, dziewicy i męczennicy",
            saintMarkTheEvangelist: "Św. Marka, Ewangelisty",
            saintMartha: "Św. Marty",
            saintMartinDePorresReligious: "Św. Marcina de Porres, zakonnika",
            saintMartinIPopeAndMartyr: "Św. Marcina I, papieża i męczennika",
            saintMartinOfToursBishop: "Św. Marcina z Tours, biskupa",
            saintMartinWuXueshengAndCompanionsMartyrs:
              "Świętych męczenników Marcina Wu Xueshenga i Towarzyszy",
            saintMaryMagdalene: "Św. Marii Magdaleny",
            saintMatthewApostleAndEvangelist:
              "Św. Mateusza, Apostoła i Ewangelisty",
            saintMatthiasTheApostle: "Św. Macieja, Apostoła",
            saintMaximilianMaryKolbePriestAndMartyr:
              "Św. Maksymiliana Marii Kolbego, prezbitera i męczennika",
            saintMelchiorGrodzieckiPriestAndMartyr:
              "Św. Melchiora Grodzieckiego, prezbitera i męczennika",
            saintMonica: "Św. Moniki",
            saintNicholasBishop: "Św. Mikołaja, biskupa",
            saintNorbertBishop: "Św. Norberta, biskupa",
            saintOttoOfBambergBishop: "Św. Ottona, biskupa",
            saintPatrickBishop: "Św. Patryka, biskupa",
            saintPaulChenChangpinAndCompanionsMartyrs:
              "Świętych męczenników Pawła Chen Changpina i Towarzyszy",
            saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs:
              "Św. Paulina z Noli, biskupa/Świętych męczenników Jana Fishera, biskupa i Tomasza More’a",
            saintPaulLiuHanzouPriestAndMartyr:
              "Św. Pawła Liu Hanzou, Kapłana i Męczennika",
            saintPaulMikiAndCompanionsMartyrs:
              "Świętych męczenników Pawła Miki i Towarzyszy",
            saintPeterCanisiusPriestAndDoctor:
              "Św. Piotra Kanizjusza, prezbitera i doktora Kościoła",
            saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest:
              "Św. Piotra Chanela, prezbitera i męczennika/Św. Ludwika Marii Grignion de Montfort, prezbitera",
            saintPeterChrysologusBishopAndDoctor:
              "Św. Piotra Chryzologa, biskupa i doktora Kościoła",
            saintPeterClaverPriest: "Św. Piotra Klawera, prezbitera",
            saintPeterDamianBishopAndDoctorOfTheChurch:
              "Św. Piotra Damianiego, biskupa i doktora Kościoła",
            saintPeterLiuMartyr: "Św. Piotra Liu, Męczennika",
            saintPeterSanzBishopAndMartyr:
              "Św. Piotra Sanza, Biskupa i Męczennika",
            saintPeterWuMartyr: "Św. Piotra Wu, Męczennika",
            saintPhilipNeriPriest: "Św. Filipa Nereusza, prezbitera",
            saintPioOfPietrelcinaPadrePioPriest:
              "Św. Pio z Pietrelciny, prezbitera",
            saintPiusVPope: "Św. Piusa V, papieża",
            saintPiusXPope: "Św. Piusa X, papieża",
            saintPolycarpBishopAndMartyr: "Św. Polikarpa, biskupa i męczennika",
            saintRafalKalinowskiPriest: "Św. Rafała Kalinowskiego, prezbiterat",
            saintRaymondOfPenyafortPriest:
              "Św. Rajmunda z Penyafort, prezbitera",
            saintRitaOfCascia: "Św. Rity z Cascii, zakonnicy",
            saintRobertBellarmineBishopAndDoctor:
              "Św. Roberta Bellarmina, biskupa i doktora Kościoła",
            saintRomualdAbbot: "Św. Romualda, opata",
            saintRoseOfLima: "Św. Róży z Limy, dziewicy",
            saintsAndrewZorardAndBenedictHermits:
              "Świętych pustelników Andrzeja Świerada i Benedykta",
            saintsAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Świętych męczenników Augustyna Zhao Rong, prezbitera, i Towarzyszy",
            saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors:
              "Świętych Bazylego Wielkiego i Grzegorza z Nazjanzu, biskupów i doktorów Kościoła",
            saintsBenedyktJanMateuszIsaakAndKrystynMartyrs:
              "Świętych Benedykta, Jana, Mateusza, Izaaka i Krystyna, pierwszych męczenników Polski",
            saintsCharlesLwangaAndCompanionsMartyrs:
              "Świętych męczenników Karola Lwangi i Towarzyszy",
            saintScholasticaVirgin: "Św. Scholastyki, dziewicy",
            saintsCorneliusPopeAndCyprianBishopMartyrs:
              "Świętych męczenników Korneliusza, papieża, i Cypriana, biskupa",
            saintsCosmasAndDamianMartyrs:
              "Świętych męczenników Kosmy i Damiana",
            saintsCyrilMonkAndMethodiusBishop:
              "Świętych Cyryla, mnicha i Metodego, biskupa, patronów Europy",
            saintsFabianPopeAndSebastianMartyrs:
              "Św. Fabiana, papieża i męczennika/Św. Sebastiana, męczennika",
            saintsGregoryGrassiFrancisFogollaAndAnthonyFantosatiBishopsAndCompanionsMartyrs:
              "Świętych męczenników Grzegorza Grassiego, Franciszka Fogolli i Antoniego Fantosatiego, Biskupów i Towarzyszy",
            saintSimonOfLipnicaPriest: "Św. Szymona z Lipnicy, prezbitera",
            saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest:
              "Świętych męczenników Sykstusa II, papieża, i Towarzyszy/Św. Kajetana, prezbitera",
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Świętych męczenników Jana de Brebeuf, Izaaka Jogues’a, prezbiterów oraz Towarzyszy/Św. Pawła od Krzyża, prezbitera",
            saintsJoachimAndAnne: "Świętych Rodziców NMP Joachima i Anny",
            saintsLouisVersigliaBishopAndCallistusCaravarioPriestMartyrs:
              "Świętych Alojzego Versiglii, Biskupa i Kaliksta Caravaria, Kapłana",
            saintsMarcellinusAndPeterMartyrs:
              "Świętych męczenników Marcelina i Piotra",
            saintsMichaelGabrielAndRaphaelArchangels:
              "Świętych Archaniołów Michała, Gabriela i Rafała",
            saintsNereusAndAchilleusMartyrsSaintPancrasMartyr:
              "Świętych męczenników Nereusza i Achillesa/Św. Pankracego, męczennika",
            saintsPerpetuaAndFelicityMartyrs:
              "Świętych męczennic Perpetuy i Felicyty",
            saintsPhilipAndJamesApostles: "Świętych Apostołów Filipa i Jakuba",
            saintsPontianPopeAndHippolytusPriestMartyrs:
              "Świętych męczenników Poncjana, papieża i Hipolita, prezbiteras",
            saintsSimonAndJudeApostles:
              "Świętych Apostołów Szymona i Judy Tadeusza",
            saintStanislausBishopAndMartyr:
              "Św. Stanisława, biskupa i męczennika, głównego patrona Polski",
            saintStanislausKazimierczykPriest:
              "Św. Stanisława Kazimierczyka, prezbitera",
            saintStanislausKostkaReligious:
              "Św. Stanisława Kostki, zakonnika, patrona Polski",
            saintStephenOfHungary: "Św. Stefana Węgierskiego",
            saintStephenTheFirstMartyr: "Św. Szczepana, pierwszego męczennika",
            saintsTimothyAndTitusBishops:
              "Świętych biskupów Tymoteusza i Tytusa",
            saintSylvesterIPope: "Św. Sylwestra I, papieża",
            saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr:
              "Św. Teresy Benedykty od Krzyża, dziewicy i męczennicy, patronki Europy",
            saintTeresaOfJesusVirginAndDoctorOfTheChurch:
              "Św. Teresy od Jezusa, dziewicy i doktora Kościoła",
            saintThereseOfTheChildJesusVirginAndDoctor:
              "Św. Teresy od Dzieciątka Jezus, dziewicy i doktora Kościoła",
            saintThomasAquinasPriestAndDoctor:
              "Św. Tomasza z Akwinu, prezbitera i doktora Kościoła",
            saintThomasBecketBishopAndMartyr:
              "Św. Tomasza Becketa, biskupa i męczennika",
            saintThomasTheApostle: "Św. Tomasza, Apostoła",
            saintTuribiusOfMogrovejoBishop:
              "Św. Turybiusza z Mongrovejo, biskupa",
            saintUrsulaLedochowskaVirgin: "Św. Urszuli Ledóchowskiej, dziewicy",
            saintVincentDeaconAndMartyr: "Św. Wincentego, diakona i męczennika",
            saintVincentDePaulPriest: "Św. Wincentego à Paulo, prezbitera",
            saintVincentFerrerPriest: "Św. Wincentego Ferreriusza, prezbitera",
            saintVincentPallottiPriest:
              "Św. Wincentego Pallottiego, prezbitera",
            saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs:
              "Św. Wacława, męczennika/Świętych męczenników Wawrzyńca Ruiz i Towarzyszy",
            saintZygmuntGorazdowskiPriest:
              "Św. Zygmunta Gorazdowskiego, prezbitera",
            saintZygmuntSzczesnyFelinskiBishop:
              "Św. Zygmunta Szczęsnego Felińskiego, biskupa",
            sevenHolyFoundersOfTheServiteOrder:
              "Świętych siedmiu założycieli Zakonu Serwitów Najświętszej Maryi Panny",
            sevenMartyredNunsFromTheFranciscanMissionariesOfMary:
              "Siedmiu męcznnic ze Zgromadzenia Franciszkanek Misjonarek Maryi",
            theBeheadingOfSaintJohnTheBaptistMartyr:
              "Męczeństwo św. Jana Chrzciciela",
            theMostHolyNameOfJesus: "Najświętszego Imienia Jezus",
            visitationOfTheBlessedVirginMary:
              "Nawiedzenie Najświętszej Maryi Panny",
          },
        },
        vn = {
          advent: {
            season: "Adventné obdobie",
            feria: "{{day}} po {{week}}. adventnej nedeli",
            sunday: "{{week}} adventná nedeľa",
          },
          christmastide: {
            season: "Vianočné obdobie",
            day: "{{day}} vo Vianočnom období",
            octave: "{{count}} deň v oktáve narodenia Pána",
            sunday: "{{count}} nedeľa po narodení Pána",
          },
          epiphany: {
            season: "Zjavenie Pána",
            before: "{{day}} vo vianočnom období",
            after: "{{day}} po Zjavení Pána",
          },
          ordinaryTime: {
            season: "Cezročné obdobie",
            feria: "{{day}} {{week}} týždňa v Cezročnom období",
            sunday: "{{week}} nedeľa v Cezročnom období",
          },
          lent: {
            season: "Pôstne obdobie",
            feria: "{{day}} po {{week}}. pôstnej nedeli",
            sunday: "{{week}} pôstna nedeľa",
            day_after_ash_wed: "{{day}} po Popolcovej strede",
          },
          holyWeek: { season: "Veľký týždeň", feria: "{{day}} Veľkého týždňa" },
          eastertide: {
            season: "Veľkonočné obdobie",
            feria: "{{day}} po {{week}} veľkonočnej nedeli",
            sunday: "{{week}} veľkonočná nedeľa",
            octave: "Veľkonočný {{day}}",
          },
          celebrations: {
            allSaints: "Všetkých svätých",
            annunciation: "Zvestovanie Pána",
            ascension: "Nanebovstúpenie Pána",
            ashWednesday: "Popolcová streda",
            assumption: "Nanebovzatie Panny Márie",
            baptismOfTheLord: "Krst Krista Pána",
            birthOfJohnTheBaptist: "Narodenie svätého Jána Krstiteľa",
            christmas: "Narodenie Pána",
            christTheKing: "Krista Kráľa",
            corpusChristi: "Najsvätejšieho Kristovho Tela a Krvi",
            divineMercySunday: "Nedeľa Božieho milosrdenstva",
            easter: "Nedeľa Pánovho zmŕtvychvstania",
            epiphany: "Zjavenie Pána",
            goodFriday: "Veľký piatok",
            guardianAngelOfPortugal: "Anjela strážcu Portugalska",
            holyFamily: "Svätej rodiny Ježiša, Márie a Jozefa",
            holySaturday: "Biela sobota",
            holyThursday: "Zelený štvrtok",
            immaculateConception: "Nepoškvrnené počatie Panny Márie",
            immaculateHeartOfMary: "Nepoškvrneného Srdca Panny Márie",
            josephHusbandOfMary: "Svätého Jozefa, ženícha Panny Márie",
            maryMotherOfGod: "Panny Márie Bohorodičky",
            palmSunday: "Kvetná nedeľa",
            pentecostSunday: "Zoslanie Ducha Svätého",
            peterAndPaulApostles: "Svätých Petra a Pavla, apoštolov",
            presentationOfTheLord: "Obetovanie Pána",
            sacredHeartOfJesus: "Najsvätejšieho Srdca Ježišovho",
            theExaltationOfTheHolyCross: "Povýšenie Svätého kríža",
            transfiguration: "Premenenie Pána",
            trinitySunday: "Najsvätejšej Trojice",
          },
          sanctoral: {
            "205BlessedMartyrsOfJapan": "205 blahoslavených mučeníkov Japonska",
            allSaintsOfIreland: "Všetkých svätých Írska",
            allSaintsOfWales: "Všetkých svätých Walesu",
            allSouls: "Všetkých verných zosnulých",
            birthOfTheBlessedVirginMary: "Narodenie Panny Márie",
            blessedAlbertinaBerkenbrockVirginAndMartyr:
              "Blahoslavenej Albertiny Berkenbrockovej, panny a mučenice",
            blessedAloysiusStepinacBishopAndMartyr:
              "Blahoslaveného Alojza Stepinaca, biskupa a mučeníka",
            blessedAndreGrassetPriestAndMartyr:
              "Blahoslaveného Andreja Grasseta, kňaza a mučeníka",
            blessedAnielaSalawaVirgin: "Blahoslavenej Angely Salawej, panny",
            blessedAntoniNowowiejskiBishopAndCompanionsMartyrs:
              "Blahoslaveného Antona Nowowiejskeho, biskupa, a spoločníkov, mučeníkovi",
            blessedAugustinKazoticBishopAndMartyr:
              "Blahoslaveného Augustína Kažotića, biskupa a mučeníka",
            blessedBartholomewOfTheMartyrsBishop:
              "Blahoslaveného Bartolomeja od mučeníkov, biskup",
            blessedBartolomeLaurelReligiousAndMartyr:
              "Blahoslaveného Bartolomeja Laurela, rehoľníka a mučeníka",
            blessedBogumilBishop: "Blahoslaveného Bohumila, biskupa",
            blessedBoleslawaMariaLamentVirginAndSaintAngelaMericiVirgin:
              "Blahoslavenej Boleslavy Márie Lamentovej, Panny/Svätej Angely Merici, panny",
            blessedBronislawaVirgin: "Blahoslavenej Bronislavy, panny",
            blessedBronislawMarkiewiczPriest:
              "Blahoslaveného Bronislava Markiewicza, kňaza",
            blessedCarlosManuelRodriguez:
              "Blahoslaveného Karla Emanuela Rodrígueza Santiaga",
            blessedCatherineOfSaintAugustineVirgin:
              "Blahoslavenej Kataríny od sv. Augustína, panny",
            blessedCeferinoNamuncura: "Blahoslaveného Zefirína Namuncurá",
            blessedCeslausAndSaintHyacinthPriests:
              "Blahoslaveného Česlava a svätého Hyacinta, kňazov",
            blessedCharlesSpinolaPriestAndMartyr:
              "Blahoslaveného Karola Spinolu, kňaza a mučeníka",
            blessedColumbaMarmionPriest:
              "Blahoslaveného Columbu Marmiona, kňaza",
            blessedCzeslawPriest: "Blahoslaveného Česlava, kňaza",
            blessedDinaBelangerVirgin: "Blahoslavenej Diny Belangerovej, panny",
            blessedDominicOfTheMotherOfGodDominicBarberiPriest:
              "Blahoslaveného Dominika od Matky Božej Barberi, kňaza",
            blessedEdmundBojanowski: "Blahoslaveného Edmunda Bojanowského",
            blessedEdmundIgnatiusRiceReligious:
              "Blahoslaveného Edmunda Ignáca Rica, rehoľníka",
            blessedElisabethHesselbaldVirgin:
              "Blessed Elisabeth Hesselbald, Virgin",
            blessedEmilieTavernierGamelinReligious:
              "Blahoslavenej Márie Emílie Tavernier Gamelinovej, rehoľnice",
            blessedFredericJanssoonePriest:
              "Blahoslaveného Frederika Janssoona, kňaza",
            blessedGeorgeMatulewiczBishop:
              "Blahoslaveného Juraja Matulaitisa, biskupa",
            blessedGisela: "Blahoslavenej Gizely Uhorskej, rehoľnice",
            blessedGoncaloDeAmarantePriest:
              "Blahoslaveného Gonçala de Amarante, kňaza",
            blessedGoncaloDeLagosPriest:
              "Blahoslaveného Gonçala de Lagos, kňaza",
            blessedGraziaOfCattaro: "Blahoslavenej Grácie Kotorskej",
            blessedHemmingBishop: "Blahoslaveného Hemminga, biskupa",
            blessedHenrySusoPriest: "Blahoslaveného Henricha Susa, kňaza",
            blessedHonoratKozminskiPriest:
              "Blahoslaveného Honoráta Kożmińského, kňaza",
            blessedHroznataMartyr: "Blahoslaveného Hroznatu, mučeníka",
            blessedInacioDeAzevedoPriestAndCompanionsMartyrs:
              "Blahoslaveného Ignáca de Azevedo, kňaza, a spoločníkov, mučeníkov",
            blessedInnocentXiPope: "Blahoslaveného Inocenta XI., pápeža",
            blessedIrishMartyrs: "Blahoslavených írskych mučeníkov",
            blessedIstvanSandorMartyr:
              "Blahoslaveného Štefana Šándora, mučeníka",
            blessedIvanMerz: "Blahoslaveného Ivana Merza",
            blessedJacintaAndFranciscoMarto:
              "Svätých Hyacinty a Františka Martovcov",
            blessedJakubStrzemieBishop:
              "Blahoslaveného Jakuba Strzemię, biskupa",
            blessedJerzyMatulewiczBishop:
              "Blahoslaveného Juraja Matulaitisa, biskupa",
            blessedJoanOfPortugalVirgin:
              "Blahoslavenej Jany Portugalskej, panny",
            blessedJohnBeyzymPriest: "Blahoslaveného Jána Beyzyma, kňaza",
            blessedJohnHenryNewmanPriest:
              "Blahoslaveného Johna Henryho Newmana, kňaza",
            blessedJolantaReligious: "Blahoslavenej Jolany, rehoľnice",
            blessedJosephVazPriest: "Blahoslaveného Jozefa Vaza, kňaza",
            blessedJuniperoSerraPriest: "Blahoslaveného Junipera Serru, kňaza",
            blessedKarlOfAustria: "Blahoslaveného Karola Habsburského",
            blessedKarolinaKozkownaVirginAndMartyr:
              "Blahoslavenej Karolíny Kozkownej, panny a mučenice",
            blessedKuriakoseEliasChavaraPriest:
              "Blahoslaveného Kyriaka Eliáša Čavaru, kňaza",
            blessedLauraVicunaVirgin: "Blahoslavenej Laury Vicuñe, panny",
            blessedLouisZephirinMoreauBishop:
              "Blahoslaveného Ľudovíta Zefirína Moreau, biskupa",
            blessedMarcelinaDarowskaReligious:
              "Blahoslavenej Marcelíny Darowskej, rehoľnice",
            blessedMariaAdeodataPisaniVirgin:
              "Blahoslavenej Márie Adeodaty Pisaniovej, panny",
            blessedMariaDoloresRodriguezSopenaVirgin:
              "Blahoslavenej Márie Dolores Rodríguez Sopeñe, panny",
            blessedMariaStellaAndCompanionsVirginsAndMartyrs:
              "Blahoslavenej Márie Stelly a spoločníčok, pannien a mučeníc",
            blessedMariaTeresaLedochowskaVirgin:
              "Blahoslavenej Márie Terezy Ledochowskej, panny",
            blessedMariaTheresaChiramelVirgin:
              "Blahoslavenej Márie Terézie Chiramelovej, panny",
            blessedMarieAnneBlondinVirgin:
              "Blahoslavenej Márie Anny Blondinovej, panny",
            blessedMarieLeonieParadisVirgin:
              "Blahoslavenej Márie Leónie Paradisovej, panny",
            blessedMarieRoseDurocherVirgin:
              "Blahoslavenej Márie Durocherovej, panny",
            blessedMaryAngelaTruszkowskaVirgin:
              "Blahoslavenej Márie Angely Truszkowskej, panny",
            blessedMaryOfJesusCrucifiedPetkovicVirgin:
              "Blahoslavenej Márie od ukrižovaného Ježiša Petković, panny",
            blessedMaryOfJesusTheGoodShepherdVirgin:
              "Blahoslavenej Márie od Ježiša Dobrého Pastiera, panny",
            blessedMichaelKozalBishopAndMartyr:
              "Blahoslaveného Michaela Kozala, biskupa a mučeníka",
            blessedMiguelAgustinProPriestAndMartyr:
              "Blahoslaveného Michaela Pro, kňaza a mučeníka",
            blessedNazariaIgnaciaMarchReligious:
              "Blahoslavenej Nazárie Ignácie March Mesa (Nazárie od Svätého Terézie od Ježiša), rehoľnice",
            blessedNazjuFalzon: "Blahoslaveného Ignáca Falzona",
            blessedNicolasStenoBishop: "Blahoslaveného Nicolasa Stena, biskupa",
            blessedOleksiyZarytskyiPriestAndMartyr:
              "Blahoslaveného Alexeja Zarytského, kňaza a mučeníka",
            blessedOsannaOfCattaroVirgin:
              "Blahoslavenej Hosanny Kotorskej, panny",
            blessedPeterKibePriestAndCompanionsMartyrs:
              "Blahoslaveného Petra Kibeho, kňaza, a spoločníkov, mučeníkov",
            blessedPeterToRotMartyr: "Blahoslaveného Petra To Rota, mučeníka",
            blessedPiusIxPope: "Blahoslaveného Pia IX., pápeža",
            blessedRafalChylinskiPriest:
              "Blahoslaveného Rafaela Chylinského, kňaza",
            blessedSalomeVirgin: "Blahoslavenej Salomey Poľskej, panny",
            blessedSanchaAndMafaldaVirginsOrBlessedTheresaOfPortugalReligious:
              "Blahoslavených Sanche a Mafaldy, panny, alebo blahoslavenej Terezy Portugalskej, rehoľnice",
            blessedsAndreDeSoveralAndAmbrosioFranciscoFerroPriestsAndMartyrs:
              "Blahoslavených Andreja de Soverala a Ambróza Františka Ferra, mučeníka",
            blessedSaraSalkahaziVirginAndMartyr:
              "Blahoslavenej Sáry Salkaháziovej, panny a mučenice",
            blessedsCarlosSpinolaAndJeronimoDeAngelisPriestsAndMartyrs:
              "blahoslavených Karla Spinolu a Hieronyma de Angelis, kňazov a mučeníkov",
            blessedSebastianDeAparicioReligious:
              "Blahoslaveného Šebastiána de Aparicio, Religious",
            blessedsNykytaBudkaAndVasylVelychkowskyBishopsAndMartyrs:
              "Blahoslavených Nikity Budku a Vasiľa Velichkovského, biskupov a mučeníkov",
            blessedsPedroZunigaAndLuisFloresPriestsAndMartyrs:
              "Blahoslavených Petra de Zúñigu a Ľudovíta Floresa, kňazov a mučeníkov",
            blessedTheodoreRomzhaBishopAndMartyr:
              "Blahoslaveného Teodora Romžu, biskupa a mučeníka",
            blessedVilmosAporBishopAndMartyr:
              "Blahoslaveného Vilmosa Apora, biskupa a mučeníka",
            blessedVincentKadlubekBishop:
              "Blahoslaveného Vincenta Kadlubka, biskupa",
            blessedVincentLewoniukAndCompanionsMartyrsOfPratulin:
              "Blahoslaveného Vincenta Lewoniuka a spoločníkov, mučeníkov",
            blessedVladimirGhikaPriestAndMartyr:
              "Blahoslaveného Vladimíra Ghiku, kňaza a mučeníka",
            blessedWladyslawBladzinskiPriestAndCompanionsMartyrs:
              "Blahoslaveného Vladislava Błądzińskiho, kňaza, a spoločníkov, mučeníkov",
            blessedWladyslawOfGielniowPriest:
              "Blahoslaveného Vladislava z Gielniowa, kňaza",
            blessedZdenkaSchelingovaVirginAndMartyr:
              "Blahoslavenej Zdenky Schelingovej, panny a mučenice",
            chairOfSaintPeterApostle: "Katedra svätého Petra, apoštola",
            conversionOfSaintPaulApostle: "Obrátenie svätého Pavla, apoštola",
            dedicationOfAParticularChurch:
              "Výročie posviacky chrámov, ktorých deň posviacky je neznámy",
            dedicationOfTheBasilicaOfSaintMaryMajor:
              "Výročie posviacky Hlavnej mariánskej baziliky v Ríme",
            dedicationOfTheBasilicasOfSaintsPeterAndPaulApostles:
              "Výročie posviacky bazilík svätého Petra a svätého Pavla, apoštolov",
            dedicationOfTheLateranBasilica:
              "Výročie posviacky Lateránskej baziliky",
            discoveryOfTheHiddenChristians: "Objavenia skrytých kresťanov",
            findingOfTheHolyCross: "Nájdenie Svätého kríža",
            firstMartyrsOfTheChurchOfRome:
              "Prvých svätých mučeníkov Cirkvi v Ríme",
            guardianAngels: "Svätých anjelov strážcov",
            holyInnocentsMartyrs: "Svätých Neviniatok, mučeníkov",
            holyNameOfTheBlessedVirginMary: "Najsvätejšieho mena Panny Márie",
            hungarianSaintsAndBlesseds: "Maďarských svätých a blahoslavených",
            immaculateConceptionOfTheBlessedVirginMaryPrincipalPatronessOfThePhilippines:
              "Nepoškvrneného počatia Panny Márie, hlavná Patrónka Filipín",
            maryMotherOfTheChurch: "Preblahoslavenej Panny Márie, Matky Cirkvi",
            mostHolyNameOfJesusOrOurLadyOfBethlehem:
              "Najsvätejšieho mena Ježiš alebo Panny Márie Betlehemskej",
            ourLadyHelpOfChristians: "Panny Márie, Pomocnice kresťanov",
            ourLadyMediatrix: "Panny Márie, Prostrednice všetkých milostí",
            ourLadyMediatrixOfAllGrace:
              "Panny Márie, Prostrednice všetkých milostí",
            ourLadyMotherOfChristianUnity:
              "Panny Márie, Matky jednoty kresťanov",
            ourLadyMotherOfDivineProvidencePatronessOfPuertoRico:
              "Panny Márie, Matky Božej Prozreteľnosti, Patrónky Portorika",
            ourLadyMotherOfMercy: "Panny Márie Ostrobramskej",
            ourLadyOfAparecidaPatronessOfBrazil:
              "Panna Mária z Aparecidy, Patrónka Brazílie",
            ourLadyOfBistrica: "Panny Márie z Marije Bistrice",
            ourLadyOfCzestochowa: "Panny Márie Čenstochovskej",
            ourLadyOfFatima: "Blahoslavenej Panny Márie Fatimskej",
            ourLadyOfGoodCounsel: "Panny Márie Dobrej Rady",
            ourLadyOfGuadalupe: "Preblahoslavenej Panny Márie Guadalupskej",
            ourLadyOfHungary: "Patrónka Maďarov",
            ourLadyOfItati: "Panny Márie Itatskej",
            ourLadyOfKnock: "Panny Márie z Knock",
            ourLadyOfLanka: "Panny Márie z Lanky",
            ourLadyOfLebanon: "Panny Márie z Lebanonu",
            ourLadyOfLoreto: "Preblahoslavenej Panny Márie Loretánskej",
            ourLadyOfLourdes: "Preblahoslavenej Panny Márie Lurdskej",
            ourLadyOfLujanPatronessOfArgentina: "Panny Marie Lujánska",
            ourLadyOfMadhu: "Panny Márie z Madhu",
            ourLadyOfMercy: "Panny Márie milosrdenstva",
            ourLadyOfMountCarmel: "Preblahoslavenej Panny Márie Karmelskej",
            ourLadyOfMountCarmelMotherAndQueenOfChile:
              "Panny Márie Karmelskej, Matky a Kráľovnej Chile",
            ourLadyOfPeace: "Panny Márie pokoja",
            ourLadyOfPerpetualHelpOrBlessedLeonidFeodorovPriestAndMartyr:
              "Panny Márie ustavičnej pomoci alebo blahoslaveného Leonida Fjodorova, kňaza a mučeníka",
            ourLadyOfSorrows: "Sedembolestnej Panny Márie, patrónky Slovenska",
            ourLadyOfTheGateOfDawn: "Panny Márie Ostrobramskej",
            ourLadyOfThePillar: "Panny Márie del Pilar",
            ourLadyOfTheRosary: "Ružencovej Panny Márie",
            ourLadyOfTheValley: "Our Lady of The Valley",
            ourLadyOfVladimir: "Vladimírskej Bohorodičky",
            ourLadyOfWalsingham: "Walsinghamskej Panny Márie",
            ourLadyQueenOfPeace: "Panny Márie Kráľovnej pokoja",
            ourLadyQueenOfPoland: "Panny Márie, Kráľovnej Poľska",
            ourLordJesusChristTheEternalHighPriest:
              "Nášho Pána Ježiša Krista, najvyššieho a večného kňaza",
            ourLordOfMiracles: "Panny Márie zázrakov",
            popeSaintJohnPaulII: "Svätého Jána Pavla II., pápeža",
            popeSaintJohnXXIII: "Svätého Jána XXIII., pápeža",
            presentationOfTheBlessedVirginMary: "Obetovanie Panny Márie",
            queenshipOfBlessedVirginMary: "Panny Márie Kráľovnej",
            saintAdalbertBishopAndMartyr:
              "Svätého Vojtecha, biskupa a mučeníka",
            saintAdalbertBishopAndMartyrSaintFidelisOfSigmaringenPriestAndMartyr:
              "Svätého Vojtecha, biskupa a mučeníka/Svätého Fidéla zo Sigmaringenu, kňaza a mučeníka",
            saintAelredOfRievaulx: "Svätého Aelreda z Rievaulx",
            saintAengusOengusBishopAndAbbot:
              "Svätého Aengusa (Óengusa), biskupa a opáta",
            saintAgathaVirginAndMartyr: "Svätej Agáty, panny a mučenice",
            saintAgnesOfBohemiaVirgin: "Svätej Anežky Českej, panny",
            saintAgnesVirginAndMartyr: "Svätej Agnesy, panny a mučenice",
            saintAidanBishop: "Svätého Aidana, biskupa",
            saintAidanBishopAndTheSaintsOfLindisfarne:
              "Svätého Aidana, biskupa, a lindisfarnských svätých",
            saintAidanOfLindisfarneBishopAndMissionary:
              "Svätého Aidana Lindisfarnského, biskupa a misionára",
            saintAilbeBishop: "Svätého Ailba, biskupa",
            saintAlbanMartyr: "Svätého Albána, mučeníka",
            saintAlbertChmielowskiReligious:
              "Svätého Alberta Chmielowského, rehoľníka",
            saintAlbertoHurtadoPriest: "Svätého Alberta Hurtada, kňaza",
            saintAlbertTheGreatBishopAndDoctor:
              "Svätého Alberta Veľkého, biskupa a učiteľa Cirkvi",
            saintAloysiusGonzagaReligious: "Svätého Alojza Gonzágu, rehoľníka",
            saintAlphonsaOfTheImmaculateConceptionVirgin:
              "Svätej Alfonzy od Nepoškvrneného počatia, panny",
            saintAlphonsusMariaDeLiguoriBishopAndDoctorOfTheChurch:
              "Svätého Alfonza Máriu de’ Liguori, biskupa a učiteľa Cirkvi",
            saintAmandMissionary: "Svätého Milana, biskupa",
            saintAmbroseBishopAndDoctor:
              "Svätého Ambróza, biskupa a učiteľa Cirkvi",
            saintAndreBessetteReligious:
              "Svätého Andreja Alfréda Bessetta, rehoľníka",
            saintAndrewApostle: "Saint Andrew, Apostle",
            saintAndrewBobolaPriestAndMartyr:
              "Svätého Andreja Bobolu, kňaza a mučeníka",
            saintAndrewDungLacAndCompanionsMartyrs:
              "Svätého Ondreja Dung-Laka, kňaza, a spoločníkov, mučeníkov",
            saintAndrewKimTaegonPriestAndPaulChongHasangAndCompanionsMartyrs:
              "Svätých Ondreja Kima Taegona, kňaza, Pavla Chonga Hasanga a spoločníkov, mučeníkov",
            saintAndrewTheApostle: "Svätého Ondreja, apoštola",
            saintAndrewTheApostlePatronOfRussia:
              "Svätého Ondreja, apoštola, patrón Ruska",
            saintAngelaMericiVirgin: "Svätej Angely Merici, panny",
            saintAnnePatronOfQuebecAndSaintJoachimParentsOfTheBlessedVirginMary:
              "Svätých Anny, patrónky Quebecu, a Joachima, rodičov Panny Márie",
            saintAnnoIiBishop: "Svätého Anna II., biskupa",
            saintAnselmOfCanterburyBishopAndDoctorOfTheChurch:
              "Svätého Anzelma, biskupa a učiteľa Cirkvi",
            saintAnthonyMaryClaretBishop:
              "Svätého Antona Máriu Clareta, biskupa",
            saintAnthonyOfEgyptAbbot: "Svätého Antona, opáta",
            saintAnthonyOfLisbonPriestAndDoctorOfTheChurch:
              "Svätého Antona Paduánskeho, kňaza a učiteľa Cirkvi",
            saintAnthonyOfPaduaPriestAndDoctor:
              "Svätého Antona Paduánskeho, kňaza a učiteľa Cirkvi",
            saintAnthonyOfSaintAnneGalvaoFreiGalvaoPriest:
              "Svätého Antona de Sant’Ana Galvão (brata Galvão), kňaza",
            saintAnthonyOfTheCavesMonk: "Svätého Antona Pečerského, mnícha",
            saintAnthonyZaccariaPriest: "Svätého Antona Márie Zaccariu, kňaza",
            saintApollinaris: "Svätého Apolinára, biskupa a mučeníka",
            saintAsaphBishop: "Svätého Asafa, biskupa",
            saintAsicusBishop: "Svatého Azika, biskupa",
            saintAthanasiusBishopAndDoctor:
              "Svätého Atanáza, biskupa a učiteľa Cirkvi",
            saintAugustineOfCanterburyBishop:
              "Svätého Augustína z Canterbury, biskupa",
            saintAugustineOfHippoBishopAndDoctorOfTheChurch:
              "Svätého Augustína, biskupa a učiteľa Cirkvi",
            saintBarbaraVirginAndMartyr: "Svätej Barbory, panny a mučenice",
            saintBarbaraVirginAndMartyrOrBlessedAdolphKolpingPriest:
              "Svätej Barbory, panny a mučenice, alebo blahoslaveného Adolfa Kolpinga, kňaza",
            saintBarnabasTheApostle: "Svätého Barnabáša, apoštola",
            saintBartholomewTheApostle: "Svätého Bartolomeja, apoštola",
            saintBeatriceOfSilvaVirgin: "Svätej Beatrix da Silva, panny",
            saintBedeTheVenerablePriestAndDoctor:
              "Svätého Bédu Ctihodného, kňaza a učiteľa Cirkvi",
            saintBedeTheVenerablePriestAndDoctorSaintGregoryViiPopeSaintMaryMagdaleneDePazziVirgin:
              "Svätého Bédu Ctihodného, kňaza a učiteľa Cirkvi/Svätého Gregora VII., pápeža/Svätej Márie Magdalény de’ Pazzi, panny",
            saintBenedictOfNursiaAbbot:
              "Svätého Benedikta, opáta, spolupatróna Európy",
            saintBennoOfMeissenBishop: "Svätého Benna z Meißenu, biskupa",
            saintBernadetteSoubirousVirgin:
              "Svätej Bernadety Soubirousovej, panny",
            saintBernardineOfSienaPriest: "Svätého Bernardína Sienského, kňaza",
            saintBernardOfClairvauxAbbotAndDoctorOfTheChurch:
              "Svätého Bernarda, opáta a učiteľa Cirkvi",
            saintBeunoAbbot: "Svätého Beuna (Bona), opát",
            saintBlaseBishopAndMartyrSaintAnsgarBishop:
              "Svätého Blažeja, biskupa a mučeníka, a svätého Oskára, biskupa",
            saintBonaventureBishopAndDoctor:
              "Svätého Bonaventúru, biskupa a učiteľa Cirkvi",
            saintBonifaceBishopAndMartyr:
              "Svätého Bonifáca, biskupa a mučeníka",
            saintBrendanAbbot: "Svätého Brendana, opáta",
            saintBridgetOfSwedenReligious:
              "Svätej Brigity, rehoľnice, patrónky Európy",
            saintBrigidVirgin: "Svätej Brigity Írskej, panny",
            saintBrotherMutienMarieReligious:
              "Svätého brata Mutien-Marie, rehoľníka",
            saintBrunoBonifaceOfQuerfurtBishopAndMartyr:
              "Svätého Bruna Bonifáca z Querfurtu, biskupa a mučeníka",
            saintBrunoPriest: " Svätého Bruna, kňaza",
            saintCaesariusOfArlesBishop: "Svätého Cézara z Arles, biskupa",
            saintCallistusIPopeAndMartyr:
              "Svätého Kalixta I., pápeža a mučeníka",
            saintCamillusDeLellisPriest: "Svätého Kamila de Lellis, kňaza",
            saintCamillusDeLellisPriestOrSaintHenryBishopAndMartyr:
              "Svätého Kamila de Lellis, kňaza, alebo svätého Henricha",
            saintCaniceAbbot: "Svätého Canica, opáta",
            saintCanuteMartyr: "Svätého Kanuta, mučeníka",
            saintCarthageBishopMochuta: "Svätého Kartága (Mo Chutu), biskupa",
            saintCasimir: "Svätého Kazimíra",
            saintCatherineOfAlexandriaVirginAndMartyr:
              "Svätej Kataríny Alexandrijskej, panny a mučenice",
            saintCatherineOfSienaVirginAndDoctorOfTheChurch:
              "Svätej Kataríny Sienskej, panny a učiteľky Cirkvi, patrónky Európy",
            saintCeallachCelsusBishop: "Svätého Ceallacha (Celza), biskupa",
            saintCeciliaVirginAndMartyr: "Svätej Cecílie, panny a mučenice",
            saintCharbelMakhloufPriestAndHermit:
              "Svätého Sarbela Makhlūfa, kňaza",
            saintCharlesBorromeoBishop: "Svätého Karola Boromejského, biskupa",
            saintChristopherMagallanesAndCompanionsMartyrs:
              "Svätého Krištofa Magallanesa, kňaza, a spoločníkov, mučeníkov",
            saintChristopherMartyr: "Svätého Ḱrištofa, mučeníka",
            saintCiaranAbbot: "Svätého Kiarána, opáta",
            saintClareVirgin: "Svätej Kláry, panny",
            saintClementIPopeAndMartyrSaintColumbanReligious:
              "Svätého Klementa I., pápeža a mučeníka/Svätého Kolumbána, opáta",
            saintClementMaryHofbauerPriest:
              "Svätého Klementa Márie Hofbauera, kňaza",
            saintClementOfOhridAndGorazdBishopsAndCompanions:
              "Svätého Klimenta Ochridského a Gorazda, biskupov, a spoločníkov",
            saintClotilde: "Svätej Klotildy",
            saintColmanOfCloyneBishop: "Svätého Kolomana z Cloyne, biskupa",
            saintColmanOfDromoreBishop: "Svätého Kolomana z Dromore, biskupa",
            saintColmanOfKilmacduaghBishop:
              "Svätého Kolomana z Kilmacduagh, biskupa",
            saintColumba: "Svätého Kolumbu, opáta",
            saintColumbaAbbotAndMissionary:
              "Svätého Kolumbu, opáta a misionára",
            saintColumbanAbbotAndMissionary:
              "Svätého Kolumbana, opáta a misionára",
            saintComgallAbbot: "Svätého Comgalla, opáta",
            saintConlethBishop: "Svätého Konleta, biskupa",
            saintConradOfParzhamReligious:
              "Svätého Konráda z Parzhamu, rehoľníka",
            saintCorbinianBishop: "Svätého Korbiniána, biskupa",
            saintCuthbertBishop: "Svätého Cuthbert, biskupa",
            saintCyrilOfAlexandriaBishopAndDoctor:
              "Svätého Cyrila Alexandrijského, biskupa a učiteľa Cirkvi",
            saintCyrilOfJerusalemBishopAndDoctor:
              "Svätého Cyrila Jeruzalemského, biskupa a učiteľa Cirkvi",
            saintDamasusIPope: "Svätého Damaza I., pápeža",
            saintDamienDeVeusterPriest:
              "Svätého Damiána De Veuster, kňaza a mučeníka",
            saintDavidBishop: "Svätého Dávida z Menevie, biskupa",
            saintDavidLewisPriestAndMartyr:
              "Svätého Dávida Lewisa, kňaza a mučeníka",
            saintDavnetVirgin: "Svätej Davnety, panny",
            saintDeclanBishop: "Svätého Deklana, biskupa",
            saintDeiniolBishop: "Svätého Deiniola (Daniela), biskupa",
            saintDemetrius: "Svätého Demetra Solúnskeho, mučeníka",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriest:
              "Svätého Dionýza, biskupa, a spoločníkov, mučeníkov/Svätého Jána Leonardiho, kňaza",
            saintDenisAndCompanionsMartyrsSaintJohnLeonardiPriestBlessedJohnNewmanBishop:
              "Svätého Dionýza, biskupa, a spoločníkov, mučeníkov/Svätého Jána Leonardiho, kňaza/Blahoslaveného Johna Henryho Newmana, kňaza",
            saintDionysiusTheAreopagite:
              "Svätého Dionýza Areopagitu, biskupa a mučeníka",
            saintDominicPriest: "Svätého Dominika, kňaza",
            "saintDominicPriest/SaintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest":
              "Svätého Dominika, kňaza/Svätých Sixta II., pápeža, a jeho spoločníkov, mučeníkov/Svätého Kajetána, kňaza",
            saintDubriciusBishop: "Svätého Dubrícia, biskupa",
            saintEdmundCampionPriestAndMartyr:
              "Svätého Edmunda Kampiána, kňaza a mučeníka",
            saintEdmundOfAbingdonBishopOrSaintMargaretOfScotland:
              "Svätého Edmundá z Abingdonu, biskupa, alebo svätej Margity Škótskej",
            saintEdwardTheConfessor: "Svätého Eduarda Vyznávača",
            saintElijahProphet: "Svätého Eliáša, proroka",
            saintElizabethAnnSetonReligious:
              "Svätej Alžbety Anny Setonovej, rehoľnice",
            saintElizabethOfHungary: "Svätej Alžbety Uhorskej, rehoľnice",
            saintElizabethOfHungarySaintHildaAbbessSaintHughOfLincolnBishop:
              "Saint Elizabeth of Hungary, Religious/Saint Hilda, Abbess/Saint Hugh of Lincoln, Bishop",
            saintElizabethOfPortugal: "Svätej Alžbety Portugalskej",
            saintEmeric: "Svätého Imricha",
            saintEndaAbbot: "Svätého Endu, opáta",
            saintEphraemDeaconDoctorOrSaintColumbaColumCilleAbbot:
              "Svätého Efréma, diakona a učiteľa Cirkvi, alebo svätého Kolumbu, opáta",
            saintEphremDeaconAndDoctor:
              "Svätého Efréma, diakona a učiteľa Cirkvi",
            saintEricIxMartyr: "Saint Eric IX., Martyr",
            saintEtheldredaAudreyVirgin: "Svätej Eteldredy, panny",
            saintEugeneDeMazenodBishop: "Svätého Eugena de Mazenod, biskupa",
            saintEugeneEoghanBishop: "Svätého Eugena (Eoghana), biskupa",
            saintEulaliaOfMeridaVirginAndMartyr:
              "Svätej Eulálie z Meridy, panny a mučenice",
            saintEulogiusOfCordobaBishop: "Svätého Eulógia z Córdoby, biskupa",
            saintEusebiusOfVercelliBishopSaintPeterJulianEymardPriest:
              "Svätého Euzébia Vercellského, biskupa/Svätého Petra Juliána Eymarda, kňaza",
            saintEysteinnBishop: "Svätého Eysteina Erlendssona, biskupa",
            saintEzekielMorenoBishop: "Svätého Ezechiela Morena, biskupa",
            saintEzequielMorenoBishop: "Svätého Ezechiela Morena, biskupa",
            saintFachananOfKilfenoraBishop:
              "Svätého Fachanana z Kilfenora, biskupa",
            saintFachtnaBishop: "Svatého Fachtnu, biskupa",
            saintFaustinaKowalskaVirginAndReligious:
              "Svätej Faustíny Kowalskej, panny",
            saintFelipeDeJesusPriestAndMartyr:
              "Svätého Filipa od Ježiša, kňaza a mučeníka",
            saintFerdinand: "Svätého Ferdinanda",
            saintFergalBishopAndMissionary:
              "Svätého Fergala (Virgila), biskupa a misionára",
            saintFiacreMonk: "Svätého Fiakra, mnícha",
            saintFidelisOfSigmaringenPriestAndMartyr:
              "Svätého Fidéla zo Sigmaringenu, kňaza a mučeníka",
            saintFinbarrBishop: "Svätého Finbarra, biskupa",
            saintFinnianOfClonardBishop: "Svätého Finniana z Clonardu, biskupa",
            saintFintan: "Svätého Fintana",
            saintFlannanBishop: "Svätého Flannana, biskupa",
            saintFlorianAndHisCompanionsMartyrs:
              "Svätých Floriána a jeho spoločníkov, mučeníkov",
            saintFlorianMartyr: "Svätého Floriána, mučeníka",
            saintFrancesOfRomeReligious: "Svätej Františky Rímskej, rehoľnice",
            saintFrancesXavierCabriniVirgin:
              "Svätej Františky Xaviery Cabriniovej, panny",
            saintFrancisBorgiaPriest: "Svätého Františka Borgiu, kňaza",
            saintFrancisDeSalesBishopAndDoctor:
              "Svätého Františka Saleského, biskupa a učiteľa Cirkvi",
            saintFrancisOfAssisi: "Svätého Františka Assiského",
            saintFrancisOfPaolaHermit: "Svätého Františka z Paoly, pustovníka",
            saintFrancisSolanusPriest: "Svätého Františka Solana, kňaza",
            saintFrancisXavierPriest: "Svätého Františka Xaverského, kňaza",
            saintFrancoisDeLavalBishop:
              "Svätého Františka de Montmorency-Laval, biskupa",
            saintFridolinOfSackingenMonk: "Svätého Fridolína, opáta",
            saintFructuosusSaintMartinOfDumeAndSaintGeraldBishops:
              "Svätých Fruktuóza z Bragy, Martin z Dumia a Geralda z Bragy, biskupov",
            saintFursaAbbotAndMissionary: "Svätého Fursu, opát a misionár",
            saintGallAbbotAndMissionary: "Svätého Gála, kňaza",
            saintGenevieveVirgin: "Svätej Genovévy, panny",
            saintGeorgeMartyr: "Svätého Juraja, mučeníka",
            saintGeorgeMartyrSaintAdalbertBishopAndMartyr:
              "Svätého Juraja, mučeníka/Svätého Vojtecha, biskupa a mučeníka",
            saintGeorgePrecaPriest: "Svätého Juraja Precu, kňaza",
            saintGerardBishop: "Svätého Gerarda, biskupa",
            saintGermanusOfAuxerreBishop: "Svätého Germána z Auxerre, biskupa",
            saintGertrudeOfNivellesAbbess: "Svätej Gertrúdy z Nivelles, opátky",
            saintGertrudeOfNivellesVirgin: "Svätej Gertrúdy z Nivelles, panny",
            saintGertrudeTheGreatVirgin: "Svätej Gertrúdy, panny",
            saintGobnaitVirgin: "Svätej Gobnaity, panny",
            saintGonsaloGarciaMartyr: "Svätého Gonsala Garciu, mučeníka",
            saintGorazdAndCompanions: "Svätého Gorazda a spoločníkov",
            saintGotthardBishop: "Svätého Gottharda, biskupa",
            saintGregoryTheGreatPopeAndDoctor:
              "Svätého Gregora Veľkého, pápeža a učiteľa Cirkvi",
            saintHectorValdivielsoSaezMartyr:
              "Svätého Héctora Valdivielsa Sáeza (Benedikta od Ježiša), mučeníka",
            saintHedwigOfPoland: "Svätej Hedvigy Poľskej",
            saintHedwigOfSilesia: "Svätej Hedvigy, rehoľnice",
            saintHedwigReligiousOrSaintMargaretMaryAlacoqueVirgin:
              "Svätej Hedvigy, rehoľnice, alebo svätej Margity Márie Alacoque, panny",
            saintHedwigReligiousSaintMargaretMaryAlacoqueVirgin:
              "Svätej Hedvigy, rehoľnice/Svätej Margity Márie Alacoque, panny",
            saintHelena: "Svätej Heleny",
            saintHemmaOfGurk: "Svätej Emy z Gurku",
            saintHenryBishopAndMartyr: "Svätého Henricha",
            saintHermannJosephPriest: "Svätého Hermana Jozefa, kňaza",
            saintHermenegildMartyr: "Svätého Hermenegilda, mučeníka",
            saintHilaryOfPoitiersBishopAndDoctor:
              "Svätého Hilára, biskupa, učiteľa Cirkvi",
            saintHildegardOfBingenAbbessAndDoctor:
              "Svätej Hildegardy z Bingenu, opátky a mučenice",
            saintHubertBishop: "Svätého Huberta, biskupa",
            saintHubertOfLiegeBishopOrSaintPirminAbbotAndBishop:
              "Svätého Huberta of Liége, biskupa, alebo svätého Primina, opáta a biskupa",
            saintHyacinthPriest: "Svätého Hyacinta Poľského, kňaza",
            saintIgnatiusOfAntiochBishopAndMartyr:
              "Svätého Ignáca Antiochijského, biskupa a mučeníka",
            saintIgnatiusOfLoyolaPriest: "Svätého Ignáca z Loyoly, kňaza",
            saintIldephonsusOfToledoBishop:
              "Svätého Ildefonza z Toleda, biskupa",
            saintIlltudAbbot: "Svätého Illtuda, opáta",
            saintIrenaeusBishopAndMartyr: "Svätého Ireneja, biskupa a mučeníka",
            saintIrene: "Svätej Ireny",
            saintIsidoreOfSevilleBishopAndDoctorOfTheChurch:
              "Svätého Izidora, biskupa a učiteľa Cirkvi",
            saintIsidoreTheFarmer: "Svätého Izidora z Madridu, roľníka",
            saintItaVirgin: "Svätej Ity, panny",
            saintIvoPriest: "Svätého Ivo, kňaza",
            saintJamesApostle: "Svätého Jakuba, apoštola",
            saintJamesApostlePatronOfSpain:
              "Svätého Jakuba, apoštola, patrón Španielska",
            saintJaneFrancesDeChantalReligious:
              "Svätej Jany Františky de Chantal, rehoľnice",
            saintJanuariusBishopAndMartyr:
              "Svätého Januára, biskupa a mučeníka",
            saintJarlathBishop: "Svätého Jarláta, biskupa",
            saintJeanVianneyTheCureOfArsPriest:
              "Svätého Jána Márie Vianneya, kňaza",
            saintJeromeEmilianiSaintJosephineBakhitaVirgin:
              "Svätého Hieronyma Emilianiho/Svätej Jozefíny Bakhity, panny",
            saintJeromePriestAndDoctor:
              "Svätého Hieronyma, kňaza a učiteľa Cirkvi",
            saintJoanOfArcVirginSecondaryPatronessOfFrance:
              "Svätej Jany z Arku, panny, sekundárnej patrónky Francúzska",
            saintJoaquinaVedruna:
              "Svätej Joaquiny od svätého Františka z Assisi, rehoľnice",
            saintJohnBaptistDeLaSallePriest:
              "Svätého Jána Krstiteľa de la Salle, kňaza",
            saintJohnBerchmansReligious: "Svätého Jána Berchmansa, rehoľníka",
            saintJohnBoscoPriest: "Svätého Jána Boska, kňaza",
            saintJohnCassianPriest: "Svätého Ján Kassiána, kňaza",
            saintJohnChrysostomBishopAndDoctor:
              "Svätého Jána Zlatoústeho, biskupa a učiteľa Cirkvi",
            saintJohnDamascenePriestAndDoctor:
              "Svätého Jána Damascénskeho, kňaza a učiteľa Cirkvi",
            saintJohnDamascenePriestAndDoctorOrSaintBarbaraVirginAndMartyr:
              "Svätého Jána Damascénskeho, kňaza a učiteľa Cirkvi, alebo svätej Barbory, panny a mučenice",
            saintJohnDeBritoPriestAndMartyr:
              "Svätého Jána de Brito, kňaza a mučeníka",
            saintJohnEudesPriest: "Svätého Jána Eudes, kňaza",
            saintJohnIPopeAndMartyr: "Svätého Jána I., pápeža a mučeníka",
            saintJohnJonesPriestAndMartyr:
              "Svätého Jána Jonesa, kňaza a mučeníka",
            saintJohnMaciasReligious: "Svätého Jána Macíasa, rehoľníka",
            saintJohnNepomucenePriestAndMartyr:
              "Svätého Jána Nepomuckého, kňaza a mučeníka",
            saintJohnNeumannBishop:
              "Svätého Jána Nepomuckého Neumanna, biskupa",
            saintJohnOfAvilaPriest: "Svätého Jána z Ávily, kňaza",
            saintJohnOfCapistranoPriest: "Svätého Jána Kapistránskeho, kňaza",
            saintJohnOfDuklaPriest: "Svätého Jána z Dukly, kňaza",
            saintJohnOfGodPriest: "Svätého Jána z Boha, rehoľníka",
            saintJohnOfGodReligious: "Svätého Jána z Boha, rehoľníka",
            saintJohnOfKantyPriest: "Svätého Jána Kentského, kňaza",
            saintJohnOfTheCrossDoctorOfTheChurch:
              "Svätého Jána z Kríža, kňaza a učiteľa Cirkvi",
            saintJohnOfTheCrossPriestAndDoctor:
              "Svätého Jána z Kríža, kňaza a učiteľa Cirkvi",
            saintJohnOgilvie: "Svätého Jána Ogilvie",
            saintJohnRobertsPriestAndMartyr:
              "Svätého Jána Robertsa, kňaza a mučeníka",
            saintJohnSarkanderPriestAndMartyrSaintZdzislawa:
              "Svätého Jána Sarkandera, kňaza a mučeníka/Svätej Zdislavy",
            saintJohnTheApostleAndEvangelist:
              "Svätého Jána, apoštola a evanjelistu",
            saintJosaphatBishopAndMartyr:
              "Svätého Jozafáta, biskupa a mučeníka",
            saintJoseDeAnchietaPriest: "Svätého Jozefa de Anchietu, kňaza",
            saintJosefBilczewskiBishop: "Svätého Jozefa Bilczewského, biskupa",
            saintJoseMariaDeYermoPriest: "Svätého Jozefa Márie de Yerma, kňaza",
            saintJosemariaEscrivaDeBalaguerPriest:
              "Svätého Josemaríe Escrivá de Balaguer, kňaza",
            saintJosephSpouseOfTheBlessedVirginMaryPrincipalPatronOfCanada:
              "Svätého Jozefa, ženícha Panny Márie, hlavný patrón Kanady",
            saintJosephTheWorker: "Svätého Jozefa, robotníka",
            saintJozefBilczewskiBishop: "Svätého Jozefa Bilczewski, biskupa",
            saintJozefSebastianPelczar:
              "Svätého Jozefa Sebastiána Pelczara, biskupa",
            saintJuanDiego:
              "Svätého Jána Didaka (Juana Diega) Cuauhtlatoatzina",
            saintJuanDiegoCuauhtlatoatzin:
              "Svätého Jána Didaka Cuauhtlatoatzina",
            saintJulianaOfLiegeVirgin: "Svätej Juliány z Liége, panny",
            saintJulieBilliartVirgin: "Svätej Júlie Billiart, panny",
            saintJustinMartyr: "Svätého Justína, mučeníka",
            saintKateriTekakwithaVirgin: "Svätej Kataríny Tekakwithy, panny",
            saintKatharineDrexelVirgin: "Svätej Kataríny Drexelovej, panny",
            saintKentigern: "Svätého Munga",
            saintKevinAbbot: "Svätého Kevina, opáta",
            saintKieranBishop: "Svätého Ciarána, biskup",
            saintKilianBishopAndCompanionsMartyrs:
              "Svätého Kiliána, biskupa, a spoločníkov, mučeníkov",
            saintKillianBishopAndMartyr: "Svätého Killiana, biskupa a mučeníka",
            saintKingaVirgin: "Svätej Kingy, panny",
            saintLadislaus: "Svätého Ladislava",
            saintLambertBishopAndMartyr:
              "Svätého Lamberta z Maastrichtu, biskupa a mučeníka",
            saintLaurenceOTooleBishop: "Svätého Vavrinec O’Toole, biskupa",
            saintLawrenceOfBrindisiPriestAndDoctor:
              "Svätého Vavrinca z Brindisi, kňaza a učiteľa Cirkvi",
            saintLawrenceOfRomeDeaconAndMartyr:
              "Svätého Vavrinca, diakona a mučeníka",
            saintLeanderBishop: "Svätého Leandra zo Sevilly, biskupa",
            saintLeobaAbbess: "Svätej Leoby, opátky",
            saintLeoIxPopeOrBlessedMarcelCalloMartyr:
              "Svätého Lea IX., pápeža, alebo blahoslaveného Marcela Calla, mučeníka Leo IX, Pope Or Blessed Marcel Callo, Martyr",
            saintLeonardOfNoblacHermit:
              "Svätého Leonarda z Noblatu, pustovníka",
            saintLeopoldIII: "Svätého Leopolda III., pápeža",
            saintLeopoldMandicPriest:
              "Svätého Leopolda Bogdana Mandića, kňaza a rehoľníka",
            saintLeoTheGreatPopeAndDoctor:
              "Svätého Leva Veľkého, pápeža a učiteľa Cirkvi",
            saintLorenzoRuizAndCompanionsMartyrs:
              "Svätého Vavrinca Ruiza a spoločníkov, mučeníkov",
            saintLouisBertrandPriest:
              "Svätého Ľudovíta Bertranda, kňaza a rehoľníka",
            saintLouisGrignonDeMontfortPriest:
              "Svätého Ľudovíta Márie Grignona de Montfort, kňaza",
            saintLouisSaintJosephOfCalasanzPriest:
              "Svätého Ľudovíta/Svätého Jozefa Kalazanského, kňaza",
            saintLuciusOfChurBishopAndMartyr:
              "Svätého Lucia z Chur, biskupa a mučeníka",
            saintLucyOfSyracuseVirginAndMartyr:
              "Svätej Lucie, panny a mučenice",
            saintLudgerBishop: "Svätého Ludgera z Münsteru, biskupa",
            saintLudmilaMartyr: "Svätej Ľudmily, mučenice",
            saintLuigiOrionePriest: "Svätého Alojza Orione, kňaza",
            saintLukeTheEvangelist: "Svätého Lukáša, evanjelistu",
            saintLydiaOfPhilippi: "Svätej Lýdie z Filíp",
            saintMacartanBishop: "Svätého Makartána, biskupa",
            saintMacNissiBishop: "Svätého Mac Nissiho, biskupa",
            saintMaelruainMaolruainVirgin:
              "Svätej Máel Ruainy (Maolruainy), biskupa a opáta",
            saintMagnusMartyr: "Svätého Magnusa Erlendssona, mučeníka",
            saintMalachyBishop: "Svätého Malachiáša, biskupa",
            saintMarcellinChampagnatPriest:
              "Svätého Marcelína Champagnata, kňaza",
            saintMargaretMaryAlacoque: "Svätej Margity Márie Alacoque, panny",
            saintMargaretOfAntiochVirginAndMartyr:
              "Svätej Margity Antiochijskej, panny a mučenice",
            saintMargaretOfHungary: "Svätej Margity Uhorskej, rehoľnice",
            saintMargaretOfScotland: "Svätej Margity Škótskej",
            saintMargaretOfScotlandSaintGertrudeTheGreatVirgin:
              "Svätej Margity Škótskej/Svätej Gertrúdy, panny",
            saintMargueriteBourgeoysVirgin: "Svätej Margaréty Bourgeoys, panny",
            saintMargueriteDYouvilleReligious:
              "Svätej Margaréty d’Youville, rehoľnice",
            saintMariaDeJesusSacramentadoVenegasVirgin:
              "Svätej Márie od Ježiša v Najsvätejšej Sviatosti, Panny",
            saintMariaGorettiVirginAndMartyr:
              "Svätej Márie Goretti, panny a mučenice",
            saintMariaMicaelaOfTheBlessedSacramentVirgin:
              "Svätej Márie Michaely od Najsvätejšej Sviatosti, rehoľnice",
            saintMarianaDeJesusDeParedesVirgin:
              "Svätej Márie Anny od Ježiša (de Paredes), panny",
            saintMarieOfTheIncarnationReligious:
              "Svätej Márie od Vtelenia, rehoľnice",
            saintMarina: "Svätej Maríny",
            saintMarkApostle: "Svätého Marka, apoštola",
            saintMarkoKrizinPriestAndMartyr:
              "Svätého Marka Križina, kňaza a mučeníka",
            saintMarkTheEvangelist: "Svätého Marka, evanjelistu",
            saintMaroun: "Svätého Maróna, pustovníka",
            saintMartha: "Svätej Marty",
            saintMartinDePorresReligious:
              "Svätého Martina de Porres, rehoľníka",
            saintMartinIPopeAndMartyr: "Svätého Martina I., pápeža a mučeníka",
            saintMartinOfToursBishop: "Svätého Martina z Tours, biskupa",
            saintMaryMacKillopVirgin: "Svätej Márie MacKillopovej, Panny",
            saintMaryMagdalene: "Svätej Márie Magdalény",
            saintMaryOfTheCrossVirgin: "Svätej Márie od Kríža, panny",
            saintMatilda: "Svätej Matildy",
            saintMatthewApostleAndEvangelist:
              "Svätého Matúša, apoštola a evanjelistu",
            saintMatthiasTheApostle: "Svätého Mateja, apoštola",
            saintMauriceAndCompanionsMartyrs:
              "Svätého Maurícia a spoločníkov, mučeníkov",
            saintMaurusBishop: "Svätého Maura, biskupa",
            saintMaximilianMaryKolbePriestAndMartyr:
              "Svätého Maximiliána Máriu Kolbeho, kňaza a mučeníka",
            saintMeinradMartyr: "Svätého Meinrada, mučeníka",
            saintMelBishop: "Svätého Mela, biskupa",
            saintMelchiorGrodzieckiPriestAndMartyr:
              "Svätého Melichara Grodzieckého, kňaza a mučeníka",
            saintMiguelFebresCorderoReligious:
              "Svätého Michala Febresa Cordera, rehoľníka",
            saintMolaiseLaisrenLaserianBishop:
              "Svätého Molaise (Laisrena, Laseriana), biskupa",
            saintMonica: "Svätej Moniky",
            saintMoninneVirgin: "Svätej Moninny, panny",
            saintMuiredachBishopSaintAttractaVirginOrSaintLeliaVirgin:
              "Svätého Muredacha, biskupa, alebo svätej Atrakty, panny, alebo svätej Lelie, panny",
            saintMunchinBishop: "Svätého Munchina, biskupa",
            saintNicholasBishop: "Svätého Mikuláša, biskupa",
            saintNicholasOfFlueHermit: "Svätého Mikuláša z Flüe, pustovníka",
            saintNikolaTavelicPriestAndMartyr:
              "Svätého Nikolu Tavelića, kňaza a mučeníka",
            saintNinian: "Svätého Niniána ",
            saintNorbertBishop: "Svätého Norberta, biskupa",
            saintNunoDeSantaMaria: "Svätého Nuna od Svätej Panny",
            saintOdileOfAlsaceAbbess: "Svätej Otílie, opátky",
            saintOlafIiMartyr: "Svätého Olafa II., mučeníka",
            saintOlga: "Svätej Oľgy",
            saintOliverPlunketBishopAndMartyr:
              "Svätého Olivera Plunketa, biskupa a mučeníka",
            saintOliverPlunkettBishopAndMartyr:
              "Svätého Olivera Plunketta, biskupa a mučeníka",
            saintOtteranMonk: "Svätého Otterána, mnícha",
            saintOttoOfBambergBishop: "Svätého Ota z Bambergu, biskupa",
            saintPantaleon: "Svätého Pantaleóna",
            saintPaschalBaylon: "Svätého Paschala Baylóna, rehoľníka",
            saintPatrickBishop: "Svätého Patrika, biskupa",
            saintPaulinaOfTheAgonizingHeartOfJesusVirgin:
              "Svätej Paulíny trpiaceho Srdca Ježišovho, panny",
            saintPaulinusOfNolaBishopSaintsJohnFisherBishopAndThomasMoreMartyrs:
              "Svätého Pavlína z Noly, biskupa/Svätých Jána Fishera, biskupa, a Tomáša Mórusa, mučeníkov",
            saintPaulinusOfTrierBishop: "Svätého Paulína z Trevíra, biskupa",
            saintPaulinusOfYorkBishop: "Svätého Paulína z Yorku, biskupa",
            saintPaulMikiAndCompanionsMartyrs:
              "Svätého Pavla Mikiho a spoločníkov, mučeníkov",
            saintPaulOfTheCrossPriest: "Svätého Pavla z Kríža, kňaza",
            saintPedroCalungsodMartyr: "Svätého Petra Calungsoda, mučeníka",
            saintPelagiusMartyr: "Svätého Pelágia z Córdoby, mučeníka",
            saintPeterCanisiusPriestAndDoctor:
              "Svätého Petra Kanízia, kňaza a učiteľa Cirkvi",
            saintPeterChanelPriestAndMartyrSaintLouisGrignonDeMontfortPriest:
              "Svätého Petra Chanela, kňaza a mučeníka/Svätého Ľudovíta Márie Grignion de Montfort, kňaza",
            saintPeterChrysologusBishopAndDoctor:
              "Svätého Petra Chryzológa, biskupa a učiteľa Cirkvi",
            saintPeterClaverPriest: "Svätého Petra Clavera, kňaza",
            saintPeterDamianBishopAndDoctorOfTheChurch:
              "Svätého Petra Damianiho, biskupa a učiteľa Cirkvi",
            saintPeterOfAlcantaraPriest: "Saint Peter of Alkantary, kňaza",
            saintPhilipNeriPriest: "Svätého Filipa Neriho, kňaza",
            saintPioOfPietralcina: "Svätého Pia z Pietrelčiny, kňaza",
            saintPioOfPietrelcinaPadrePioPriest:
              "Svätého Pia z Pietrelčiny, kňaza",
            saintPiusVPope: "Svätého Pia V., pápeža",
            saintPiusXPope: "Svätého Pia X., pápeža",
            saintPolycarpBishopAndMartyr:
              "Svätého Polykarpa, biskupa a mučeníka",
            saintPothinusBishopSaintBlAndinaVirginAndTheirCompanionsMartyrs:
              "Svätých Potína, biskupa, Blandíny, panny, a ich spoločníkov, mučeníkov",
            saintProcopiusAbbot: "Svätého Prokopa, opáta",
            saintPubliusBishop: "Svätého Publia, biskupa",
            saintQuirinusOfSescia: "Svätého Kvirína zo Sisaku",
            saintRabanusMaurusBishop: "Svätého Rabana Maura, biskupa",
            saintRadimBishop: "Svätého Radima, biskupa",
            saintRafaelGuizarYValenciaBishop:
              "Svätého Rafaela Guízara, biskupa",
            saintRafalKalinowskiPriest: "Svätého Rafael Kalinowského, kňaza",
            saintRafqaRebeccaVirgin: "Svätej Rafky (Rebeky), panny",
            saintRaymondOfPenyafortPriest:
              " Svätého Rajmunda z Peňafortu, kňaza",
            saintRemigiusBishop: "Svätého Remígia, biskupa",
            saintRichardGwynMartyr: "Svätého Richarda Gwyna, mučeníka",
            saintRichardOfChichesterBishop:
              " Svätého Richarda z Chichesteru, biskupa",
            saintRitaOfCascia: "Svätej Rity z Cascie, rehoľnice",
            saintRobertBellarmineBishopAndDoctor:
              "Svätého Róberta Bellarmína, biskupa a učiteľa Cirkvi",
            saintRocco: "Svätého Rocha, pútnika",
            saintRoch: "Svätého Rochusa",
            saintRomualdAbbot: "Svätého Romualda, opáta",
            saintRoseOfLima: "Svätej Ruženy Limskej, panny",
            saintRosePhilippineDuchesneVirgin:
              "Svätej Ruženy Filipíny Duchesne, panny",
            saintsAlbanJuliusAndAaronMartyrs:
              "Svätého Albána, Júlia and Árona, mučeníkov",
            saintsAndrewZorardAndBenedictHermits:
              "Svätých Andreja-Svorada a Benedikta, pustovníkov",
            saintsAugustineZhaoRongPriestAndCompanionsMartyrs:
              "Svätých Augustína Zhao Rong, kňaza, a spoločníkov, mučeníkov",
            saintsBasilTheGreatAndGregoryNazianzenBishopsAndDoctors:
              "Svätých Bazila Veľkého a Gregora Nazianzského, biskupov a učiteľov Cirkvi",
            saintsBenedyktJanMateuszIsaakAndKrystynMartyrs:
              "Svätých Benedikta, Jána, Mateja, Izáka a Kristína (Piatich bratov pustovníkov), mučeníkov",
            saintsBorisAndGlebMartyrs: "Svätých Borisa a Gleba, mučeníkov",
            saintsCanuteEricAndOlafMartyrs:
              "Svätých Kanuta, Erika a Olafa, mučeníkov",
            saintsChadAndCeddBishop: "Svätých Chada a Cedda, biskupov",
            saintsCharlesLwangaAndCompanionsMartyrs:
              "Svätých Karola Lwangu a spoločníkov, mučeníkov",
            saintScholasticaVirgin: "Svätej Školastiky, panny",
            saintsConradAndGebhardOfConstanceBishops:
              "Svätých Konráda a Gebharda z Kostnice, biskupov",
            saintsCorneliusPopeAndCyprianBishopMartyrs:
              "Svätých Kornélia, pápeža, a Cypriána, biskupa, mučeníkov",
            saintsCosmasAndDamian: "Svätých Kozmu a Damiána, mučeníkov",
            saintsCosmasAndDamianMartyrs: "Svätých Kozmu a Damiána, mučeníkov",
            saintsCyrilMonkAndMethodiusBishop:
              "Svätých Cyrila a Metoda, slovanských vierozvestov",
            saintSenanBishop: "Svätého Senana, biskupa",
            saintSeverinusOfNoricumMonk: "Svätého Severína z Norika, kňaza",
            saintsFabianPopeAndSebastianMartyrs:
              "Svätých Fabiána, pápeža, a Šebastiána, mučeníkov",
            saintsFelipeDeJesusPaulMikiAndCompanionsMartyrs:
              "Svätého Filipa od Ježiša, Pavla Mikiho a spoločníkov, mučeníkov",
            saintsFructuosusBishopAndAuguriusAndEulogiusDeaconsMartyrs:
              "Svätých Fruktuóza z Bragy, biskupa, a Augúria a Eulógia, diakonov, mučeníkov",
            saintsHenryAndCunigunde: "Svätého Henricha a Kunigundy",
            saintSigismundMartyr: "Svätého Žigmunda Burgundského, mučeníka",
            saintSimonOfLipnicaPriest: "Svätého Šimona z Lipnice, kňaza",
            saintSixtusIiPopeAndCompanionsMartyrsSaintCajetanPriest:
              "Svätých Sixta II., pápeža, a jeho spoločníkov, mučeníkov/Svätého Kajetána, kňaza",
            saintsJeanDeBrebeufAndIsaacJoguesPriestsAndCompanionsMartyrsSaintPaulOfTheCrossPriest:
              "Svätých Jána de Brébeuf a Izáka Joguesa, kňazov, a ich spoločníkov, mučeníkov/Svätého Pavla z Kríža, kňaza",
            saintsJoachimAndAnne:
              "Svätých Joachima a Anny, rodičov Panny Márie",
            saintsJohnFisherBishopAndThomasMoreMartyrs:
              "Svätých Jána Fishera, biskupa, a Tomáša Mórusa, mučeníkov",
            saintsLawrenceRuizAndCompanionsMartyrs:
              "Svätého Vavrinca Ruiza a spoločníkov, mučeníkov",
            saintsMarcellinusAndPeterMartyrs:
              "Svätých Marcelína a Petra, mučeníkov",
            saintsMargaretClitherowAnneLineAndMargaretWardMartyrs:
              "Svätej Margity Clitherowová, Anny Linová a Margity Wardová, mučeníc",
            saintsMarkoKrizinMelicharGrodeckiAndStephenPongracPriestsAndMartyrs:
              "Svätých troch košických mučeníkov – Marka Križina, Melichara Grodzieckeho a Štefana Pongrácza, kňazov a mučeníkov",
            saintsMichaelGabrielAndRaphaelArchangels:
              "Svätých Michala, Gabriela a Rafaela, archanjelov",
            saintsNereusAndAchilleusMartyrsSaintPancrasMartyr:
              "Svätých Nerea a Achila, mučeníkov/Svätého Pankráca, mučeníka",
            saintSoledadTorresAcostaVirgin:
              "Svätej Márie Soledad Torres y Acosty, panny",
            saintsPedroBautistaPaulMikiAndCompanionsMartyrs:
              "Svätého Petra Bautistu, Pavla Mikiho a spoločníkov, mučeníkov",
            saintsPerpetuaAndFelicityMartyrs:
              "Svätej Perpetuy a Felicity, mučeníc",
            saintsPhilipAndJamesApostles: "Svätých Filipa a Jakuba, apoštolov",
            saintsPhilipEvansAndJohnLloydPriestsAndMartyrs:
              "Svätých Filipa Evansa a Jána Lloyda, kňazov a mučeníkov",
            saintsPontianPopeAndHippolytusPriestMartyrs:
              "Svätých Ponciána, pápeža, a Hipolyta, kňaza, mučeníkov",
            saintSpyridon: "Svätého Spyridóna Trimifuntského, biskupa",
            saintsRoqueGonzalezAlfonsoRodriguezOlmedoAndJuanDelCastilloPriestsAndMartyrs:
              "Svätého Rochusa Gonzáleza, Alfonza Rodrígueza Olmeda a Jána del Castilla, kňazov a mučeníkov",
            saintsRupertAndVirgiliusOfSalzburgBishops:
              "Svätých Ruperta a Virgila zo Salzburgu, biskupov",
            saintsSimonAndJudeApostles: "Svätých Šimona a Júdu, apoštolov",
            saintStanislausBishopAndMartyr:
              "Svätého Stanislava, biskupa a mučeníka",
            saintStanislausKazimierczykPriest:
              "Svätého Stanislava Kazimierczyka, kňaza",
            saintStanislausKostkaReligious:
              "Svätého Stanislava Kostku, rehoľníka",
            saintStephenOfHungary: "Svätého Štefana Uhorského",
            saintStephenTheFirstMartyr: "Svätého Štefana, prvého mučeníka",
            saintsTimothyAndTitusBishops: "Svätých Timoteja a Títa, biskupov",
            saintSunnivaVirginAndMartyr: "Svätej Sunnivy, panny a mučenice",
            saintSwithunBishop: "Svätého Swithuna, biskupa",
            saintSylvesterIPope: "Svätého Silvestra I., pápeža",
            saintTeiloBishop: "Svätého Teila (Teliava), biskupa",
            saintTeresaBenedictaOfTheCrossEdithSteinVirginAndMartyr:
              "Svätej Terézie Benedikty z Kríža (Edity Steinovej), panny a mučenice, spolupatrónky Európy",
            saintTeresaOfCalcuttaReligious:
              "Svätej Terézie z Kalkaty (Matky Terezy), panny a rehoľnice",
            saintTeresaOfJesusJornetEIbarsVirgin:
              "Svätej Terezy od Ježiša Jornet e Ibars, panny",
            saintTeresaOfJesusVirginAndDoctorOfTheChurch:
              "Svätej Terézie od Ježiša (z Ávily), panny a učiteľky Cirkvi",
            saintTeresaOfLosAndesVirgin: "Svätej Terézie z Los Andes, panny",
            saintTheodoreOfCanterburyBishop:
              "Svätého Teodora z Canterbury, biskupa",
            saintTheodosiusOfTheCavesAbbot: "Svätého Teodóza Pečerského, opáta",
            saintTheotoniusPriest: "Svätého Teotónia, kňaza",
            saintThereseOfTheChildJesusVirginAndDoctor:
              "Svätej Terézie od Dieťaťa Ježiša (z Lisieux), panny a učiteľky Cirkvi",
            saintThereseOfTheChildJesusVirginSecondaryPatronessOfFrance:
              "Svätej Terézie od Dieťaťa Ježiša (z Lisieux), panny a učiteľky Cirkvi, sekundárnej patrónky Francúzska",
            saintThomasAquinasPriestAndDoctor:
              "Svätého Tomáša Akvinského, kňaza a učiteľa Cirkvi",
            saintThomasBecketBishopAndMartyr:
              "Svätého Tomáša Becketa, biskupa a mučeníka",
            saintThomasOfVillanovaBishop: "Svätého Tomáša z Villanovy, biskupa",
            saintThomasRokuzayemonPriestAndCompanionsMartyrs:
              "Svätého Tomáša Rokuzayemona, kňaza, a spoločníkov, mučeníkov",
            saintThomasTheApostle: "Svätého Tomáša, apoštola",
            saintThorfinnBishop: "Svätého Torfina Hamarského, biskupa",
            saintThorlacBishop: "Svätého Torlaka, biskupa",
            saintTuribiusOfMogrovejoBishop:
              "Svätého Turibia de Mongrovejo, biskupa",
            saintUlrichOfAugsburg: "Svätého Ulricha, biskupa",
            saintUrsulaAndCompanionsVirginsAndMartyrs:
              "Svätej Uršule a spoločníčok, panien a mučeníc",
            saintUrsulaLedochowskaVirgin: "Svätej Uršule Ledochowskej, panny",
            saintValentineOfRaetiaBishop: "Svätého Valentína z Raetie, biskupa",
            saintVincentDeaconAndMartyr: "Svätého Vincenta, diakona a mučeníka",
            saintVincentDeaconAndMartyrOrSaintMarianneCopeVirgin:
              "Svätého Vincenta zo Saragossy, diakona a mučeníka, alebo svätej Marianny z Molokai, rehoľnice",
            saintVincentDePaulPriest: "Svätého Vincenta de Paul, kňaza",
            saintVincentFerrerPriest: "Svätého Vincenta Ferrera, kňaza",
            saintVincentPallottiPriest: "Svätého Vincenta Pallottiho, kňaza",
            saintVitusMartyr: "Svätého Víta, mučeníka",
            saintVladimirTheGreat: "Svätého Vladimíra Veľkého",
            saintWalburgaAbbess: "Svätej Valburgy, opátky",
            saintWenceslausMartyr: "Svätého Václava, mučeníka",
            saintWenceslausMartyrSaintsLawrenceRuizAndCompanionsMartyrs:
              "Svätého Václava, mučeníka/Svätého Vavrinca Ruiza a spoločníkov, mučeníkov",
            saintWendelinAbbot: "Svätého Vendelína, opáta",
            saintWilfridBishop: "Svätého Vilfrida, biskupa",
            saintWillibaldBishop: "Svätého Willibalda, biskupa",
            saintWillibrordBishop: "Svätého Willibrorda, biskupa",
            saintWinefrideVirgin: "Svätej Winefridy, panny",
            saintWolfgangBishop: "Svätého Wolfganga z Regensburgu, biskupa",
            saintWolfgangOfRegensburgBishop:
              "Svätého Wolfganga z Regensburgu, biskupa",
            saintWulstanBishop: "Svätého Vulstana, biskupa",
            saintZdislava: "Svätej Zdislavy",
            saintZygmuntGorazdowskiPriest:
              "Svätého Žigmunda Gorazdowského, kňaza",
            saintZygmuntSzczesnyFelinskiBishop:
              "Svätého Zygmunta Szczęsného Felińskiho, biskupa",
            santoNinoInfantJesus: "Svätého Dieťaťa z Cebu",
            sevenHolyFoundersOfTheServiteOrder:
              "Siedmich svätých zakladateľov rehole Služobníkov Panny Márie",
            shipwreckOfSaintPaulApostle: "Vraku lode svätého Pavla, apoštola",
            shroveMonday: "Fašiangový pondelok",
            shroveTuesday: "Fašiangový utorok",
            stDunstanArchbishopOfCanterbury:
              "Svätého Dunstana z Canterbury, biskupa",
            theBeheadingOfSaintJohnTheBaptistMartyr:
              "Mučenícka smrť svätého Jána Krstiteľa",
            theEnglishMartyrs: "Svätých anglických mučeníkov",
            theFiveWoundsOfTheLord: "Piatich Rán Krista Pána",
            theMostHolyNameOfJesus: "Najsvätejšieho mena Ježiš",
            theSixWelshMartyrsAndCompanions:
              "Šiestich waleských mučeníkov a spoločníkov",
            transferOfTheRelicsOfSaintStephen:
              "Presunu ostatkov svätého Štefana Uhorského",
            vietnameseMartyrs: "Vietnamských mučeníkov",
            visitationOfTheBlessedVirginMary: "Návšteva Panny Márie",
            waitangiDay: "Deň Waitangi",
          },
        };
      oe.a.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
      var An,
        Sn,
        Pn = function (e) {
          (An = void 0), (Sn = [oe.a.get(ee, "en")]), (e = oe.a.toLower(e));
          var a = /^([a-z]+)-?([a-z]*)/.exec(e),
            t = a[1],
            n = oe.a.toUpper(a[2]),
            i = t + (n ? "-" + n : "");
          (e = t + (n || "")),
            de.a.locale(i),
            de.a.updateLocale(i, { week: { dow: 0 } }),
            n && "en" !== t && oe.a.has(ee, t) && Sn.unshift(oe.a.get(ee, t)),
            "en" !== e && oe.a.has(ee, e) && Sn.unshift(oe.a.get(ee, e));
        },
        bn = function () {
          return (
            oe.a.isUndefined(An) &&
              (An = oe.a.mergeWith.apply(null, [{}].concat(oe.a.reverse(Sn)))),
            An
          );
        },
        En = function (e) {
          var a = de.a.localeData(),
            t = (function (e, a) {
              for (var t = a.split("."); t.length && (e = e[t.shift()]); );
              return e;
            })(bn(), e.key);
          return (
            oe.a.isUndefined(e.week) || (e.week = a.ordinal(e.week)),
            oe.a.isUndefined(e.count) || (e.count = a.ordinal(e.count)),
            oe.a.template(t)(e)
          );
        },
        Dn = function (e) {
          var a =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : "sanctoral";
          return oe.a.map(e, function (e) {
            return (
              oe.a.has(e, "drop") ||
                (e.name = En({ key: "".concat(a, ".").concat(e.key) })),
              e
            );
          });
        },
        Yn = function (e) {
          return oe.a.eq(e, 0) ? ve.SUNDAY : ve.FERIA;
        },
        wn = function (e) {
          return oe.a.map(e, function (e) {
            return (
              (e.source = "l"),
              (e.data.calendar = {
                weeks: e.moment.weeksInYear(),
                week: e.moment.week(),
                day: e.moment.dayOfYear(),
              }),
              e
            );
          });
        },
        Cn = function (e) {
          var a =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            t = Xt(e, a),
            n = $t(e, a),
            i = [];
          return (
            oe.a.each(t, function (e) {
              i.push({
                moment: e,
                type: ve.FERIA,
                name: En({ key: "epiphany.before", day: e.format("dddd") }),
                data: {
                  season: {
                    key: ce.CHRISTMASTIDE,
                    value: En({ key: "christmastide.season" }),
                  },
                  meta: { liturgicalColor: "", titles: [] },
                },
              });
            }),
            oe.a.each(n, function (e) {
              i.push({
                moment: e,
                type: ve.FERIA,
                name: En({ key: "epiphany.after", day: e.format("dddd") }),
                data: {
                  season: {
                    key: ce.CHRISTMASTIDE,
                    value: En({ key: "christmastide.season" }),
                  },
                  meta: { liturgicalColor: "", titles: [] },
                },
              });
            }),
            i
          );
        },
        Rn = function (e) {
          var a = Ht(e),
            t = [];
          return (
            oe.a.each(a, function (e) {
              t.push({
                moment: e,
                type: ve.HOLY_WEEK,
                name: En({ key: "holyWeek.feria", day: e.format("dddd") }),
                data: {
                  season: {
                    key: ce.HOLY_WEEK,
                    value: En({ key: "holyWeek.season" }),
                  },
                  meta: { liturgicalColor: me.PURPLE, titles: [] },
                },
              });
            }),
            t
          );
        },
        Bn = function (e) {
          var a = [];
          oe.a.each(qt(e), function (e, t) {
            a.push({
              moment: e,
              type: Yn(e.day()),
              name: En({
                key: oe.a.eq(e.day(), 0) ? "advent.sunday" : "advent.feria",
                day: e.format("dddd"),
                week: Math.floor(t / 7) + 1,
              }),
              data: {
                season: { key: ce.ADVENT, value: En({ key: "advent.season" }) },
                meta: {
                  liturgicalColor:
                    oe.a.eq(Math.floor(t / 7), 2) && oe.a.eq(e.day(), 0)
                      ? me.ROSE
                      : me.PURPLE,
                  titles: [],
                },
              },
            });
          }),
            (a = oe.a.sortBy(a, function (e) {
              return e.moment.valueOf();
            }));
          var t = 0;
          return (
            oe.a.map(a, function (e, a) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = e.data.meta || {}),
                oe.a.eq(a % 7, 0) && (t++, oe.a.gt(t, 4) && (t = 1)),
                (e.data.meta.psalterWeek = { key: t, value: ye[t] }),
                (e.data.meta.liturgicalColor =
                  e.data.meta.liturgicalColor || me.PURPLE),
                e
              );
            }),
            wn(a)
          );
        },
        Hn = function (e, a) {
          var t =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n =
              !(arguments.length > 3 && void 0 !== arguments[3]) ||
              arguments[3],
            i = Et(e, a, t),
            r = At(e),
            o = Cn(e + 1, t),
            s = [],
            d = 0;
          oe.a.each(i, function (e) {
            var a = e.day();
            oe.a.eq(a, 0) && d++,
              s.push({
                moment: e,
                type: Yn(a),
                name: En({
                  key: oe.a.eq(a, 0)
                    ? "christmastide.sunday"
                    : "christmastide.day",
                  day: e.format("dddd"),
                  count: d,
                }),
                data: {
                  season: {
                    key: ce.CHRISTMASTIDE,
                    value: En({ key: "christmastide.season" }),
                  },
                },
              });
          });
          var u = [];
          oe.a.each(r, function (e, a) {
            u.push({
              moment: e,
              type: Yn(e.day()),
              name: En({ key: "christmastide.octave", count: a + 1 }),
              data: {
                season: {
                  key: ce.CHRISTMASTIDE,
                  value: En({ key: "christmastide.season" }),
                },
              },
            });
          }),
            (s =
              !0 === n
                ? oe.a.uniqBy(oe.a.union(o, u, s), function (e) {
                    return e.moment.valueOf();
                  })
                : oe.a.uniqBy(oe.a.union(u, s), function (e) {
                    return e.moment.valueOf();
                  })),
            (s = oe.a.sortBy(s, function (e) {
              return e.moment.valueOf();
            }));
          var l = 4;
          return (
            oe.a.eq(oe.a.head(i).day(), 0) && (l = 0),
            oe.a.map(s, function (e) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = e.data.meta || { titles: [] }),
                oe.a.eq(e.moment.day() % 7, 0) &&
                  (l++, oe.a.gt(l, 4) && (l = 1)),
                (e.data.meta.psalterWeek = { key: l, value: ye[l] }),
                (e.data.meta.liturgicalColor =
                  e.data.meta.liturgicalColor || me.WHITE),
                e
              );
            }),
            wn(s)
          );
        },
        In = function (e, a) {
          var t =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = [];
          oe.a.each(Dt(e, a, t), function (e, a) {
            n.push({
              moment: e,
              type: oe.a.eq(e.day(), 0) ? ve.SUNDAY : ve.FERIA,
              name: En({
                key: oe.a.eq(e.day(), 0)
                  ? "ordinaryTime.sunday"
                  : "ordinaryTime.feria",
                day: e.format("dddd"),
                week: oe.a.eq(e.day(), 0)
                  ? Math.floor(a / 7) + 2
                  : Math.floor(a / 7) + 1,
              }),
              data: {
                season: {
                  key: ce.EARLY_ORDINARY_TIME,
                  value: En({ key: "ordinaryTime.season" }),
                },
              },
            });
          }),
            (n = oe.a.sortBy(n, function (e) {
              return e.moment.valueOf();
            }));
          var i = 1;
          return (
            oe.a.map(n, function (e) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = e.data.meta || { titles: [] }),
                oe.a.eq(e.moment.day() % 7, 0) &&
                  (i++, oe.a.gt(i, 4) && (i = 1)),
                (e.data.meta.psalterWeek = { key: i, value: ye[i] }),
                (e.data.meta.liturgicalColor =
                  e.data.meta.liturgicalColor || me.GREEN),
                e
              );
            }),
            wn(n)
          );
        },
        zn = function (e) {
          var a = 0,
            t = [];
          oe.a.each(Yt(e).reverse(), function (e, n) {
            var i = 34 - Math.floor(n / 7);
            (a = i),
              t.push({
                moment: e,
                type: oe.a.eq(e.day(), 0) ? ve.SUNDAY : ve.FERIA,
                name: En({
                  key: oe.a.eq(e.day(), 0)
                    ? "ordinaryTime.sunday"
                    : "ordinaryTime.feria",
                  day: e.format("dddd"),
                  week: i,
                }),
                data: {
                  season: {
                    key: ce.LATER_ORDINARY_TIME,
                    value: En({ key: "ordinaryTime.season" }),
                  },
                },
              });
          }),
            (t = oe.a.sortBy(t, function (e) {
              return e.moment.valueOf();
            }));
          var n = a % 4;
          return (
            oe.a.eq(n, 0) && (n = 4),
            oe.a.map(t, function (e) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = e.data.meta || { titles: [] }),
                oe.a.eq(e.moment.day() % 7, 0) &&
                  (n++, oe.a.gt(n, 4) && (n = 1)),
                (e.data.meta.psalterWeek = { key: n, value: ye[n] }),
                oe.a.isUndefined(e.data.meta.liturgicalColor) &&
                  (e.data.meta.liturgicalColor = me.GREEN),
                e
              );
            }),
            wn(t)
          );
        },
        jn = function (e) {
          var a = Ct(e),
            t = Rt(e),
            n = [],
            i = [];
          oe.a.each(a, function (e, a) {
            n.push({
              moment: e,
              type: ve.FERIA,
              name: En({
                key:
                  oe.a.gt(a, 0) && oe.a.lt(a, 4)
                    ? "lent.day_after_ash_wed"
                    : "lent.feria",
                day: e.format("dddd"),
                week: Math.floor((a - 4) / 7) + 1,
              }),
              data: {
                season: { key: ce.LENT, value: En({ key: "lent.season" }) },
              },
            });
          }),
            oe.a.each(t, function (e, a) {
              i.push({
                moment: e,
                type: ve.SUNDAY,
                name: En({
                  key: "lent.sunday",
                  day: e.format("dddd"),
                  week: a + 1,
                }),
                data: {
                  season: { key: ce.LENT, value: En({ key: "lent.season" }) },
                  meta: {
                    liturgicalColor: oe.a.eq(a, 3) ? me.ROSE : me.PURPLE,
                  },
                },
              });
            });
          var r = Rn(e);
          (n = oe.a.uniqBy(oe.a.union(r, i, n), function (e) {
            return e.moment.valueOf();
          })),
            (n = oe.a.sortBy(n, function (e) {
              return e.moment.valueOf();
            }));
          var o = 4;
          return (
            oe.a.map(n, function (e) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = e.data.meta || { titles: [] }),
                oe.a.eq(e.moment.day() % 7, 0) &&
                  (o++, oe.a.gt(o, 4) && (o = 1)),
                (e.data.meta.psalterWeek = { key: o, value: ye[o] }),
                (e.data.meta.liturgicalColor =
                  e.data.meta.liturgicalColor || me.PURPLE),
                e
              );
            }),
            (n = wn(n))
          );
        },
        Fn = function (e) {
          return oe.a.takeRight(Rn(e), 3);
        },
        Wn = function (e) {
          return oe.a.take(Jn(e), 8);
        },
        Jn = function (e) {
          var a = Vt(e),
            t = Jt(e),
            n = [];
          oe.a.each(a, function (e, a) {
            n.push({
              moment: e,
              type: oe.a.gt(a, 0) && oe.a.lt(a, 7) ? ve.SOLEMNITY : ve.FERIA,
              name: En({
                key:
                  oe.a.gt(a, 0) && oe.a.lt(a, 7)
                    ? "eastertide.octave"
                    : "eastertide.feria",
                day: e.format("dddd"),
                week: Math.floor(a / 7) + 1,
              }),
              data: {
                season: {
                  key: ce.EASTER,
                  value: En({ key: "eastertide.season" }),
                },
              },
            });
          });
          var i = [];
          oe.a.each(t, function (e, a) {
            i.push({
              moment: e,
              type: ve.SUNDAY,
              name: En({
                key: "eastertide.sunday",
                day: e.format("dddd"),
                week: a + 1,
              }),
              data: {
                season: {
                  key: ce.EASTER,
                  value: En({ key: "eastertide.season" }),
                },
              },
            });
          }),
            (n = oe.a.uniqBy(oe.a.union(i, n), function (e) {
              return e.moment.valueOf();
            })),
            (n = oe.a.sortBy(n, function (e) {
              return e.moment.valueOf();
            }));
          var r = 2;
          return (
            oe.a.map(n, function (e, a) {
              return (
                (e.key = oe.a.camelCase(e.name)),
                (e.data.meta = { titles: [] }),
                oe.a.lt(a, 8)
                  ? (e.data.meta.psalterWeek = { key: 5, value: ye[5] })
                  : (oe.a.eq(e.moment.day() % 7, 0) &&
                      (r++, oe.a.gt(r, 4) && (r = 1)),
                    (e.data.meta.psalterWeek = { key: r, value: ye[r] })),
                (e.data.meta.liturgicalColor =
                  e.data.meta.liturgicalColor || me.WHITE),
                e
              );
            }),
            (n = wn(n))
          );
        };
      function Vn(e, a) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(e);
          a &&
            (n = n.filter(function (a) {
              return Object.getOwnPropertyDescriptor(e, a).enumerable;
            })),
            t.push.apply(t, n);
        }
        return t;
      }
      function xn(e) {
        for (var a = 1; a < arguments.length; a++) {
          var t = null != arguments[a] ? arguments[a] : {};
          a % 2
            ? Vn(Object(t), !0).forEach(function (a) {
                Nn(e, a, t[a]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
            : Vn(Object(t)).forEach(function (a) {
                Object.defineProperty(
                  e,
                  a,
                  Object.getOwnPropertyDescriptor(t, a)
                );
              });
        }
        return e;
      }
      function Nn(e, a, t) {
        return (
          a in e
            ? Object.defineProperty(e, a, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[a] = t),
          e
        );
      }
      function Gn(e, a) {
        if (null == e) return {};
        var t,
          n,
          i = (function (e, a) {
            if (null == e) return {};
            var t,
              n,
              i = {},
              r = Object.keys(e);
            for (n = 0; n < r.length; n++)
              (t = r[n]), a.indexOf(t) >= 0 || (i[t] = e[t]);
            return i;
          })(e, a);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          for (n = 0; n < r.length; n++)
            (t = r[n]),
              a.indexOf(t) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, t) &&
                  (i[t] = e[t]));
        }
        return i;
      }
      var Kn = function (e, a) {
        var t = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
          r = [
            {
              key: "immaculateConception",
              type: ve.SOLEMNITY,
              moment: on(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "christmas",
              type: ve.SOLEMNITY,
              moment: vt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "maryMotherOfGod",
              type: ve.SOLEMNITY,
              moment: St(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "epiphany",
              type: ve.SOLEMNITY,
              moment: Tt(e, t),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "trinitySunday",
              type: ve.SOLEMNITY,
              moment: dn(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "corpusChristi",
              type: ve.SOLEMNITY,
              moment: un(e, n),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "sacredHeartOfJesus",
              type: ve.SOLEMNITY,
              moment: ln(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "birthOfJohnTheBaptist",
              type: ve.SOLEMNITY,
              moment: an(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "peterAndPaulApostles",
              type: ve.SOLEMNITY,
              moment: tn(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.RED } },
            },
            {
              key: "assumption",
              type: ve.SOLEMNITY,
              moment: nn(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "allSaints",
              type: ve.SOLEMNITY,
              moment: rn(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "christTheKing",
              type: ve.SOLEMNITY,
              moment: wt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "josephHusbandOfMary",
              type: ve.SOLEMNITY,
              moment: Qt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "annunciation",
              type: ve.SOLEMNITY,
              moment: en(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "easter",
              type: ve.SOLEMNITY,
              moment: Nt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "divineMercySunday",
              type: ve.SOLEMNITY,
              moment: Gt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "ascension",
              type: ve.SOLEMNITY,
              moment: sn(e, i),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
            {
              key: "pentecostSunday",
              type: ve.SOLEMNITY,
              moment: Kt(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.RED } },
            },
            {
              key: "ashWednesday",
              type: ve.FERIA,
              moment: Bt(e),
              data: {
                prioritized: !0,
                season: { key: ce.LENT, value: En({ key: "lent.season" }) },
                meta: { liturgicalColor: me.PURPLE },
              },
            },
            {
              key: "palmSunday",
              type: ve.SUNDAY,
              moment: It(e),
              data: {
                prioritized: !0,
                season: {
                  key: ce.HOLY_WEEK,
                  value: En({ key: "holyWeek.season" }),
                },
                meta: { liturgicalColor: me.RED },
              },
            },
            {
              key: "holyThursday",
              type: ve.TRIDUUM,
              moment: zt(e),
              data: {
                prioritized: !0,
                season: {
                  key: ce.HOLY_WEEK,
                  value: En({ key: "holyWeek.season" }),
                },
                meta: { liturgicalColor: me.WHITE, titles: [he.TRIDUUM] },
              },
            },
            {
              key: "goodFriday",
              type: ve.TRIDUUM,
              moment: jt(e),
              data: {
                prioritized: !0,
                season: {
                  key: ce.HOLY_WEEK,
                  value: En({ key: "holyWeek.season" }),
                },
                meta: { liturgicalColor: me.RED, titles: [he.TRIDUUM] },
              },
            },
            {
              key: "holySaturday",
              type: ve.TRIDUUM,
              moment: Ft(e),
              data: {
                prioritized: !0,
                season: {
                  key: ce.HOLY_WEEK,
                  value: En({ key: "holyWeek.season" }),
                },
                meta: { liturgicalColor: me.WHITE, titles: [he.TRIDUUM] },
              },
            },
            {
              key: "holyFamily",
              type: ve.FEAST,
              moment: yn(e),
              data: {
                prioritized: !0,
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.FEAST_OF_THE_LORD],
                },
              },
            },
            {
              key: "baptismOfTheLord",
              type: ve.FEAST,
              moment: Pt(e, t),
              data: {
                prioritized: !0,
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.FEAST_OF_THE_LORD],
                },
              },
            },
            {
              key: "presentationOfTheLord",
              type: ve.FEAST,
              moment: bt(e),
              data: {
                prioritized: !0,
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.FEAST_OF_THE_LORD],
                },
              },
            },
            {
              key: "transfiguration",
              type: ve.FEAST,
              moment: cn(e),
              data: {
                prioritized: !0,
                meta: {
                  liturgicalColor: me.WHITE,
                  titles: [he.FEAST_OF_THE_LORD],
                },
              },
            },
            {
              key: "theExaltationOfTheHolyCross",
              type: ve.FEAST,
              moment: hn(e),
              data: {
                prioritized: !0,
                meta: {
                  liturgicalColor: me.RED,
                  titles: [he.FEAST_OF_THE_LORD],
                },
              },
            },
            {
              key: "immaculateHeartOfMary",
              type: ve.FEAST,
              moment: mn(e),
              data: { prioritized: !0, meta: { liturgicalColor: me.WHITE } },
            },
          ];
        return oe.a.map(r, function (e) {
          var a = e.key,
            t = e.data,
            n = Gn(e, ["key", "data"]),
            i = En({ key: "celebrations." + a }),
            r = t.meta;
          return (
            oe.a.isUndefined(r) && (t.meta = { titles: [] }),
            xn({ name: i, key: a, data: t }, n)
          );
        });
      };
      function Un(e) {
        return (
          (function (e) {
            if (Array.isArray(e)) {
              for (var a = 0, t = new Array(e.length); a < e.length; a++)
                t[a] = e[a];
              return t;
            }
          })(e) ||
          (function (e) {
            if (
              Symbol.iterator in Object(e) ||
              "[object Arguments]" === Object.prototype.toString.call(e)
            )
              return Array.from(e);
          })(e) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance"
            );
          })()
        );
      }
      function qn(e, a) {
        for (var t = 0; t < a.length; t++) {
          var n = a[t];
          (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            "value" in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n);
        }
      }
      function Zn(e, a, t) {
        return (
          a in e
            ? Object.defineProperty(e, a, {
                value: t,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[a] = t),
          e
        );
      }
      var Xn = (function () {
          function e(a) {
            !(function (e, a) {
              if (!(e instanceof a))
                throw new TypeError("Cannot call a class as a function");
            })(this, e),
              Zn(this, "dateItems", []),
              Zn(this, "config", void 0),
              Zn(this, "startDate", void 0),
              Zn(this, "endDate", void 0),
              (this.config = a),
              "liturgical" === this.config.type
                ? ((this.startDate = Ut(this.config.year)),
                  (this.endDate = Ut(this.config.year + 1).subtract(1, "days")))
                : ((this.startDate = de.a.utc({
                    year: this.config.year,
                    month: 0,
                    day: 1,
                  })),
                  (this.endDate = de.a.utc({
                    year: this.config.year,
                    month: 11,
                    day: 31,
                  })));
          }
          var a, t, n;
          return (
            (a = e),
            (n = [
              {
                key: "_dropItems",
                value: function () {
                  for (
                    var e = arguments.length, a = new Array(e), t = 0;
                    t < e;
                    t++
                  )
                    a[t] = arguments[t];
                  return (
                    a.forEach(function (e, t) {
                      oe.a
                        .map(
                          oe.a.filter(e, function (e) {
                            return oe.a.has(e, "drop") && e.drop;
                          }),
                          "key"
                        )
                        .forEach(function (e) {
                          for (var n = 0; n <= t; n++)
                            oe.a.remove(a[n], function (a) {
                              return a.key === e;
                            });
                        });
                    }),
                    a
                  );
                },
              },
              {
                key: "_filterItemRange",
                value: function (e, a) {
                  for (
                    var t = arguments.length,
                      n = new Array(t > 2 ? t - 2 : 0),
                      i = 2;
                    i < t;
                    i++
                  )
                    n[i - 2] = arguments[i];
                  return n.map(function (t) {
                    return t.filter(function (t) {
                      return (
                        !!t.drop ||
                        (t.moment &&
                          t.moment.isSameOrAfter(e) &&
                          t.moment.isSameOrBefore(a))
                      );
                    });
                  });
                },
              },
              {
                key: "_fetchRegionCalendar",
                value: function (e) {
                  var a = Object.prototype.hasOwnProperty.call(
                    $,
                    oe.a.camelCase(e)
                  )
                    ? oe.a.camelCase(e)
                    : "";
                  return a
                    ? $[a]
                    : {
                        dates: function () {
                          return [];
                        },
                      };
                },
              },
            ]),
            (t = [
              {
                key: "fetch",
                value: function () {
                  var a = this.config,
                    t =
                      "liturgical" === a.type ? [a.year, a.year + 1] : [a.year],
                    n = [],
                    i = [],
                    r = [],
                    o = [];
                  t.forEach(function (t) {
                    (n = [].concat(
                      Un(n),
                      Un(
                        Hn(
                          t - 1,
                          a.christmastideEnds,
                          a.epiphanyOnJan6,
                          a.christmastideIncludesTheSeasonOfEpiphany
                        )
                      ),
                      Un(In(t, a.christmastideEnds, a.epiphanyOnJan6)),
                      Un(jn(t)),
                      Un(Jn(t)),
                      Un(zn(t)),
                      Un(Bn(t)),
                      Un(
                        Hn(
                          t,
                          a.christmastideEnds,
                          a.epiphanyOnJan6,
                          a.christmastideIncludesTheSeasonOfEpiphany
                        )
                      )
                    )),
                      (i = [].concat(
                        Un(i),
                        Un(
                          Kn(
                            t,
                            a.christmastideEnds,
                            a.epiphanyOnJan6,
                            a.corpusChristiOnThursday,
                            a.ascensionOnSunday
                          )
                        )
                      )),
                      (r = [].concat(
                        Un(r),
                        Un(e._fetchRegionCalendar("general").dates(t))
                      )),
                      (o = [].concat(
                        Un(o),
                        Un(e._fetchRegionCalendar(a.country).dates(t))
                      ));
                  });
                  var s = [n, i, r, o];
                  return (
                    (s = e._filterItemRange.apply(
                      e,
                      [this.startDate, this.endDate].concat(Un(s))
                    )),
                    (s = e._dropItems.apply(e, Un(s))),
                    this._push(s),
                    this._sortAndKeepRelevant(),
                    this
                  );
                },
              },
              {
                key: "values",
                value: function () {
                  return this.dateItems;
                },
              },
              {
                key: "_filter",
                value: function (e) {
                  return oe.a.filter(this.dateItems, e);
                },
              },
              {
                key: "_find",
                value: function (e) {
                  return oe.a.find(this.dateItems, e);
                },
              },
              {
                key: "_valuesByDates",
                value: function () {
                  return this.dateItems.reduce(function (e, a) {
                    return (e[a.date] = e[a.date] || []).push(a), e;
                  }, {});
                },
              },
              {
                key: "_removeWhere",
                value: function (e) {
                  oe.a.remove(this.dateItems, e);
                },
              },
              {
                key: "_push",
                value: function (e) {
                  var a = this;
                  e.forEach(function (e, t) {
                    return e.forEach(function (e) {
                      a._checkAndRemoveExistingItem(e), (e._stack = t);
                      var n = a._find({
                          date: e.moment.toISOString(),
                          _stack: 0,
                        }),
                        i = new fn(e, n);
                      a.dateItems.push(i);
                    });
                  });
                },
              },
              {
                key: "_checkAndRemoveExistingItem",
                value: function (e) {
                  var a = this,
                    t = this._filter({ key: e.key });
                  t.length &&
                    t.forEach(function (t) {
                      (!t.data.prioritized ||
                        (t.data.prioritized && e.data && e.data.prioritized)) &&
                        a._removeWhere({ _id: t._id });
                    });
                },
              },
              {
                key: "_sortAndKeepRelevant",
                value: function () {
                  var e = this,
                    a = ve.MEMORIAL,
                    t = ve.slice(0, ve.length - 1);
                  t.splice(t.indexOf(a) + 1, 0, ve[ve.length - 1]),
                    this.dateItems.sort(function (e, a) {
                      var n = e.moment,
                        i = a.moment;
                      if (n.isBefore(i)) return -1;
                      if (n.isAfter(i)) return 1;
                      if (n.isSame(i)) {
                        var r = e.data && e.data.prioritized,
                          o = a.data && a.data.prioritized;
                        if (r && !o) return -1;
                        if (!r && o) return 1;
                        if (r === o) {
                          var s = t.indexOf(e.type),
                            d = t.indexOf(a.type);
                          if (s < d) return -1;
                          if (s > d) return 1;
                          if (s === d) {
                            var u = e._stack,
                              l = a._stack;
                            return u > l ? -1 : u < l ? 1 : 0;
                          }
                        }
                      }
                    });
                  var n = this._valuesByDates();
                  for (var i in n)
                    if (Object.prototype.hasOwnProperty.call(n, i)) {
                      var r = n[i];
                      r.length > 1 &&
                        (r[0].data.prioritized ||
                          t.indexOf(r[0].type) <= t.indexOf(a)) &&
                        r.slice(1, r.length).forEach(function (a) {
                          return e._removeWhere({ _id: a._id });
                        });
                    }
                },
              },
            ]) && qn(a.prototype, t),
            n && qn(a, n),
            e
          );
        })(),
        $n = function () {
          var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          Number.isInteger(e) && (e = { year: e });
          var a = new Ot(e);
          Pn(a.locale);
          var t = new Xn(a).fetch().values();
          return Qn(t, a.query);
        },
        Qn = function () {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            a =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          if (!oe.a.every(e, oe.a.isObject))
            throw "romcal.queryFor can only accept a single dimensional array of objects";
          if (
            !oe.a.isNull(a) &&
            !oe.a.isEmpty(a) &&
            (oe.a.has(a, "month") &&
              (e = oe.a.filter(e, function (e) {
                return oe.a.eq(e.moment.month(), oe.a.get(a, "month"));
              })),
            oe.a.has(a, "day") &&
              (e = oe.a.filter(e, function (e) {
                return oe.a.eq(e.moment.day(), oe.a.get(a, "day"));
              })),
            oe.a.has(a, "title") &&
              (e = oe.a.filter(e, function (e) {
                return oe.a.includes(e.data.meta.titles, oe.a.get(a, "title"));
              })),
            oe.a.has(a, "group"))
          )
            switch (oe.a.get(a, "group")) {
              case "days":
                e = oe.a.groupBy(e, function (e) {
                  return e.moment.day();
                });
                break;
              case "months":
                e = oe.a.groupBy(e, function (e) {
                  return e.moment.month();
                });
                break;
              case "daysByMonth":
                (e = oe.a.groupBy(e, function (e) {
                  return e.moment.month();
                })),
                  (e = oe.a.map(e, function (e) {
                    return oe.a.groupBy(e, function (e) {
                      return e.moment.day();
                    });
                  }));
                break;
              case "weeksByMonth":
                (e = oe.a.groupBy(e, function (e) {
                  return e.moment.month();
                })),
                  (e = oe.a.map(e, function (e) {
                    return oe.a.groupBy(e, function (e) {
                      return e.data.calendar.week;
                    });
                  }));
                break;
              case "cycles":
                e = oe.a.groupBy(e, function (e) {
                  return e.data.meta.cycle.value;
                });
                break;
              case "types":
                e = oe.a.groupBy(e, function (e) {
                  return e.type;
                });
                break;
              case "liturgicalSeasons":
                e = oe.a.groupBy(e, function (e) {
                  return e.data.season.key;
                });
                break;
              case "liturgicalColors":
                e = oe.a.groupBy(e, function (e) {
                  return e.data.meta.liturgicalColor.key;
                });
                break;
              case "psalterWeek":
                e = oe.a.groupBy(e, function (e) {
                  return e.data.meta.psalterWeek.key;
                });
            }
          return e;
        };
      t.d(a, "Countries", function () {
        return ai;
      }),
        t.d(a, "Localizations", function () {
          return ei;
        }),
        t.d(a, "calendarFor", function () {
          return ti;
        }),
        t.d(a, "queryFor", function () {
          return ni;
        }),
        t.d(a, "Locales", function () {
          return ee;
        }),
        t.d(a, "Calendar", function () {
          return ie;
        }),
        t.d(a, "Celebrations", function () {
          return ne;
        }),
        t.d(a, "Dates", function () {
          return Q;
        }),
        t.d(a, "Seasons", function () {
          return te;
        }),
        t.d(a, "Utils", function () {
          return ae;
        }),
        t.d(a, "Cycles", function () {
          return le;
        }),
        t.d(a, "LiturgicalColors", function () {
          return me;
        }),
        t.d(a, "PsalterWeeks", function () {
          return ye;
        }),
        t.d(a, "LiturgicalSeasons", function () {
          return ce;
        }),
        t.d(a, "Titles", function () {
          return he;
        }),
        t.d(a, "Types", function () {
          return ve;
        }),
        Object(ue.extendMoment)(de.a);
      var ei = oe.a.keys(
          oe.a.mapKeys(ee, function (e, a) {
            return oe.a.kebabCase(a);
          })
        ),
        ai = oe.a.keys($),
        ti = ie.calendarFor,
        ni = ie.queryFor;
      a.default = ie;
    },
  ]);
});
//# sourceMappingURL=romcal.bundle.min.js.map
